{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a minimalist high-end fashion website for \"COLOMBE BLANK\" built as a full-stack JavaScript application. The project features clean, monospace typography-based design with a focus on simplicity and elegance. It includes product browsing, cart management, user authentication, and order processing functionality in a luxury ecommerce experience.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n**Recent Update (Aug 21, 2025)**: Restored Node.js/TypeScript full-stack application after database setup and migration issues were resolved.\n\n# System Architecture\n\n## Current Architecture (Full-Stack JavaScript - Aug 21, 2025)\n- **Backend**: Express.js with TypeScript, PostgreSQL database with Drizzle ORM\n- **Frontend**: React with TypeScript using Vite as the build tool\n- **UI Framework**: Custom components built on top of Radix UI primitives with shadcn/ui styling\n- **Styling**: Tailwind CSS with a minimalist monospace design system using custom CSS variables\n- **State Management**: TanStack React Query for server state and React Context for cart management\n- **Routing**: Wouter for lightweight client-side routing\n- **Authentication**: Replit OIDC with Passport.js middleware and session-based auth\n- **Database**: PostgreSQL with Drizzle ORM for schema management and queries\n\n## Database Schema\n- **Users**: Authentication and profile management (id, email, firstName, lastName, profileImageUrl)\n- **Products**: Product catalog (id, name, description, price, category, type, images, sizes, inStock)\n- **Cart Items**: Shopping cart management with user and product relationships\n- **Orders & Order Items**: Complete order processing with item details and pricing\n- **Sessions**: Secure session storage for authentication\n\n## Design System (Maintained)\n- **Typography**: Monospace fonts (Courier New) throughout for consistent branding\n- **Color Scheme**: Neutral palette with black/white primary colors and CSS custom properties for theming\n- **Layout**: Minimal navigation with hamburger menu, slide-out sidebars, and full-screen overlays for product details\n- **Responsive**: Mobile-first approach with custom breakpoints\n- **Interactions**: Smooth animations, modal overlays, accordion FAQ sections, contact forms\n\n# External Dependencies\n\n## Current Dependencies (Full-Stack JavaScript)\n- **Database & Storage**: PostgreSQL database with Drizzle ORM, Session storage with connect-pg-simple\n- **Authentication**: Replit OIDC with Passport.js middleware and OpenID Client  \n- **UI & Styling**: Radix UI, Tailwind CSS, Lucide React icons, shadcn/ui components\n- **Development Tools**: Vite build system, TanStack React Query, React Hook Form\n- **Utilities**: date-fns, clsx, class-variance-authority, memoizee, wouter for routing\n\n## Recent Changes (Aug 21, 2025)\n- **Database Setup**: Successfully created PostgreSQL database and pushed schema using Drizzle\n- **Fixed Startup Issues**: Resolved DATABASE_URL environment variable issues\n- **Application Status**: Server running successfully on port 5000 with all routes operational\n- **Schema Migration**: All tables created (users, products, cart_items, orders, order_items, sessions)\n- **Authentication Ready**: Replit OIDC integration configured and working\n- **Seven-Pointed Star Animation**: Added interactive 7-pointed star with reduced mouse-responsive directional lighting effects\n- **WordPress Conversion**: Complete theme conversion with PHP/CSS/JavaScript (no build tools)\n- **WordPress Backup**: Created `colombe-blank-wordpress-backup.tar.gz` for Local import\n- **Theme Features**: Custom product post types, AJAX cart, contact forms, responsive design\n- **Updated Documentation**: Restored accurate project information and added WordPress backup details","size_bytes":3776},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"#000000\",\n          foreground: \"#FFFFFF\",\n        },\n        secondary: {\n          DEFAULT: \"#FFFFFF\",\n          foreground: \"#000000\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"#F5F5F5\",\n          foreground: \"#000000\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // Custom colors for the design\n        text: \"#333333\",\n        neutral: \"#E8E8E8\",\n      },\n      fontFamily: {\n        sans: [\"Courier New\", \"monospace\"],\n        serif: [\"Georgia\", \"serif\"],\n        mono: [\"Courier New\", \"monospace\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        fadeIn: {\n          from: { opacity: \"0\" },\n          to: { opacity: \"1\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fadeIn 0.3s ease-in-out\",\n      },\n      backdropBlur: {\n        xs: \"2px\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2977},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};\n","size_bytes":4221},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { setupAuth, isAuthenticated } from \"./replitAuth\";\nimport { insertProductSchema, insertCartItemSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Auth middleware\n  await setupAuth(app);\n\n  // Auth routes\n  app.get('/api/auth/user', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const user = await storage.getUser(userId);\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // Product routes\n  app.get('/api/products', async (req, res) => {\n    try {\n      const { category, type } = req.query;\n      const products = await storage.getProducts(\n        category as string,\n        type as string\n      );\n      res.json(products);\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n      res.status(500).json({ message: \"Failed to fetch products\" });\n    }\n  });\n\n  app.get('/api/products/:id', async (req, res) => {\n    try {\n      const product = await storage.getProduct(req.params.id);\n      if (!product) {\n        return res.status(404).json({ message: \"Product not found\" });\n      }\n      res.json(product);\n    } catch (error) {\n      console.error(\"Error fetching product:\", error);\n      res.status(500).json({ message: \"Failed to fetch product\" });\n    }\n  });\n\n  // Admin route to create products (protected)\n  app.post('/api/products', isAuthenticated, async (req, res) => {\n    try {\n      const productData = insertProductSchema.parse(req.body);\n      const product = await storage.createProduct(productData);\n      res.status(201).json(product);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid product data\", errors: error.errors });\n      }\n      console.error(\"Error creating product:\", error);\n      res.status(500).json({ message: \"Failed to create product\" });\n    }\n  });\n\n  // Cart routes (protected)\n  app.get('/api/cart', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const cartItems = await storage.getCartItems(userId);\n      res.json(cartItems);\n    } catch (error) {\n      console.error(\"Error fetching cart:\", error);\n      res.status(500).json({ message: \"Failed to fetch cart\" });\n    }\n  });\n\n  app.post('/api/cart', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const cartItemData = insertCartItemSchema.parse({\n        ...req.body,\n        userId,\n      });\n      const cartItem = await storage.addToCart(cartItemData);\n      res.status(201).json(cartItem);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid cart item data\", errors: error.errors });\n      }\n      console.error(\"Error adding to cart:\", error);\n      res.status(500).json({ message: \"Failed to add to cart\" });\n    }\n  });\n\n  app.patch('/api/cart/:id', isAuthenticated, async (req, res) => {\n    try {\n      const { quantity } = req.body;\n      if (typeof quantity !== 'number' || quantity < 0) {\n        return res.status(400).json({ message: \"Invalid quantity\" });\n      }\n      \n      if (quantity === 0) {\n        await storage.removeCartItem(req.params.id);\n        res.json({ message: \"Item removed from cart\" });\n      } else {\n        const updatedItem = await storage.updateCartItem(req.params.id, quantity);\n        if (!updatedItem) {\n          return res.status(404).json({ message: \"Cart item not found\" });\n        }\n        res.json(updatedItem);\n      }\n    } catch (error) {\n      console.error(\"Error updating cart item:\", error);\n      res.status(500).json({ message: \"Failed to update cart item\" });\n    }\n  });\n\n  app.delete('/api/cart/:id', isAuthenticated, async (req, res) => {\n    try {\n      await storage.removeCartItem(req.params.id);\n      res.json({ message: \"Item removed from cart\" });\n    } catch (error) {\n      console.error(\"Error removing cart item:\", error);\n      res.status(500).json({ message: \"Failed to remove cart item\" });\n    }\n  });\n\n  app.delete('/api/cart', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      await storage.clearCart(userId);\n      res.json({ message: \"Cart cleared\" });\n    } catch (error) {\n      console.error(\"Error clearing cart:\", error);\n      res.status(500).json({ message: \"Failed to clear cart\" });\n    }\n  });\n\n  // Order routes (protected)\n  app.post('/api/orders', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const cartItems = await storage.getCartItems(userId);\n      \n      if (cartItems.length === 0) {\n        return res.status(400).json({ message: \"Cart is empty\" });\n      }\n\n      // Calculate total\n      const total = cartItems.reduce((sum, item) => {\n        return sum + (parseFloat(item.product.price) * (item.quantity || 0));\n      }, 0);\n\n      // Create order\n      const orderData = {\n        userId,\n        total: total.toString(),\n        status: \"pending\",\n      };\n\n      const orderItems = cartItems.map(item => ({\n        productId: item.productId,\n        quantity: item.quantity || 1,\n        size: item.size,\n        price: item.product.price,\n      }));\n\n      const order = await storage.createOrder(orderData, orderItems);\n      \n      // Clear cart after successful order\n      await storage.clearCart(userId);\n      \n      res.status(201).json(order);\n    } catch (error) {\n      console.error(\"Error creating order:\", error);\n      res.status(500).json({ message: \"Failed to create order\" });\n    }\n  });\n\n  app.get('/api/orders', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const orders = await storage.getUserOrders(userId);\n      res.json(orders);\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n      res.status(500).json({ message: \"Failed to fetch orders\" });\n    }\n  });\n\n  app.get('/api/orders/:id', isAuthenticated, async (req, res) => {\n    try {\n      const order = await storage.getOrder(req.params.id);\n      if (!order) {\n        return res.status(404).json({ message: \"Order not found\" });\n      }\n      res.json(order);\n    } catch (error) {\n      console.error(\"Error fetching order:\", error);\n      res.status(500).json({ message: \"Failed to fetch order\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":6737},"server/storage.ts":{"content":"import {\n  users,\n  products,\n  cartItems,\n  orders,\n  orderItems,\n  type User,\n  type UpsertUser,\n  type Product,\n  type InsertProduct,\n  type CartItem,\n  type InsertCartItem,\n  type CartItemWithProduct,\n  type Order,\n  type InsertOrder,\n  type OrderItem,\n  type InsertOrderItem,\n  type OrderWithItems,\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, and, desc } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User operations - mandatory for Replit Auth\n  getUser(id: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n\n  // Product operations\n  getProducts(category?: string, type?: string): Promise<Product[]>;\n  getProduct(id: string): Promise<Product | undefined>;\n  createProduct(product: InsertProduct): Promise<Product>;\n\n  // Cart operations\n  getCartItems(userId: string): Promise<CartItemWithProduct[]>;\n  addToCart(cartItem: InsertCartItem): Promise<CartItem>;\n  updateCartItem(id: string, quantity: number): Promise<CartItem | undefined>;\n  removeCartItem(id: string): Promise<void>;\n  clearCart(userId: string): Promise<void>;\n\n  // Order operations\n  createOrder(order: InsertOrder, items: InsertOrderItem[]): Promise<OrderWithItems>;\n  getUserOrders(userId: string): Promise<OrderWithItems[]>;\n  getOrder(id: string): Promise<OrderWithItems | undefined>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // Product operations\n  async getProducts(category?: string, type?: string): Promise<Product[]> {\n    if (category && type) {\n      return await db.select().from(products)\n        .where(and(eq(products.category, category), eq(products.type, type)))\n        .orderBy(desc(products.createdAt));\n    } else if (category) {\n      return await db.select().from(products)\n        .where(eq(products.category, category))\n        .orderBy(desc(products.createdAt));\n    } else if (type) {\n      return await db.select().from(products)\n        .where(eq(products.type, type))\n        .orderBy(desc(products.createdAt));\n    }\n    \n    return await db.select().from(products).orderBy(desc(products.createdAt));\n  }\n\n  async getProduct(id: string): Promise<Product | undefined> {\n    const [product] = await db.select().from(products).where(eq(products.id, id));\n    return product;\n  }\n\n  async createProduct(product: InsertProduct): Promise<Product> {\n    const [newProduct] = await db.insert(products).values(product).returning();\n    return newProduct;\n  }\n\n  // Cart operations\n  async getCartItems(userId: string): Promise<CartItemWithProduct[]> {\n    return await db\n      .select()\n      .from(cartItems)\n      .leftJoin(products, eq(cartItems.productId, products.id))\n      .where(eq(cartItems.userId, userId))\n      .then(rows => \n        rows.map(row => ({\n          ...row.cart_items,\n          product: row.products!\n        }))\n      );\n  }\n\n  async addToCart(cartItem: InsertCartItem): Promise<CartItem> {\n    // Check if item already exists in cart\n    const [existingItem] = await db\n      .select()\n      .from(cartItems)\n      .where(\n        and(\n          eq(cartItems.userId, cartItem.userId!),\n          eq(cartItems.productId, cartItem.productId!),\n          eq(cartItems.size, cartItem.size || \"\")\n        )\n      );\n\n    if (existingItem) {\n      // Update quantity\n      const [updatedItem] = await db\n        .update(cartItems)\n        .set({\n          quantity: (existingItem.quantity || 0) + (cartItem.quantity || 1),\n          updatedAt: new Date(),\n        })\n        .where(eq(cartItems.id, existingItem.id))\n        .returning();\n      return updatedItem;\n    } else {\n      // Create new cart item\n      const [newItem] = await db.insert(cartItems).values(cartItem).returning();\n      return newItem;\n    }\n  }\n\n  async updateCartItem(id: string, quantity: number): Promise<CartItem | undefined> {\n    const [updatedItem] = await db\n      .update(cartItems)\n      .set({ quantity, updatedAt: new Date() })\n      .where(eq(cartItems.id, id))\n      .returning();\n    return updatedItem;\n  }\n\n  async removeCartItem(id: string): Promise<void> {\n    await db.delete(cartItems).where(eq(cartItems.id, id));\n  }\n\n  async clearCart(userId: string): Promise<void> {\n    await db.delete(cartItems).where(eq(cartItems.userId, userId));\n  }\n\n  // Order operations\n  async createOrder(order: InsertOrder, items: InsertOrderItem[]): Promise<OrderWithItems> {\n    const [newOrder] = await db.insert(orders).values(order).returning();\n    \n    const orderItemsData = items.map(item => ({\n      ...item,\n      orderId: newOrder.id,\n    }));\n    \n    const newOrderItems = await db.insert(orderItems).values(orderItemsData).returning();\n    \n    const orderItemsWithProducts = await Promise.all(\n      newOrderItems.map(async (item) => {\n        const [product] = await db.select().from(products).where(eq(products.id, item.productId!));\n        return { ...item, product: product! };\n      })\n    );\n    \n    return {\n      ...newOrder,\n      orderItems: orderItemsWithProducts,\n    };\n  }\n\n  async getUserOrders(userId: string): Promise<OrderWithItems[]> {\n    const userOrders = await db\n      .select()\n      .from(orders)\n      .where(eq(orders.userId, userId))\n      .orderBy(desc(orders.createdAt));\n\n    const ordersWithItems = await Promise.all(\n      userOrders.map(async (order) => {\n        const items = await db\n          .select()\n          .from(orderItems)\n          .leftJoin(products, eq(orderItems.productId, products.id))\n          .where(eq(orderItems.orderId, order.id));\n\n        const orderItemsWithProducts = items.map(item => ({\n          ...item.order_items,\n          product: item.products!\n        }));\n\n        return {\n          ...order,\n          orderItems: orderItemsWithProducts,\n        };\n      })\n    );\n\n    return ordersWithItems;\n  }\n\n  async getOrder(id: string): Promise<OrderWithItems | undefined> {\n    const [order] = await db.select().from(orders).where(eq(orders.id, id));\n    if (!order) return undefined;\n\n    const items = await db\n      .select()\n      .from(orderItems)\n      .leftJoin(products, eq(orderItems.productId, products.id))\n      .where(eq(orderItems.orderId, order.id));\n\n    const orderItemsWithProducts = items.map(item => ({\n      ...item.order_items,\n      product: item.products!\n    }));\n\n    return {\n      ...order,\n      orderItems: orderItemsWithProducts,\n    };\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":6877},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from 'drizzle-orm';\nimport {\n  index,\n  jsonb,\n  pgTable,\n  timestamp,\n  varchar,\n  text,\n  integer,\n  decimal,\n  boolean,\n} from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table - mandatory for Replit Auth\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User storage table - mandatory for Replit Auth\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const products = pgTable(\"products\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: varchar(\"name\").notNull(),\n  description: text(\"description\"),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  category: varchar(\"category\").notNull(), // 'men', 'women'\n  type: varchar(\"type\").notNull(), // 'clothing', 'accessories', 'shoes'\n  imageUrl: varchar(\"image_url\").notNull(),\n  additionalImages: text(\"additional_images\").array(),\n  videos: text(\"videos\").array(),\n  sizes: text(\"sizes\").array(),\n  inStock: boolean(\"in_stock\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const cartItems = pgTable(\"cart_items\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id, { onDelete: \"cascade\" }),\n  productId: varchar(\"product_id\").references(() => products.id, { onDelete: \"cascade\" }),\n  quantity: integer(\"quantity\").default(1),\n  size: varchar(\"size\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const orders = pgTable(\"orders\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id, { onDelete: \"cascade\" }),\n  total: decimal(\"total\", { precision: 10, scale: 2 }).notNull(),\n  status: varchar(\"status\").default(\"pending\"), // 'pending', 'processing', 'shipped', 'delivered'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const orderItems = pgTable(\"order_items\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  orderId: varchar(\"order_id\").references(() => orders.id, { onDelete: \"cascade\" }),\n  productId: varchar(\"product_id\").references(() => products.id),\n  quantity: integer(\"quantity\").notNull(),\n  size: varchar(\"size\"),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  cartItems: many(cartItems),\n  orders: many(orders),\n}));\n\nexport const productsRelations = relations(products, ({ many }) => ({\n  cartItems: many(cartItems),\n  orderItems: many(orderItems),\n}));\n\nexport const cartItemsRelations = relations(cartItems, ({ one }) => ({\n  user: one(users, {\n    fields: [cartItems.userId],\n    references: [users.id],\n  }),\n  product: one(products, {\n    fields: [cartItems.productId],\n    references: [products.id],\n  }),\n}));\n\nexport const ordersRelations = relations(orders, ({ one, many }) => ({\n  user: one(users, {\n    fields: [orders.userId],\n    references: [users.id],\n  }),\n  orderItems: many(orderItems),\n}));\n\nexport const orderItemsRelations = relations(orderItems, ({ one }) => ({\n  order: one(orders, {\n    fields: [orderItems.orderId],\n    references: [orders.id],\n  }),\n  product: one(products, {\n    fields: [orderItems.productId],\n    references: [products.id],\n  }),\n}));\n\n// Insert schemas\nexport const insertProductSchema = createInsertSchema(products).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertCartItemSchema = createInsertSchema(cartItems).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertOrderSchema = createInsertSchema(orders).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertOrderItemSchema = createInsertSchema(orderItems).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type UpsertUser = typeof users.$inferInsert;\nexport type User = typeof users.$inferSelect;\nexport type Product = typeof products.$inferSelect;\nexport type InsertProduct = z.infer<typeof insertProductSchema>;\nexport type CartItem = typeof cartItems.$inferSelect;\nexport type InsertCartItem = z.infer<typeof insertCartItemSchema>;\nexport type Order = typeof orders.$inferSelect;\nexport type InsertOrder = z.infer<typeof insertOrderSchema>;\nexport type OrderItem = typeof orderItems.$inferSelect;\nexport type InsertOrderItem = z.infer<typeof insertOrderItemSchema>;\n\n// Extended types for frontend\nexport type CartItemWithProduct = CartItem & {\n  product: Product;\n};\n\nexport type OrderWithItems = Order & {\n  orderItems: (OrderItem & { product: Product })[];\n};\n","size_bytes":5361},"client/src/App.tsx":{"content":"import { useState } from \"react\";\nimport { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport NotFound from \"@/pages/not-found\";\nimport Landing from \"@/pages/landing\";\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Contact from \"@/pages/contact\";\nimport FAQ from \"@/pages/faq\";\nimport Support from \"@/pages/support\";\nimport Shipping from \"@/pages/shipping\";\nimport Returns from \"@/pages/returns\";\nimport SizeGuide from \"@/pages/size-guide\";\nimport PentacleStartup from \"@/components/PentacleStartup\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/faq\" component={FAQ} />\n      <Route path=\"/support\" component={Support} />\n      <Route path=\"/shipping\" component={Shipping} />\n      <Route path=\"/returns\" component={Returns} />\n      <Route path=\"/size-guide\" component={SizeGuide} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  const [showStartup, setShowStartup] = useState(true);\n\n  const handleEnterSite = () => {\n    setShowStartup(false);\n  };\n\n  if (showStartup) {\n    return <PentacleStartup onEnter={handleEnterSite} />;\n  }\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1710},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Courier+New:wght@400;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(0, 0%, 20%);\n  --card: hsl(0, 0%, 97%);\n  --card-foreground: hsl(0, 0%, 20%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(0, 0%, 20%);\n  --primary: hsl(0, 0%, 0%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(0, 0%, 100%);\n  --secondary-foreground: hsl(0, 0%, 0%);\n  --muted: hsl(0, 0%, 96%);\n  --muted-foreground: hsl(0, 0%, 20%);\n  --accent: hsl(0, 0%, 96%);\n  --accent-foreground: hsl(0, 0%, 0%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(0, 0%, 91%);\n  --input: hsl(0, 0%, 97%);\n  --ring: hsl(0, 0%, 0%);\n  --chart-1: hsl(0, 0%, 0%);\n  --chart-2: hsl(0, 0%, 20%);\n  --chart-3: hsl(0, 0%, 40%);\n  --chart-4: hsl(0, 0%, 60%);\n  --chart-5: hsl(0, 0%, 80%);\n  --sidebar: hsl(0, 0%, 97%);\n  --sidebar-foreground: hsl(0, 0%, 20%);\n  --sidebar-primary: hsl(0, 0%, 0%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(0, 0%, 96%);\n  --sidebar-accent-foreground: hsl(0, 0%, 0%);\n  --sidebar-border: hsl(0, 0%, 91%);\n  --sidebar-ring: hsl(0, 0%, 0%);\n  --font-sans: 'Courier New', monospace;\n  --font-serif: Georgia, serif;\n  --font-mono: 'Courier New', monospace;\n  --radius: 0.5rem;\n  --text: hsl(0, 0%, 20%);\n  --neutral: hsl(0, 0%, 91%);\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(0, 0%, 91%);\n  --card: hsl(0, 0%, 10%);\n  --card-foreground: hsl(0, 0%, 85%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(0, 0%, 91%);\n  --primary: hsl(0, 0%, 100%);\n  --primary-foreground: hsl(0, 0%, 0%);\n  --secondary: hsl(0, 0%, 15%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(0, 0%, 9%);\n  --muted-foreground: hsl(0, 0%, 46%);\n  --accent: hsl(0, 0%, 8%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(0, 0%, 15%);\n  --input: hsl(0, 0%, 18%);\n  --ring: hsl(0, 0%, 100%);\n  --sidebar: hsl(0, 0%, 10%);\n  --sidebar-foreground: hsl(0, 0%, 85%);\n  --sidebar-primary: hsl(0, 0%, 100%);\n  --sidebar-primary-foreground: hsl(0, 0%, 0%);\n  --sidebar-accent: hsl(0, 0%, 8%);\n  --sidebar-accent-foreground: hsl(0, 0%, 100%);\n  --sidebar-border: hsl(0, 0%, 26%);\n  --sidebar-ring: hsl(0, 0%, 100%);\n  --text: hsl(0, 0%, 80%);\n  --neutral: hsl(0, 0%, 15%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-mono bg-background text-foreground;\n    font-size: 12px;\n    line-height: 1.2;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-rendering: optimizeLegibility;\n    font-feature-settings: \"kern\" 1;\n  }\n  \n  /* Improve text sharpness */\n  .font-mono {\n    font-family: 'Courier New', Courier, monospace;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-rendering: optimizeLegibility;\n    font-synthesis: none;\n  }\n}\n\n@layer utilities {\n  .menu-overlay {\n    backdrop-filter: blur(10px);\n    background: rgba(245, 245, 245, 0.95);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .product-overlay {\n    backdrop-filter: blur(15px);\n    background: rgba(255, 255, 255, 0.98);\n  }\n\n  .vertical-image {\n    aspect-ratio: 3/4;\n    object-fit: cover;\n  }\n\n  .fade-in {\n    animation: fadeIn 0.3s ease-in-out;\n  }\n\n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n  \n  /* Enhanced text rendering for menus and all elements */\n  .text-sharp,\n  body,\n  * {\n    -webkit-font-smoothing: antialiased !important;\n    -moz-osx-font-smoothing: grayscale !important;\n    text-rendering: optimizeLegibility !important;\n    font-feature-settings: \"liga\" 1, \"kern\" 1 !important;\n    backface-visibility: hidden;\n    transform: translateZ(0);\n  }\n  \n  /* Extra sharpness for navigation and menus */\n  nav, nav *, \n  .menu-overlay, .menu-overlay *,\n  button, button *,\n  a, a * {\n    -webkit-font-smoothing: antialiased !important;\n    -moz-osx-font-smoothing: grayscale !important;\n    text-rendering: optimizeLegibility !important;\n    font-feature-settings: \"liga\" 1, \"kern\" 1 !important;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n}\n\n/* Custom color classes */\n.text-primary {\n  color: hsl(0, 0%, 0%);\n}\n\n.bg-primary {\n  background-color: hsl(0, 0%, 0%);\n}\n\n.text-secondary {\n  color: hsl(0, 0%, 100%);\n}\n\n.bg-secondary {\n  background-color: hsl(0, 0%, 100%);\n}\n\n.text-accent {\n  color: hsl(0, 0%, 96%);\n}\n\n.bg-accent {\n  background-color: hsl(0, 0%, 96%);\n}\n\n.text-text {\n  color: hsl(0, 0%, 20%);\n}\n\n.text-neutral {\n  color: hsl(0, 0%, 91%);\n}\n\n.bg-neutral {\n  background-color: hsl(0, 0%, 91%);\n}\n\n.border-neutral {\n  border-color: hsl(0, 0%, 91%);\n}\n\n.font-mono {\n  font-family: 'Courier New', monospace;\n}\n","size_bytes":4956},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/CartOverlay.tsx":{"content":"import React from \"react\";\nimport { X, Minus, Plus } from \"lucide-react\";\nimport { useCart } from \"@/context/CartContext\";\n\ninterface CartOverlayProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function CartOverlay({ isOpen, onClose }: CartOverlayProps) {\n  const { cartItems, cartTotal, updateCartItem, removeCartItem, createOrder } = useCart();\n\n  if (!isOpen) return null;\n\n  const handleQuantityChange = (id: string, currentQuantity: number | null, change: number) => {\n    const newQuantity = (currentQuantity || 0) + change;\n    if (newQuantity <= 0) {\n      removeCartItem(id);\n    } else {\n      updateCartItem(id, newQuantity);\n    }\n  };\n\n  const handleCheckout = () => {\n    createOrder();\n    onClose();\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 product-overlay fade-in\">\n      <div className=\"flex h-full\">\n        {/* Close Button */}\n        <button \n          onClick={onClose}\n          className=\"absolute top-6 right-6 text-primary hover:text-text transition-colors z-10\"\n        >\n          <X size={20} />\n        </button>\n        \n        {/* Cart Content */}\n        <div className=\"flex-1 flex items-center justify-center p-12\">\n          <div className=\"max-w-2xl w-full\">\n            <h2 className=\"text-sm tracking-wider mb-8 text-primary font-mono\">SHOPPING CART</h2>\n            \n            <div className=\"space-y-6\">\n              {cartItems.length === 0 ? (\n                <div className=\"text-xs text-text font-mono\">Your cart is empty</div>\n              ) : (\n                cartItems.map((item) => (\n                  <div key={item.id} className=\"flex items-center space-x-4 border-b border-neutral pb-4\">\n                    <img \n                      src={item.product.imageUrl}\n                      alt={item.product.name}\n                      className=\"w-20 h-24 object-cover\"\n                    />\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-xs font-mono mb-1\">{item.product.name}</h3>\n                      <p className=\"text-xs text-text font-mono mb-2\">€{item.product.price}</p>\n                      {item.size && (\n                        <p className=\"text-xs text-text font-mono\">Size: {item.size}</p>\n                      )}\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => handleQuantityChange(item.id, item.quantity, -1)}\n                        className=\"w-6 h-6 border border-neutral flex items-center justify-center hover:bg-primary hover:text-secondary transition-colors\"\n                      >\n                        <Minus size={12} />\n                      </button>\n                      <span className=\"text-xs font-mono w-8 text-center\">{item.quantity}</span>\n                      <button\n                        onClick={() => handleQuantityChange(item.id, item.quantity, 1)}\n                        className=\"w-6 h-6 border border-neutral flex items-center justify-center hover:bg-primary hover:text-secondary transition-colors\"\n                      >\n                        <Plus size={12} />\n                      </button>\n                    </div>\n                    <button\n                      onClick={() => removeCartItem(item.id)}\n                      className=\"text-xs text-text hover:text-primary transition-colors font-mono\"\n                    >\n                      REMOVE\n                    </button>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* Cart Summary */}\n        <div className=\"w-80 bg-secondary p-12 flex flex-col justify-center\">\n          <div className=\"space-y-8\">\n            <div>\n              <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono\">SUMMARY</h3>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between text-xs font-mono\">\n                  <span>SUBTOTAL</span>\n                  <span>€{cartTotal.toFixed(2)}</span>\n                </div>\n                <div className=\"flex justify-between text-xs font-mono\">\n                  <span>SHIPPING</span>\n                  <span>FREE</span>\n                </div>\n                <div className=\"border-t border-neutral pt-2 mt-4\">\n                  <div className=\"flex justify-between text-xs font-bold font-mono\">\n                    <span>TOTAL</span>\n                    <span>€{cartTotal.toFixed(2)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {cartItems.length > 0 && (\n              <button \n                onClick={handleCheckout}\n                className=\"w-full bg-primary text-secondary text-xs tracking-wider py-4 hover:bg-text transition-colors font-mono\"\n              >\n                CHECKOUT\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5010},"client/src/components/LeftSidebar.tsx":{"content":"import React from \"react\";\n\ninterface LeftSidebarProps {\n  isOpen: boolean;\n  onCategorySelect: (category: string) => void;\n  onFilterSelect: (type: string) => void;\n  onSortSelect: (sort: string) => void;\n}\n\nexport default function LeftSidebar({ \n  isOpen, \n  onCategorySelect, \n  onFilterSelect, \n  onSortSelect \n}: LeftSidebarProps) {\n  return (\n    <aside \n      className={`fixed left-0 top-16 bottom-0 w-64 bg-accent menu-overlay transform transition-transform duration-300 z-40 text-sharp ${\n        isOpen ? \"translate-x-0\" : \"-translate-x-full\"\n      }`}\n    >\n      <div className=\"p-6 space-y-8\">\n        <div>\n          <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono\">SHOP</h3>\n          <nav className=\"space-y-3\">\n            <button \n              onClick={() => onCategorySelect(\"women\")}\n              className=\"block text-xs hover:text-primary transition-colors font-mono\"\n            >\n              WOMEN\n            </button>\n            <button \n              onClick={() => onCategorySelect(\"men\")}\n              className=\"block text-xs hover:text-primary transition-colors font-mono\"\n            >\n              MEN\n            </button>\n            <button \n              onClick={() => onCategorySelect(\"\")}\n              className=\"block text-xs hover:text-primary transition-colors font-mono\"\n            >\n              ALL\n            </button>\n          </nav>\n        </div>\n        \n        <div>\n          <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono\">FILTER</h3>\n          <div className=\"space-y-3\">\n            <button \n              onClick={() => onFilterSelect(\"clothing\")}\n              className=\"block text-xs hover:text-primary transition-colors text-left font-mono\"\n            >\n              CLOTHING\n            </button>\n            <button \n              onClick={() => onFilterSelect(\"accessories\")}\n              className=\"block text-xs hover:text-primary transition-colors text-left font-mono\"\n            >\n              ACCESSORIES\n            </button>\n            <button \n              onClick={() => onFilterSelect(\"shoes\")}\n              className=\"block text-xs hover:text-primary transition-colors text-left font-mono\"\n            >\n              SHOES\n            </button>\n            <button \n              onClick={() => onFilterSelect(\"\")}\n              className=\"block text-xs hover:text-primary transition-colors text-left font-mono\"\n            >\n              ALL\n            </button>\n          </div>\n        </div>\n        \n        <div>\n          <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono\">SORT</h3>\n          <div className=\"space-y-3\">\n            <button \n              onClick={() => onSortSelect(\"newest\")}\n              className=\"block text-xs hover:text-primary transition-colors text-left font-mono\"\n            >\n              NEWEST\n            </button>\n            <button \n              onClick={() => onSortSelect(\"price_low\")}\n              className=\"block text-xs hover:text-primary transition-colors text-left font-mono\"\n            >\n              PRICE LOW\n            </button>\n            <button \n              onClick={() => onSortSelect(\"price_high\")}\n              className=\"block text-xs hover:text-primary transition-colors text-left font-mono\"\n            >\n              PRICE HIGH\n            </button>\n          </div>\n        </div>\n      </div>\n    </aside>\n  );\n}\n","size_bytes":3444},"client/src/components/ProductDetailOverlay.tsx":{"content":"import React, { useState, useRef, useEffect } from \"react\";\nimport { X, ChevronDown } from \"lucide-react\";\nimport type { Product } from \"@shared/schema\";\nimport { useCart } from \"@/context/CartContext\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface ProductDetailOverlayProps {\n  product: Product | null;\n  onClose: () => void;\n}\n\ninterface MediaItem {\n  type: 'image' | 'video';\n  url: string;\n}\n\nexport default function ProductDetailOverlay({ product, onClose }: ProductDetailOverlayProps) {\n  const [selectedSize, setSelectedSize] = useState<string>(\"\");\n  const [isDetailOpen, setIsDetailOpen] = useState(false);\n  const { addToCart } = useCart();\n  const { isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const mediaContainerRef = useRef<HTMLDivElement>(null);\n\n  if (!product) return null;\n\n  // Combine all media items\n  const mediaItems: MediaItem[] = [\n    { type: 'image', url: product.imageUrl },\n    ...(product.additionalImages?.map(url => ({ type: 'image' as const, url })) || []),\n    ...(product.videos?.map(url => ({ type: 'video' as const, url })) || []),\n  ];\n\n  const handleAddToCart = () => {\n    if (!isAuthenticated) {\n      toast({\n        title: \"Sign in required\",\n        description: \"Please sign in to add items to your cart\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (product.sizes && product.sizes.length > 1 && !selectedSize) {\n      toast({\n        title: \"Size required\",\n        description: \"Please select a size\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    addToCart(product.id, selectedSize || product.sizes?.[0]);\n  };\n\n  const handleBuyNow = () => {\n    if (!isAuthenticated) {\n      toast({\n        title: \"Sign in required\",\n        description: \"Please sign in to purchase items\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (product.sizes && product.sizes.length > 1 && !selectedSize) {\n      toast({\n        title: \"Size required\",\n        description: \"Please select a size\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    addToCart(product.id, selectedSize || product.sizes?.[0]);\n    // In a real app, this would redirect to checkout\n    toast({\n      title: \"Added to cart\",\n      description: \"Item added to cart. Proceed to checkout.\",\n    });\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 product-overlay fade-in\">\n      {/* Close Button */}\n      <button \n        onClick={onClose}\n        className=\"absolute top-6 right-6 text-primary hover:text-text transition-colors z-20 bg-secondary/80 backdrop-blur-sm rounded-full p-2\"\n      >\n        <X size={16} />\n      </button>\n\n      {/* Scrollable Media Container */}\n      <div \n        ref={mediaContainerRef}\n        className=\"w-full h-full overflow-y-auto scrollbar-hide\"\n        style={{ scrollBehavior: 'smooth' }}\n      >\n        {mediaItems.map((media, index) => (\n          <div key={index} className=\"w-full h-screen flex-shrink-0 relative\">\n            {media.type === 'image' ? (\n              <img \n                src={media.url}\n                alt={`${product.name} ${index + 1}`}\n                className=\"w-full h-full object-cover\"\n              />\n            ) : (\n              <video \n                src={media.url}\n                className=\"w-full h-full object-cover\"\n                autoPlay\n                muted\n                loop\n                playsInline\n              />\n            )}\n            \n            {/* Media Counter */}\n            <div className=\"absolute top-6 left-6 bg-secondary/80 backdrop-blur-sm px-3 py-1 rounded-full\">\n              <span className=\"text-xs font-mono tracking-wider\">\n                {index + 1}/{mediaItems.length}\n              </span>\n            </div>\n            \n            {/* Scroll indicator */}\n            {index < mediaItems.length - 1 && (\n              <div className=\"absolute bottom-6 left-1/2 transform -translate-x-1/2\">\n                <div className=\"bg-secondary/80 backdrop-blur-sm rounded-full p-2 animate-bounce\">\n                  <ChevronDown size={16} />\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n        \n        {/* Product Details Section - Last item in scroll */}\n        <div className=\"w-full min-h-screen bg-secondary flex items-center justify-center p-12\">\n          <div className=\"max-w-md space-y-8\">\n            <div className=\"text-center\">\n              <h1 className=\"text-lg tracking-wider mb-4 font-mono\">{product.name}</h1>\n              <p className=\"text-primary text-sm tracking-wider font-mono\">€{product.price}</p>\n            </div>\n            \n            <div>\n              <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono text-center\">DESCRIPTION</h3>\n              <p className=\"text-xs leading-relaxed font-mono text-center\">\n                {product.description}\n              </p>\n            </div>\n            \n            {product.sizes && product.sizes.length > 0 && (\n              <div>\n                <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono text-center\">SIZE</h3>\n                <div className=\"grid grid-cols-4 gap-2\">\n                  {product.sizes.map((size) => (\n                    <button\n                      key={size}\n                      onClick={() => setSelectedSize(size)}\n                      className={`border text-xs py-2 transition-colors font-mono ${\n                        selectedSize === size\n                          ? \"bg-primary text-secondary border-primary\"\n                          : \"border-neutral hover:bg-primary hover:text-secondary\"\n                      }`}\n                    >\n                      {size}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n            \n            <div className=\"space-y-3 pt-4\">\n              <button \n                onClick={handleAddToCart}\n                className=\"w-full bg-primary text-secondary text-xs tracking-wider py-4 hover:bg-text transition-colors font-mono\"\n              >\n                ADD TO CART\n              </button>\n              <button \n                onClick={handleBuyNow}\n                className=\"w-full border border-primary text-primary text-xs tracking-wider py-4 hover:bg-primary hover:text-secondary transition-colors font-mono\"\n              >\n                BUY NOW\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6578},"client/src/components/ProductGrid.tsx":{"content":"import React from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport type { Product } from \"@shared/schema\";\n\ninterface ProductGridProps {\n  category?: string;\n  type?: string;\n  onProductClick: (product: Product) => void;\n}\n\n// Mock product images - replace with actual product data\nconst mockProducts: Product[] = [\n  {\n    id: \"1\",\n    name: \"Minimalist Coat\",\n    description: \"A carefully crafted minimalist coat featuring clean lines and premium materials.\",\n    price: \"450.00\",\n    category: \"women\",\n    type: \"clothing\",\n    imageUrl: \"https://images.unsplash.com/photo-1434389677669-e08b4cac3105?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\",\n    additionalImages: [\"https://images.unsplash.com/photo-1434389677669-e08b4cac3105?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\"],\n    sizes: [\"XS\", \"S\", \"M\", \"L\"],\n    inStock: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n  {\n    id: \"2\",\n    name: \"Structured Shirt\",\n    description: \"White structured shirt with clean architectural lines.\",\n    price: \"280.00\",\n    category: \"women\",\n    type: \"clothing\",\n    imageUrl: \"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\",\n    additionalImages: [\"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\"],\n    sizes: [\"XS\", \"S\", \"M\", \"L\"],\n    inStock: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n  {\n    id: \"3\",\n    name: \"Luxury Handbag\",\n    description: \"Premium leather handbag in neutral tone.\",\n    price: \"720.00\",\n    category: \"women\",\n    type: \"accessories\",\n    imageUrl: \"https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\",\n    additionalImages: [\"https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\"],\n    sizes: [\"ONE SIZE\"],\n    inStock: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n  {\n    id: \"4\",\n    name: \"Minimalist Trousers\",\n    description: \"High-end minimalist black trousers with perfect tailoring.\",\n    price: \"380.00\",\n    category: \"men\",\n    type: \"clothing\",\n    imageUrl: \"https://images.unsplash.com/photo-1506629905607-54777dc6e61c?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\",\n    additionalImages: [\"https://images.unsplash.com/photo-1506629905607-54777dc6e61c?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\"],\n    sizes: [\"28\", \"30\", \"32\", \"34\", \"36\"],\n    inStock: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n  {\n    id: \"5\",\n    name: \"Cashmere Sweater\",\n    description: \"Elegant grey cashmere sweater with luxurious feel.\",\n    price: \"520.00\",\n    category: \"women\",\n    type: \"clothing\",\n    imageUrl: \"https://images.unsplash.com/photo-1544022613-e87ca75a784a?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\",\n    additionalImages: [\"https://images.unsplash.com/photo-1544022613-e87ca75a784a?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\"],\n    sizes: [\"XS\", \"S\", \"M\", \"L\"],\n    inStock: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n  {\n    id: \"6\",\n    name: \"Premium Leather Shoes\",\n    description: \"Handcrafted black leather shoes with timeless design.\",\n    price: \"680.00\",\n    category: \"men\",\n    type: \"shoes\",\n    imageUrl: \"https://images.unsplash.com/photo-1549298916-b41d501d3772?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\",\n    additionalImages: [\"https://images.unsplash.com/photo-1549298916-b41d501d3772?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\"],\n    sizes: [\"39\", \"40\", \"41\", \"42\", \"43\", \"44\"],\n    inStock: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n  {\n    id: \"7\",\n    name: \"Minimalist Dress\",\n    description: \"White minimalist dress with clean silhouette.\",\n    price: \"420.00\",\n    category: \"women\",\n    type: \"clothing\",\n    imageUrl: \"https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\",\n    additionalImages: [\"https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\"],\n    sizes: [\"XS\", \"S\", \"M\", \"L\"],\n    inStock: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n  {\n    id: \"8\",\n    name: \"Leather Jacket\",\n    description: \"High-end leather jacket in classic black.\",\n    price: \"850.00\",\n    category: \"men\",\n    type: \"clothing\",\n    imageUrl: \"https://images.unsplash.com/photo-1551698618-1dfe5d97d256?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\",\n    additionalImages: [\"https://images.unsplash.com/photo-1551698618-1dfe5d97d256?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=800\"],\n    sizes: [\"S\", \"M\", \"L\", \"XL\"],\n    inStock: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n];\n\nexport default function ProductGrid({ category, type, onProductClick }: ProductGridProps) {\n  // Query products from API\n  const { data: products = [], isLoading } = useQuery<Product[]>({\n    queryKey: [\"/api/products\", category, type],\n    retry: false,\n  });\n\n  // Use API data if available, fallback to mock data for demonstration\n  const displayProducts = products.length > 0 ? products : mockProducts;\n  \n  // Filter products based on category and type\n  const filteredProducts = displayProducts.filter(product => {\n    if (category && product.category !== category) return false;\n    if (type && product.type !== type) return false;\n    return true;\n  });\n\n  if (isLoading) {\n    return (\n      <main className=\"pt-16 min-h-screen flex items-center justify-center\">\n        <p className=\"text-text text-xs font-mono\">Loading...</p>\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"pt-16\">\n      <div className=\"space-y-0\">\n        {filteredProducts.map((product) => (\n          <div \n            key={product.id}\n            className=\"product-item cursor-pointer h-screen w-full relative\"\n            onClick={() => onProductClick(product)}\n          >\n            <img \n              src={product.imageUrl}\n              alt={product.name}\n              className=\"w-full h-full object-cover hover:opacity-90 transition-opacity\"\n            />\n          </div>\n        ))}\n        \n        {filteredProducts.length === 0 && (\n          <div className=\"h-screen flex items-center justify-center\">\n            <p className=\"text-text text-xs font-mono\">No products found</p>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n","size_bytes":6460},"client/src/components/RightTextMenu.tsx":{"content":"import React from \"react\";\nimport { Link } from \"wouter\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useCart } from \"@/context/CartContext\";\n\ninterface RightTextMenuProps {\n  isOpen: boolean;\n  onCartToggle: () => void;\n}\n\nexport default function RightTextMenu({ isOpen, onCartToggle }: RightTextMenuProps) {\n  const { isAuthenticated } = useAuth();\n  const { cartCount } = useCart();\n\n  return (\n    <aside \n      className={`fixed right-0 top-16 bottom-0 w-64 bg-accent menu-overlay transform transition-transform duration-300 z-40 text-sharp ${\n        isOpen ? \"translate-x-0\" : \"translate-x-full\"\n      }`}\n    >\n      <div className=\"p-6 space-y-8\">\n        <div>\n          <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono\">ACCOUNT</h3>\n          <nav className=\"space-y-3\">\n            {!isAuthenticated ? (\n              <>\n                <a \n                  href=\"/api/login\" \n                  className=\"block text-xs hover:text-primary transition-colors font-mono\"\n                >\n                  SIGN IN\n                </a>\n                <p className=\"text-xs text-text font-mono opacity-75\">\n                  Sign in to save items to cart\n                </p>\n              </>\n            ) : (\n              <>\n                <a \n                  href=\"/api/logout\" \n                  className=\"block text-xs hover:text-primary transition-colors font-mono\"\n                >\n                  SIGN OUT\n                </a>\n              </>\n            )}\n          </nav>\n        </div>\n        \n        <div>\n          <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono\">SUPPORT</h3>\n          <nav className=\"space-y-3\">\n            <Link to=\"/faq\" className=\"block text-xs hover:text-primary transition-colors font-mono\">\n              FAQ\n            </Link>\n            <Link to=\"/support\" className=\"block text-xs hover:text-primary transition-colors font-mono\">\n              SUPPORT\n            </Link>\n            <Link to=\"/contact\" className=\"block text-xs hover:text-primary transition-colors font-mono\">\n              CONTACT\n            </Link>\n            <Link to=\"/shipping\" className=\"block text-xs hover:text-primary transition-colors font-mono\">\n              SHIPPING\n            </Link>\n            <Link to=\"/returns\" className=\"block text-xs hover:text-primary transition-colors font-mono\">\n              RETURNS\n            </Link>\n            <Link to=\"/size-guide\" className=\"block text-xs hover:text-primary transition-colors font-mono\">\n              SIZE GUIDE\n            </Link>\n          </nav>\n        </div>\n        \n        <div>\n          <h3 className=\"text-xs tracking-wider mb-4 text-primary font-mono\">EXPLORE</h3>\n          <nav className=\"space-y-3\">\n            <Link to=\"/about\" className=\"block text-xs hover:text-primary transition-colors font-mono\">\n              ABOUT\n            </Link>\n          </nav>\n        </div>\n        \n        <div>\n          <button \n            onClick={() => {\n              if (!isAuthenticated) {\n                window.location.href = \"/api/login\";\n              } else {\n                onCartToggle();\n              }\n            }}\n            className=\"text-xs tracking-wider text-primary hover:text-text transition-colors font-mono\"\n          >\n            CART {isAuthenticated ? `(${cartCount})` : '(SIGN IN)'}\n          </button>\n        </div>\n      </div>\n    </aside>\n  );\n}\n","size_bytes":3442},"client/src/components/TopNavigation.tsx":{"content":"import React from \"react\";\n\ninterface TopNavigationProps {\n  onMenuToggle: () => void;\n  onTextMenuToggle: () => void;\n}\n\nexport default function TopNavigation({ onMenuToggle, onTextMenuToggle }: TopNavigationProps) {\n  return (\n    <nav className=\"fixed top-0 left-0 right-0 z-50 bg-secondary border-b border-neutral\">\n      <div className=\"flex items-center justify-between px-6 py-4\">\n        {/* Menu Button */}\n        <button \n          onClick={onMenuToggle}\n          className=\"text-primary hover:text-text transition-colors\"\n        >\n          <span className=\"block w-5 h-0.5 bg-current mb-1\"></span>\n          <span className=\"block w-5 h-0.5 bg-current mb-1\"></span>\n          <span className=\"block w-5 h-0.5 bg-current\"></span>\n        </button>\n        \n        {/* Logo Placeholder */}\n        <div className=\"absolute left-1/2 transform -translate-x-1/2\">\n          <div className=\"h-8 w-32 bg-neutral flex items-center justify-center text-xs font-mono tracking-wider\">\n            COLOMBE BLANK\n          </div>\n        </div>\n        \n        {/* Text Menu */}\n        <button \n          onClick={onTextMenuToggle}\n          className=\"text-primary hover:text-text transition-colors text-xs tracking-wider font-mono\"\n        >\n          MENU\n        </button>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":1312},"client/src/context/CartContext.tsx":{"content":"import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport type { CartItemWithProduct } from \"@shared/schema\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\n\ninterface CartContextType {\n  cartItems: CartItemWithProduct[];\n  cartCount: number;\n  cartTotal: number;\n  addToCart: (productId: string, size?: string, quantity?: number) => void;\n  updateCartItem: (id: string, quantity: number) => void;\n  removeCartItem: (id: string) => void;\n  clearCart: () => void;\n  createOrder: () => void;\n  isLoading: boolean;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport function CartProvider({ children }: { children: React.ReactNode }) {\n  const { isAuthenticated } = useAuth();\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const { data: cartItems = [], isLoading } = useQuery<CartItemWithProduct[]>({\n    queryKey: [\"/api/cart\"],\n    enabled: isAuthenticated,\n    retry: false,\n  });\n\n  const cartCount = cartItems.reduce((sum: number, item: CartItemWithProduct) => sum + (item.quantity || 0), 0);\n  const cartTotal = cartItems.reduce((sum: number, item: CartItemWithProduct) => \n    sum + (parseFloat(item.product.price) * (item.quantity || 0)), 0\n  );\n\n  const addToCartMutation = useMutation({\n    mutationFn: async ({ productId, size, quantity }: { productId: string; size?: string; quantity?: number }) => {\n      await apiRequest(\"POST\", \"/api/cart\", { productId, size, quantity: quantity || 1 });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      toast({\n        title: \"Added to cart\",\n        description: \"Item has been added to your cart\",\n      });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: \"Failed to add item to cart\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateCartMutation = useMutation({\n    mutationFn: async ({ id, quantity }: { id: string; quantity: number }) => {\n      await apiRequest(\"PATCH\", `/api/cart/${id}`, { quantity });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: \"Failed to update cart item\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const removeCartMutation = useMutation({\n    mutationFn: async (id: string) => {\n      await apiRequest(\"DELETE\", `/api/cart/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      toast({\n        title: \"Removed from cart\",\n        description: \"Item has been removed from your cart\",\n      });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: \"Failed to remove item from cart\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const clearCartMutation = useMutation({\n    mutationFn: async () => {\n      await apiRequest(\"DELETE\", \"/api/cart\");\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: \"Failed to clear cart\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const createOrderMutation = useMutation({\n    mutationFn: async () => {\n      await apiRequest(\"POST\", \"/api/orders\");\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/orders\"] });\n      toast({\n        title: \"Order placed\",\n        description: \"Your order has been placed successfully\",\n      });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: \"Failed to place order\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const addToCart = (productId: string, size?: string, quantity?: number) => {\n    if (!isAuthenticated) {\n      toast({\n        title: \"Sign in required\",\n        description: \"Please sign in to add items to your cart\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 1500);\n      return;\n    }\n    addToCartMutation.mutate({ productId, size, quantity });\n  };\n\n  const updateCartItem = (id: string, quantity: number) => {\n    updateCartMutation.mutate({ id, quantity });\n  };\n\n  const removeCartItem = (id: string) => {\n    removeCartMutation.mutate(id);\n  };\n\n  const clearCart = () => {\n    clearCartMutation.mutate();\n  };\n\n  const createOrder = () => {\n    createOrderMutation.mutate();\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems,\n        cartCount,\n        cartTotal,\n        addToCart,\n        updateCartItem,\n        removeCartItem,\n        clearCart,\n        createOrder,\n        isLoading,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n","size_bytes":6918},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}\n","size_bytes":257},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import React, { useState } from \"react\";\nimport TopNavigation from \"@/components/TopNavigation\";\nimport LeftSidebar from \"@/components/LeftSidebar\";\nimport RightTextMenu from \"@/components/RightTextMenu\";\nimport ProductGrid from \"@/components/ProductGrid\";\nimport ProductDetailOverlay from \"@/components/ProductDetailOverlay\";\nimport CartOverlay from \"@/components/CartOverlay\";\nimport { CartProvider } from \"@/context/CartContext\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport type { Product } from \"@shared/schema\";\n\nexport default function Home() {\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false);\n  const [rightMenuOpen, setRightMenuOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  const [cartOpen, setCartOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n  const [selectedType, setSelectedType] = useState<string>(\"\");\n\n  const handleMenuToggle = () => {\n    setLeftSidebarOpen(!leftSidebarOpen);\n    setRightMenuOpen(false);\n  };\n\n  const handleTextMenuToggle = () => {\n    setRightMenuOpen(!rightMenuOpen);\n    setLeftSidebarOpen(false);\n  };\n\n  const handleProductClick = (product: Product) => {\n    setSelectedProduct(product);\n  };\n\n  const handleCloseProduct = () => {\n    setSelectedProduct(null);\n  };\n\n  const handleCartToggle = () => {\n    setCartOpen(!cartOpen);\n    setRightMenuOpen(false);\n  };\n\n  const handleCategorySelect = (category: string) => {\n    setSelectedCategory(category);\n    setSelectedType(\"\"); // Reset type filter when changing category\n    setLeftSidebarOpen(false);\n  };\n\n  const handleFilterSelect = (type: string) => {\n    setSelectedType(type);\n    setLeftSidebarOpen(false);\n  };\n\n  const handleSortSelect = (sort: string) => {\n    // TODO: Implement sorting logic\n    console.log(\"Sort by:\", sort);\n    setLeftSidebarOpen(false);\n  };\n\n  // Close menus when clicking outside\n  const handleOverlayClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      setLeftSidebarOpen(false);\n      setRightMenuOpen(false);\n    }\n  };\n\n  return (\n    <CartProvider>\n      <div className=\"min-h-screen bg-secondary text-text font-mono\">\n        <TopNavigation \n          onMenuToggle={handleMenuToggle}\n          onTextMenuToggle={handleTextMenuToggle}\n        />\n        \n        <LeftSidebar \n          isOpen={leftSidebarOpen}\n          onCategorySelect={handleCategorySelect}\n          onFilterSelect={handleFilterSelect}\n          onSortSelect={handleSortSelect}\n        />\n        \n        <RightTextMenu \n          isOpen={rightMenuOpen}\n          onCartToggle={handleCartToggle}\n        />\n        \n        <ProductGrid \n          category={selectedCategory}\n          type={selectedType}\n          onProductClick={handleProductClick}\n        />\n        \n        <ProductDetailOverlay \n          product={selectedProduct}\n          onClose={handleCloseProduct}\n        />\n        \n        <CartOverlay \n          isOpen={cartOpen}\n          onClose={() => setCartOpen(false)}\n        />\n        \n        {/* Overlay for closing menus */}\n        {(leftSidebarOpen || rightMenuOpen) && (\n          <div \n            className=\"fixed inset-0 z-30 bg-black bg-opacity-20\"\n            onClick={handleOverlayClick}\n          />\n        )}\n      </div>\n    </CartProvider>\n  );\n}\n","size_bytes":3361},"client/src/pages/landing.tsx":{"content":"import React from \"react\";\n\nexport default function Landing() {\n  return (\n    <div className=\"min-h-screen bg-secondary flex items-center justify-center\">\n      <div className=\"text-center space-y-8 px-6\">\n        <div className=\"space-y-4\">\n          <h1 className=\"text-2xl tracking-[0.2em] text-primary font-mono\">\n            COLOMBE BLANK\n          </h1>\n          <p className=\"text-xs tracking-wider text-text font-mono max-w-md mx-auto\">\n            MINIMALISTIC HIGH-END FASHION\n          </p>\n        </div>\n        \n        <div className=\"space-y-4\">\n          <p className=\"text-xs text-text font-mono\">\n            PLEASE SIGN IN TO CONTINUE\n          </p>\n          <a\n            href=\"/api/login\"\n            className=\"inline-block bg-primary text-secondary px-8 py-3 text-xs tracking-wider hover:bg-text transition-colors font-mono\"\n          >\n            SIGN IN\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":946},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"wordpress-backup/files/wp-content/plugins/index.php":{"content":"<?php\n// Silence is golden.","size_bytes":27},"wordpress-backup/files/wp-content/uploads/index.php":{"content":"<?php\n// Silence is golden.","size_bytes":27},"wordpress-backup/files/wp-content/themes/colombe-blank/functions.php":{"content":"<?php\n/**\n * COLOMBE BLANK Theme Functions\n */\n\n// Theme setup\nfunction colombe_blank_setup() {\n    // Add theme support for title tag\n    add_theme_support('title-tag');\n    \n    // Add theme support for post thumbnails\n    add_theme_support('post-thumbnails');\n    \n    // Add theme support for HTML5\n    add_theme_support('html5', array(\n        'search-form',\n        'comment-form',\n        'comment-list',\n        'gallery',\n        'caption',\n    ));\n    \n    // Register navigation menus\n    register_nav_menus(array(\n        'main-menu' => __('Main Menu', 'colombe-blank'),\n        'footer-menu' => __('Footer Menu', 'colombe-blank'),\n    ));\n}\nadd_action('after_setup_theme', 'colombe_blank_setup');\n\n// Enqueue scripts and styles\nfunction colombe_blank_scripts() {\n    wp_enqueue_style('colombe-blank-style', get_stylesheet_uri());\n    wp_enqueue_script('colombe-blank-script', get_template_directory_uri() . '/js/main.js', array(), '1.0.0', true);\n    \n    // Localize script for AJAX\n    wp_localize_script('colombe-blank-script', 'ajax_object', array(\n        'ajax_url' => admin_url('admin-ajax.php'),\n        'nonce' => wp_create_nonce('ajax_nonce')\n    ));\n}\nadd_action('wp_enqueue_scripts', 'colombe_blank_scripts');\n\n// Custom post type for products\nfunction colombe_blank_register_product_post_type() {\n    $args = array(\n        'labels' => array(\n            'name' => __('Products'),\n            'singular_name' => __('Product'),\n            'add_new' => __('Add New Product'),\n            'add_new_item' => __('Add New Product'),\n            'edit_item' => __('Edit Product'),\n            'new_item' => __('New Product'),\n            'view_item' => __('View Product'),\n            'search_items' => __('Search Products'),\n            'not_found' => __('No products found'),\n            'not_found_in_trash' => __('No products found in trash'),\n        ),\n        'public' => true,\n        'has_archive' => true,\n        'supports' => array('title', 'editor', 'thumbnail', 'custom-fields'),\n        'menu_icon' => 'dashicons-products',\n        'rewrite' => array('slug' => 'products'),\n    );\n    register_post_type('product', $args);\n}\nadd_action('init', 'colombe_blank_register_product_post_type');\n\n// Custom fields for products\nfunction colombe_blank_add_product_meta_boxes() {\n    add_meta_box(\n        'product-details',\n        __('Product Details'),\n        'colombe_blank_product_details_callback',\n        'product',\n        'normal',\n        'high'\n    );\n}\nadd_action('add_meta_boxes', 'colombe_blank_add_product_meta_boxes');\n\nfunction colombe_blank_product_details_callback($post) {\n    wp_nonce_field('colombe_blank_save_product_details', 'colombe_blank_product_nonce');\n    \n    $price = get_post_meta($post->ID, '_product_price', true);\n    $category = get_post_meta($post->ID, '_product_category', true);\n    $sizes = get_post_meta($post->ID, '_product_sizes', true);\n    $stock_status = get_post_meta($post->ID, '_stock_status', true);\n    \n    echo '<table class=\"form-table\">';\n    echo '<tr><th><label for=\"product_price\">Price</label></th>';\n    echo '<td><input type=\"text\" id=\"product_price\" name=\"product_price\" value=\"' . esc_attr($price) . '\" /></td></tr>';\n    \n    echo '<tr><th><label for=\"product_category\">Category</label></th>';\n    echo '<td><select id=\"product_category\" name=\"product_category\">';\n    echo '<option value=\"women\"' . selected($category, 'women', false) . '>Women</option>';\n    echo '<option value=\"men\"' . selected($category, 'men', false) . '>Men</option>';\n    echo '<option value=\"clothing\"' . selected($category, 'clothing', false) . '>Clothing</option>';\n    echo '<option value=\"accessories\"' . selected($category, 'accessories', false) . '>Accessories</option>';\n    echo '<option value=\"shoes\"' . selected($category, 'shoes', false) . '>Shoes</option>';\n    echo '</select></td></tr>';\n    \n    echo '<tr><th><label for=\"product_sizes\">Available Sizes</label></th>';\n    echo '<td><input type=\"text\" id=\"product_sizes\" name=\"product_sizes\" value=\"' . esc_attr($sizes) . '\" placeholder=\"XS, S, M, L, XL\" /></td></tr>';\n    \n    echo '<tr><th><label for=\"stock_status\">Stock Status</label></th>';\n    echo '<td><select id=\"stock_status\" name=\"stock_status\">';\n    echo '<option value=\"in_stock\"' . selected($stock_status, 'in_stock', false) . '>In Stock</option>';\n    echo '<option value=\"out_of_stock\"' . selected($stock_status, 'out_of_stock', false) . '>Out of Stock</option>';\n    echo '<option value=\"pre_order\"' . selected($stock_status, 'pre_order', false) . '>Pre-Order</option>';\n    echo '</select></td></tr>';\n    echo '</table>';\n}\n\nfunction colombe_blank_save_product_details($post_id) {\n    if (!isset($_POST['colombe_blank_product_nonce']) || !wp_verify_nonce($_POST['colombe_blank_product_nonce'], 'colombe_blank_save_product_details')) {\n        return;\n    }\n    \n    if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) {\n        return;\n    }\n    \n    if (!current_user_can('edit_post', $post_id)) {\n        return;\n    }\n    \n    if (isset($_POST['product_price'])) {\n        update_post_meta($post_id, '_product_price', sanitize_text_field($_POST['product_price']));\n    }\n    \n    if (isset($_POST['product_category'])) {\n        update_post_meta($post_id, '_product_category', sanitize_text_field($_POST['product_category']));\n    }\n    \n    if (isset($_POST['product_sizes'])) {\n        update_post_meta($post_id, '_product_sizes', sanitize_text_field($_POST['product_sizes']));\n    }\n    \n    if (isset($_POST['stock_status'])) {\n        update_post_meta($post_id, '_stock_status', sanitize_text_field($_POST['stock_status']));\n    }\n}\nadd_action('save_post', 'colombe_blank_save_product_details');\n\n// AJAX handler for contact form\nfunction colombe_blank_handle_contact_form() {\n    // Verify nonce\n    if (!wp_verify_nonce($_POST['nonce'], 'ajax_nonce')) {\n        wp_die('Security check failed');\n    }\n    \n    $name = sanitize_text_field($_POST['name']);\n    $email = sanitize_email($_POST['email']);\n    $subject = sanitize_text_field($_POST['subject']);\n    $message = sanitize_textarea_field($_POST['message']);\n    \n    // Send email (basic implementation)\n    $to = get_option('admin_email');\n    $email_subject = 'Contact Form: ' . $subject;\n    $email_message = \"Name: $name\\nEmail: $email\\n\\nMessage:\\n$message\";\n    $headers = array('Content-Type: text/plain; charset=UTF-8');\n    \n    $sent = wp_mail($to, $email_subject, $email_message, $headers);\n    \n    if ($sent) {\n        wp_send_json_success('Message sent successfully');\n    } else {\n        wp_send_json_error('Failed to send message');\n    }\n}\nadd_action('wp_ajax_contact_form', 'colombe_blank_handle_contact_form');\nadd_action('wp_ajax_nopriv_contact_form', 'colombe_blank_handle_contact_form');\n\n// Custom walker for navigation menus\nclass Colombe_Blank_Walker_Nav_Menu extends Walker_Nav_Menu {\n    function start_el(&$output, $item, $depth = 0, $args = array(), $id = 0) {\n        $classes = empty($item->classes) ? array() : (array) $item->classes;\n        $classes[] = 'sidebar-link';\n        \n        $class_names = join(' ', apply_filters('nav_menu_css_class', array_filter($classes), $item, $args));\n        $class_names = $class_names ? ' class=\"' . esc_attr($class_names) . '\"' : '';\n        \n        $output .= '<a' . $class_names . ' href=\"' . esc_url($item->url) . '\">';\n        $output .= apply_filters('the_title', $item->title, $item->ID);\n        $output .= '</a>';\n    }\n}\n\n// Remove WordPress version from head\nremove_action('wp_head', 'wp_generator');\n\n// Disable file editing\ndefine('DISALLOW_FILE_EDIT', true);\n\n// Custom excerpt length\nfunction colombe_blank_excerpt_length($length) {\n    return 20;\n}\nadd_filter('excerpt_length', 'colombe_blank_excerpt_length');\n\n// Custom excerpt more text\nfunction colombe_blank_excerpt_more($more) {\n    return '...';\n}\nadd_filter('excerpt_more', 'colombe_blank_excerpt_more');\n\n// Add custom body classes\nfunction colombe_blank_body_classes($classes) {\n    if (is_front_page()) {\n        $classes[] = 'home-page';\n    }\n    return $classes;\n}\nadd_filter('body_class', 'colombe_blank_body_classes');\n\n// Widget areas\nfunction colombe_blank_widgets_init() {\n    register_sidebar(array(\n        'name' => __('Footer Widgets'),\n        'id' => 'footer-widgets',\n        'description' => __('Widgets for the footer area'),\n        'before_widget' => '<div class=\"widget\">',\n        'after_widget' => '</div>',\n        'before_title' => '<h3 class=\"widget-title\">',\n        'after_title' => '</h3>',\n    ));\n}\nadd_action('widgets_init', 'colombe_blank_widgets_init');\n?>","size_bytes":8608},"wordpress-backup/files/wp-content/themes/colombe-blank/index.php":{"content":"<?php\n/*\nTemplate Name: COLOMBE BLANK Home\n*/\n?>\n<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n<head>\n    <meta charset=\"<?php bloginfo('charset'); ?>\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title><?php wp_title('|', true, 'right'); bloginfo('name'); ?></title>\n    <?php wp_head(); ?>\n    <link rel=\"stylesheet\" href=\"<?php echo get_template_directory_uri(); ?>/style.css\">\n</head>\n<body <?php body_class(); ?>>\n\n    <!-- Top Navigation -->\n    <nav class=\"top-navigation\">\n        <button class=\"hamburger-button\" id=\"menuToggle\">\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n        </button>\n        <a href=\"<?php echo home_url(); ?>\" class=\"brand-logo\">COLOMBE BLANK</a>\n        <button class=\"nav-button\" id=\"textMenuToggle\">MENU</button>\n    </nav>\n\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\" id=\"leftSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SHOP</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"#\" onclick=\"filterProducts('women')\" class=\"sidebar-link\">WOMEN</a>\n                    <a href=\"#\" onclick=\"filterProducts('men')\" class=\"sidebar-link\">MEN</a>\n                    <a href=\"#\" onclick=\"filterProducts('')\" class=\"sidebar-link\">ALL</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">FILTER</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"#\" onclick=\"filterProducts('clothing')\" class=\"sidebar-link\">CLOTHING</a>\n                    <a href=\"#\" onclick=\"filterProducts('accessories')\" class=\"sidebar-link\">ACCESSORIES</a>\n                    <a href=\"#\" onclick=\"filterProducts('shoes')\" class=\"sidebar-link\">SHOES</a>\n                    <a href=\"#\" onclick=\"filterProducts('')\" class=\"sidebar-link\">ALL</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SORT</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"#\" onclick=\"sortProducts('newest')\" class=\"sidebar-link\">NEWEST</a>\n                    <a href=\"#\" onclick=\"sortProducts('price_low')\" class=\"sidebar-link\">PRICE LOW</a>\n                    <a href=\"#\" onclick=\"sortProducts('price_high')\" class=\"sidebar-link\">PRICE HIGH</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Right Text Menu -->\n    <aside class=\"sidebar right\" id=\"rightSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SUPPORT</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/faq'); ?>\" class=\"sidebar-link\">FAQ</a>\n                    <a href=\"<?php echo home_url('/contact'); ?>\" class=\"sidebar-link\">CONTACT</a>\n                    <a href=\"<?php echo home_url('/shipping'); ?>\" class=\"sidebar-link\">SHIPPING</a>\n                    <a href=\"<?php echo home_url('/returns'); ?>\" class=\"sidebar-link\">RETURNS</a>\n                    <a href=\"<?php echo home_url('/size-guide'); ?>\" class=\"sidebar-link\">SIZE GUIDE</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">EXPLORE</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/about'); ?>\" class=\"sidebar-link\">ABOUT</a>\n                    <a href=\"<?php echo home_url('/support'); ?>\" class=\"sidebar-link\">SUPPORT</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Main Content -->\n    <main class=\"main-content\">\n        <div class=\"product-grid\" id=\"productGrid\">\n            <!-- Products will be loaded here via AJAX or PHP -->\n            <?php\n            // Sample products - replace with actual product data\n            $sample_products = array(\n                array('name' => 'MINIMAL TEE', 'price' => '$120', 'image' => 'https://via.placeholder.com/400x600/f5f5f5/000?text=TEE'),\n                array('name' => 'CLASSIC SHIRT', 'price' => '$180', 'image' => 'https://via.placeholder.com/400x600/f5f5f5/000?text=SHIRT'),\n                array('name' => 'TAILORED TROUSERS', 'price' => '$250', 'image' => 'https://via.placeholder.com/400x600/f5f5f5/000?text=TROUSERS'),\n                array('name' => 'LEATHER JACKET', 'price' => '$450', 'image' => 'https://via.placeholder.com/400x600/f5f5f5/000?text=JACKET'),\n                array('name' => 'CANVAS SNEAKERS', 'price' => '$160', 'image' => 'https://via.placeholder.com/400x600/f5f5f5/000?text=SHOES'),\n                array('name' => 'WOOL COAT', 'price' => '$380', 'image' => 'https://via.placeholder.com/400x600/f5f5f5/000?text=COAT'),\n                array('name' => 'COTTON DRESS', 'price' => '$220', 'image' => 'https://via.placeholder.com/400x600/f5f5f5/000?text=DRESS'),\n                array('name' => 'SILK BLOUSE', 'price' => '$195', 'image' => 'https://via.placeholder.com/400x600/f5f5f5/000?text=BLOUSE')\n            );\n\n            foreach ($sample_products as $product) : ?>\n                <div class=\"product-card\" onclick=\"openProductDetail('<?php echo $product['name']; ?>', '<?php echo $product['price']; ?>', '<?php echo $product['image']; ?>')\">\n                    <img src=\"<?php echo $product['image']; ?>\" alt=\"<?php echo $product['name']; ?>\" class=\"product-image\">\n                    <div class=\"product-info\">\n                        <div class=\"product-name\"><?php echo $product['name']; ?></div>\n                        <div class=\"product-price\"><?php echo $product['price']; ?></div>\n                    </div>\n                </div>\n            <?php endforeach; ?>\n        </div>\n    </main>\n\n    <!-- Overlay -->\n    <div class=\"overlay\" id=\"overlay\"></div>\n\n    <!-- Product Detail Modal -->\n    <div class=\"product-detail-modal\" id=\"productModal\">\n        <button class=\"close-button\" onclick=\"closeProductDetail()\">&times;</button>\n        <div class=\"product-detail-content\">\n            <div class=\"product-detail-image\">\n                <img id=\"modalImage\" src=\"\" alt=\"\">\n            </div>\n            <div class=\"product-detail-info\">\n                <h2 id=\"modalName\" class=\"product-name\" style=\"font-size: 18px; margin-bottom: 15px; text-transform: uppercase; letter-spacing: 2px;\"></h2>\n                <p id=\"modalPrice\" class=\"product-price\" style=\"font-size: 16px; margin-bottom: 25px; font-weight: bold;\"></p>\n                <p style=\"margin-bottom: 25px; font-size: 12px; line-height: 1.6;\">\n                    Premium quality garment crafted with attention to detail. Made from sustainable materials with a focus on minimalist design and lasting comfort.\n                </p>\n                <div style=\"margin-bottom: 25px;\">\n                    <label class=\"form-label\">SIZE</label>\n                    <select class=\"form-input\" style=\"width: 150px;\">\n                        <option>XS</option>\n                        <option>S</option>\n                        <option>M</option>\n                        <option>L</option>\n                        <option>XL</option>\n                    </select>\n                </div>\n                <button class=\"form-button\" onclick=\"addToCart()\" style=\"width: 100%; margin-bottom: 20px;\">ADD TO CART</button>\n                \n                <div class=\"product-detail-menu\">\n                    <a href=\"<?php echo home_url('/size-guide'); ?>\" class=\"product-menu-item\">SIZE GUIDE</a>\n                    <a href=\"<?php echo home_url('/shipping'); ?>\" class=\"product-menu-item\">SHIPPING INFO</a>\n                    <a href=\"<?php echo home_url('/returns'); ?>\" class=\"product-menu-item\">RETURNS & EXCHANGES</a>\n                    <a href=\"<?php echo home_url('/contact'); ?>\" class=\"product-menu-item\">CONTACT SUPPORT</a>\n                    <a href=\"<?php echo home_url('/about'); ?>\" class=\"product-menu-item\">ABOUT COLOMBE BLANK</a>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script src=\"<?php echo get_template_directory_uri(); ?>/js/main.js\"></script>\n    <?php wp_footer(); ?>\n</body>\n</html>","size_bytes":8348},"wordpress-backup/files/wp-content/themes/colombe-blank/page-about.php":{"content":"<?php\n/*\nTemplate Name: About Page\n*/\n?>\n<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n<head>\n    <meta charset=\"<?php bloginfo('charset'); ?>\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>About - <?php bloginfo('name'); ?></title>\n    <?php wp_head(); ?>\n    <link rel=\"stylesheet\" href=\"<?php echo get_template_directory_uri(); ?>/style.css\">\n</head>\n<body <?php body_class(); ?>>\n\n    <!-- Top Navigation -->\n    <nav class=\"top-navigation\">\n        <button class=\"hamburger-button\" id=\"menuToggle\">\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n        </button>\n        <a href=\"<?php echo home_url(); ?>\" class=\"brand-logo\">COLOMBE BLANK</a>\n        <button class=\"nav-button\" id=\"textMenuToggle\">MENU</button>\n    </nav>\n\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\" id=\"leftSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SHOP</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">WOMEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">MEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">ALL</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Right Text Menu -->\n    <aside class=\"sidebar right\" id=\"rightSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SUPPORT</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/faq'); ?>\" class=\"sidebar-link\">FAQ</a>\n                    <a href=\"<?php echo home_url('/contact'); ?>\" class=\"sidebar-link\">CONTACT</a>\n                    <a href=\"<?php echo home_url('/shipping'); ?>\" class=\"sidebar-link\">SHIPPING</a>\n                    <a href=\"<?php echo home_url('/returns'); ?>\" class=\"sidebar-link\">RETURNS</a>\n                    <a href=\"<?php echo home_url('/size-guide'); ?>\" class=\"sidebar-link\">SIZE GUIDE</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">EXPLORE</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/about'); ?>\" class=\"sidebar-link\">ABOUT</a>\n                    <a href=\"<?php echo home_url('/support'); ?>\" class=\"sidebar-link\">SUPPORT</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Main Content -->\n    <main class=\"main-content\">\n        <div class=\"page-content\">\n            <h1 class=\"page-title\">ABOUT COLOMBE BLANK</h1>\n            \n            <p>COLOMBE BLANK represents the intersection of minimalist design and luxury craftsmanship. Founded on the principle that true elegance lies in simplicity, we create timeless pieces that transcend seasonal trends.</p>\n            \n            <h2>OUR PHILOSOPHY</h2>\n            <p>We believe in the power of restraint. Every piece in our collection is carefully considered, from the initial sketch to the final stitch. We reject the notion of fast fashion, instead focusing on creating garments that will remain relevant and beautiful for years to come.</p>\n            \n            <h2>CRAFTSMANSHIP</h2>\n            <p>Our commitment to quality is unwavering. We work with the finest materials and most skilled artisans to ensure that every garment meets our exacting standards. Each piece is constructed with attention to detail that honors traditional tailoring techniques while embracing modern innovation.</p>\n            \n            <h2>SUSTAINABILITY</h2>\n            <p>We are committed to responsible fashion. Our approach to sustainability encompasses every aspect of our business, from sourcing eco-friendly materials to maintaining ethical manufacturing practices. We believe that luxury and environmental consciousness are not mutually exclusive.</p>\n            \n            <h2>DESIGN ETHOS</h2>\n            <p>Our designs celebrate the beauty of negative space and the power of proportion. We create pieces that enhance rather than overwhelm, allowing the wearer's individuality to shine through. Our palette is deliberately restrained, focusing on neutral tones that serve as a foundation for personal expression.</p>\n            \n            <h2>THE FUTURE</h2>\n            <p>As we continue to grow, our mission remains constant: to create beautiful, thoughtful clothing that respects both the wearer and the environment. We are committed to pushing the boundaries of what sustainable luxury fashion can be.</p>\n            \n            <p style=\"margin-top: 40px; text-align: center; font-style: italic;\">\n            \"Simplicity is the ultimate sophistication.\"<br>\n            — The COLOMBE BLANK Team\n            </p>\n        </div>\n    </main>\n\n    <!-- Overlay -->\n    <div class=\"overlay\" id=\"overlay\"></div>\n\n    <script src=\"<?php echo get_template_directory_uri(); ?>/js/main.js\"></script>\n    <?php wp_footer(); ?>\n</body>\n</html>","size_bytes":5207},"wordpress-backup/files/wp-content/themes/colombe-blank/page-contact.php":{"content":"<?php\n/*\nTemplate Name: Contact Page\n*/\nget_header(); ?>\n\n<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n<head>\n    <meta charset=\"<?php bloginfo('charset'); ?>\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Contact - <?php bloginfo('name'); ?></title>\n    <?php wp_head(); ?>\n    <link rel=\"stylesheet\" href=\"<?php echo get_template_directory_uri(); ?>/style.css\">\n</head>\n<body <?php body_class(); ?>>\n\n    <!-- Top Navigation -->\n    <nav class=\"top-navigation\">\n        <button class=\"hamburger-button\" id=\"menuToggle\">\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n        </button>\n        <a href=\"<?php echo home_url(); ?>\" class=\"brand-logo\">COLOMBE BLANK</a>\n        <button class=\"nav-button\" id=\"textMenuToggle\">MENU</button>\n    </nav>\n\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\" id=\"leftSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SHOP</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">WOMEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">MEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">ALL</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Right Text Menu -->\n    <aside class=\"sidebar right\" id=\"rightSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SUPPORT</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/faq'); ?>\" class=\"sidebar-link\">FAQ</a>\n                    <a href=\"<?php echo home_url('/contact'); ?>\" class=\"sidebar-link\">CONTACT</a>\n                    <a href=\"<?php echo home_url('/shipping'); ?>\" class=\"sidebar-link\">SHIPPING</a>\n                    <a href=\"<?php echo home_url('/returns'); ?>\" class=\"sidebar-link\">RETURNS</a>\n                    <a href=\"<?php echo home_url('/size-guide'); ?>\" class=\"sidebar-link\">SIZE GUIDE</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">EXPLORE</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/about'); ?>\" class=\"sidebar-link\">ABOUT</a>\n                    <a href=\"<?php echo home_url('/support'); ?>\" class=\"sidebar-link\">SUPPORT</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Main Content -->\n    <main class=\"main-content\">\n        <div class=\"page-content\">\n            <h1 class=\"page-title\">CONTACT</h1>\n            \n            <div class=\"contact-form\">\n                <form id=\"contactForm\" method=\"post\">\n                    <div class=\"form-group\">\n                        <label for=\"name\" class=\"form-label\">NAME</label>\n                        <input type=\"text\" id=\"name\" name=\"name\" class=\"form-input\" required>\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <label for=\"email\" class=\"form-label\">EMAIL</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" class=\"form-input\" required>\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <label for=\"subject\" class=\"form-label\">SUBJECT</label>\n                        <input type=\"text\" id=\"subject\" name=\"subject\" class=\"form-input\" required>\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <label for=\"message\" class=\"form-label\">MESSAGE</label>\n                        <textarea id=\"message\" name=\"message\" class=\"form-input\" rows=\"6\" required></textarea>\n                    </div>\n                    \n                    <button type=\"submit\" class=\"form-button\">SEND MESSAGE</button>\n                </form>\n            </div>\n            \n            <div style=\"margin-top: 60px; text-align: center;\">\n                <h2>GET IN TOUCH</h2>\n                <p>For general inquiries, please email us at:<br>\n                <strong>hello@colombeblank.com</strong></p>\n                \n                <p style=\"margin-top: 30px;\">For press and media inquiries:<br>\n                <strong>press@colombeblank.com</strong></p>\n                \n                <p style=\"margin-top: 30px;\">Customer service hours:<br>\n                Monday - Friday: 9AM - 6PM EST<br>\n                Saturday - Sunday: 10AM - 4PM EST</p>\n            </div>\n        </div>\n    </main>\n\n    <!-- Overlay -->\n    <div class=\"overlay\" id=\"overlay\"></div>\n\n    <script src=\"<?php echo get_template_directory_uri(); ?>/js/main.js\"></script>\n    <?php wp_footer(); ?>\n</body>\n</html>","size_bytes":4972},"wordpress-backup/files/wp-content/themes/colombe-blank/page-faq.php":{"content":"<?php\n/*\nTemplate Name: FAQ Page\n*/\nget_header(); ?>\n\n<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n<head>\n    <meta charset=\"<?php bloginfo('charset'); ?>\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>FAQ - <?php bloginfo('name'); ?></title>\n    <?php wp_head(); ?>\n    <link rel=\"stylesheet\" href=\"<?php echo get_template_directory_uri(); ?>/style.css\">\n</head>\n<body <?php body_class(); ?>>\n\n    <!-- Top Navigation -->\n    <nav class=\"top-navigation\">\n        <button class=\"hamburger-button\" id=\"menuToggle\">\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n        </button>\n        <a href=\"<?php echo home_url(); ?>\" class=\"brand-logo\">COLOMBE BLANK</a>\n        <button class=\"nav-button\" id=\"textMenuToggle\">MENU</button>\n    </nav>\n\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\" id=\"leftSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SHOP</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">WOMEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">MEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">ALL</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Right Text Menu -->\n    <aside class=\"sidebar right\" id=\"rightSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SUPPORT</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/faq'); ?>\" class=\"sidebar-link\">FAQ</a>\n                    <a href=\"<?php echo home_url('/contact'); ?>\" class=\"sidebar-link\">CONTACT</a>\n                    <a href=\"<?php echo home_url('/shipping'); ?>\" class=\"sidebar-link\">SHIPPING</a>\n                    <a href=\"<?php echo home_url('/returns'); ?>\" class=\"sidebar-link\">RETURNS</a>\n                    <a href=\"<?php echo home_url('/size-guide'); ?>\" class=\"sidebar-link\">SIZE GUIDE</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">EXPLORE</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/about'); ?>\" class=\"sidebar-link\">ABOUT</a>\n                    <a href=\"<?php echo home_url('/support'); ?>\" class=\"sidebar-link\">SUPPORT</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Main Content -->\n    <main class=\"main-content\">\n        <div class=\"page-content\">\n            <h1 class=\"page-title\">FREQUENTLY ASKED QUESTIONS</h1>\n            \n            <div class=\"faq-accordion\">\n                <div class=\"faq-item\">\n                    <button class=\"faq-question\">WHAT IS YOUR RETURN POLICY?</button>\n                    <div class=\"faq-answer\">\n                        <p>We accept returns within 30 days of purchase for unworn items in original condition with tags attached. Items must be returned in original packaging. Refunds will be processed within 5-7 business days of receiving your return.</p>\n                    </div>\n                </div>\n                \n                <div class=\"faq-item\">\n                    <button class=\"faq-question\">HOW LONG DOES SHIPPING TAKE?</button>\n                    <div class=\"faq-answer\">\n                        <p>Standard shipping takes 3-5 business days within the continental US. Express shipping (1-2 business days) and overnight shipping options are available at checkout. International shipping times vary by destination, typically 7-14 business days.</p>\n                    </div>\n                </div>\n                \n                <div class=\"faq-item\">\n                    <button class=\"faq-question\">DO YOU OFFER INTERNATIONAL SHIPPING?</button>\n                    <div class=\"faq-answer\">\n                        <p>Yes, we ship to most countries worldwide. Shipping costs and delivery times vary by destination. International customers are responsible for any customs duties or taxes imposed by their country.</p>\n                    </div>\n                </div>\n                \n                <div class=\"faq-item\">\n                    <button class=\"faq-question\">HOW DO I TRACK MY ORDER?</button>\n                    <div class=\"faq-answer\">\n                        <p>Once your order ships, you'll receive a tracking number via email. You can track your package on the carrier's website. If you have any issues with tracking, please contact our customer service team.</p>\n                    </div>\n                </div>\n                \n                <div class=\"faq-item\">\n                    <button class=\"faq-question\">WHAT SIZE SHOULD I ORDER?</button>\n                    <div class=\"faq-answer\">\n                        <p>Please refer to our detailed size guide for measurements. Our clothing runs true to size, but we recommend measuring yourself and comparing to our size chart for the best fit. If you're between sizes, we generally recommend sizing up.</p>\n                    </div>\n                </div>\n                \n                <div class=\"faq-item\">\n                    <button class=\"faq-question\">DO YOU OFFER GIFT CARDS?</button>\n                    <div class=\"faq-answer\">\n                        <p>Yes, we offer digital gift cards in various amounts. Gift cards are delivered via email and can be redeemed online. They never expire and can be used for multiple purchases until the balance is depleted.</p>\n                    </div>\n                </div>\n                \n                <div class=\"faq-item\">\n                    <button class=\"faq-question\">WHAT PAYMENT METHODS DO YOU ACCEPT?</button>\n                    <div class=\"faq-answer\">\n                        <p>We accept all major credit cards (Visa, Mastercard, American Express, Discover), PayPal, Apple Pay, and Google Pay. All transactions are secure and encrypted.</p>\n                    </div>\n                </div>\n                \n                <div class=\"faq-item\">\n                    <button class=\"faq-question\">HOW CAN I CONTACT CUSTOMER SERVICE?</button>\n                    <div class=\"faq-answer\">\n                        <p>You can reach our customer service team via email at hello@colombeblank.com or use our contact form. We respond to all inquiries within 24 hours during business days (Monday-Friday, 9AM-6PM EST).</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </main>\n\n    <!-- Overlay -->\n    <div class=\"overlay\" id=\"overlay\"></div>\n\n    <script src=\"<?php echo get_template_directory_uri(); ?>/js/main.js\"></script>\n    <?php wp_footer(); ?>\n</body>\n</html>","size_bytes":6931},"wordpress-backup/files/wp-content/themes/colombe-blank/page-returns.php":{"content":"<?php\n/*\nTemplate Name: Returns Page\n*/\n?>\n<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n<head>\n    <meta charset=\"<?php bloginfo('charset'); ?>\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Returns - <?php bloginfo('name'); ?></title>\n    <?php wp_head(); ?>\n    <link rel=\"stylesheet\" href=\"<?php echo get_template_directory_uri(); ?>/style.css\">\n</head>\n<body <?php body_class(); ?>>\n\n    <!-- Top Navigation -->\n    <nav class=\"top-navigation\">\n        <button class=\"hamburger-button\" id=\"menuToggle\">\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n        </button>\n        <a href=\"<?php echo home_url(); ?>\" class=\"brand-logo\">COLOMBE BLANK</a>\n        <button class=\"nav-button\" id=\"textMenuToggle\">MENU</button>\n    </nav>\n\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\" id=\"leftSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SHOP</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">WOMEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">MEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">ALL</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Right Text Menu -->\n    <aside class=\"sidebar right\" id=\"rightSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SUPPORT</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/faq'); ?>\" class=\"sidebar-link\">FAQ</a>\n                    <a href=\"<?php echo home_url('/contact'); ?>\" class=\"sidebar-link\">CONTACT</a>\n                    <a href=\"<?php echo home_url('/shipping'); ?>\" class=\"sidebar-link\">SHIPPING</a>\n                    <a href=\"<?php echo home_url('/returns'); ?>\" class=\"sidebar-link\">RETURNS</a>\n                    <a href=\"<?php echo home_url('/size-guide'); ?>\" class=\"sidebar-link\">SIZE GUIDE</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">EXPLORE</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/about'); ?>\" class=\"sidebar-link\">ABOUT</a>\n                    <a href=\"<?php echo home_url('/support'); ?>\" class=\"sidebar-link\">SUPPORT</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Main Content -->\n    <main class=\"main-content\">\n        <div class=\"page-content\">\n            <h1 class=\"page-title\">RETURNS & EXCHANGES</h1>\n            \n            <h2>RETURN POLICY</h2>\n            <p>We want you to love your COLOMBE BLANK purchase. If you're not completely satisfied, we accept returns within 30 days of purchase for a full refund.</p>\n            \n            <h2>RETURN CONDITIONS</h2>\n            <p>Items must be:</p>\n            <p>• Unworn and in original condition<br>\n            • Have all original tags attached<br>\n            • Returned in original packaging<br>\n            • Accompanied by proof of purchase</p>\n            \n            <h2>NON-RETURNABLE ITEMS</h2>\n            <p>The following items cannot be returned:</p>\n            <p>• Undergarments and intimate apparel<br>\n            • Customized or personalized items<br>\n            • Items marked as final sale<br>\n            • Items damaged by normal wear</p>\n            \n            <h2>HOW TO RETURN</h2>\n            <p>1. Contact our customer service at hello@colombeblank.com<br>\n            2. Include your order number and reason for return<br>\n            3. We'll provide a prepaid return label within 24 hours<br>\n            4. Package items securely and attach the return label<br>\n            5. Drop off at any authorized shipping location</p>\n            \n            <h2>EXCHANGES</h2>\n            <p>We offer exchanges for different sizes or colors of the same item, subject to availability. Exchange requests must be made within 30 days of purchase.</p>\n            \n            <h2>REFUND PROCESSING</h2>\n            <p>Refunds are processed within 5-7 business days of receiving your return. Original shipping costs are non-refundable. Refunds will be credited to your original payment method.</p>\n            \n            <h2>INTERNATIONAL RETURNS</h2>\n            <p>International customers are responsible for return shipping costs. We recommend using a trackable shipping service for returns.</p>\n            \n            <h2>DAMAGED OR DEFECTIVE ITEMS</h2>\n            <p>If you receive a damaged or defective item, please contact us immediately at hello@colombeblank.com. We'll arrange for a replacement or full refund at no cost to you.</p>\n        </div>\n    </main>\n\n    <!-- Overlay -->\n    <div class=\"overlay\" id=\"overlay\"></div>\n\n    <script src=\"<?php echo get_template_directory_uri(); ?>/js/main.js\"></script>\n    <?php wp_footer(); ?>\n</body>\n</html>","size_bytes":5183},"wordpress-backup/files/wp-content/themes/colombe-blank/page-shipping.php":{"content":"<?php\n/*\nTemplate Name: Shipping Page\n*/\n?>\n<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n<head>\n    <meta charset=\"<?php bloginfo('charset'); ?>\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Shipping - <?php bloginfo('name'); ?></title>\n    <?php wp_head(); ?>\n    <link rel=\"stylesheet\" href=\"<?php echo get_template_directory_uri(); ?>/style.css\">\n</head>\n<body <?php body_class(); ?>>\n\n    <!-- Top Navigation -->\n    <nav class=\"top-navigation\">\n        <button class=\"hamburger-button\" id=\"menuToggle\">\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n        </button>\n        <a href=\"<?php echo home_url(); ?>\" class=\"brand-logo\">COLOMBE BLANK</a>\n        <button class=\"nav-button\" id=\"textMenuToggle\">MENU</button>\n    </nav>\n\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\" id=\"leftSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SHOP</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">WOMEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">MEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">ALL</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Right Text Menu -->\n    <aside class=\"sidebar right\" id=\"rightSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SUPPORT</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/faq'); ?>\" class=\"sidebar-link\">FAQ</a>\n                    <a href=\"<?php echo home_url('/contact'); ?>\" class=\"sidebar-link\">CONTACT</a>\n                    <a href=\"<?php echo home_url('/shipping'); ?>\" class=\"sidebar-link\">SHIPPING</a>\n                    <a href=\"<?php echo home_url('/returns'); ?>\" class=\"sidebar-link\">RETURNS</a>\n                    <a href=\"<?php echo home_url('/size-guide'); ?>\" class=\"sidebar-link\">SIZE GUIDE</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">EXPLORE</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/about'); ?>\" class=\"sidebar-link\">ABOUT</a>\n                    <a href=\"<?php echo home_url('/support'); ?>\" class=\"sidebar-link\">SUPPORT</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Main Content -->\n    <main class=\"main-content\">\n        <div class=\"page-content\">\n            <h1 class=\"page-title\">SHIPPING INFORMATION</h1>\n            \n            <h2>SHIPPING OPTIONS</h2>\n            <p>We offer several shipping options to meet your needs:</p>\n            \n            <p><strong>STANDARD SHIPPING (3-5 BUSINESS DAYS)</strong><br>\n            Free on orders over $100<br>\n            $15 for orders under $100</p>\n            \n            <p><strong>EXPRESS SHIPPING (1-2 BUSINESS DAYS)</strong><br>\n            $25 for all orders</p>\n            \n            <p><strong>OVERNIGHT SHIPPING</strong><br>\n            $35 for all orders<br>\n            Order by 2PM EST for next day delivery</p>\n            \n            <h2>INTERNATIONAL SHIPPING</h2>\n            <p>We ship worldwide with the following options:</p>\n            \n            <p><strong>INTERNATIONAL STANDARD (7-14 BUSINESS DAYS)</strong><br>\n            Rates calculated at checkout based on destination</p>\n            \n            <p><strong>INTERNATIONAL EXPRESS (3-7 BUSINESS DAYS)</strong><br>\n            Premium rates apply</p>\n            \n            <h2>SHIPPING POLICIES</h2>\n            <p>Orders are processed Monday through Friday, excluding holidays. Orders placed after 2PM EST will be processed the next business day.</p>\n            \n            <p>You will receive tracking information via email once your order ships. Please allow 24 hours for tracking information to update.</p>\n            \n            <p>International customers are responsible for any customs duties, taxes, or fees imposed by their country.</p>\n            \n            <h2>DELIVERY ISSUES</h2>\n            <p>If your package is lost or damaged during shipping, please contact us immediately at hello@colombeblank.com. We will work with the carrier to resolve the issue.</p>\n        </div>\n    </main>\n\n    <!-- Overlay -->\n    <div class=\"overlay\" id=\"overlay\"></div>\n\n    <script src=\"<?php echo get_template_directory_uri(); ?>/js/main.js\"></script>\n    <?php wp_footer(); ?>\n</body>\n</html>","size_bytes":4756},"wordpress-backup/files/wp-content/themes/colombe-blank/page-size-guide.php":{"content":"<?php\n/*\nTemplate Name: Size Guide Page\n*/\n?>\n<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n<head>\n    <meta charset=\"<?php bloginfo('charset'); ?>\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Size Guide - <?php bloginfo('name'); ?></title>\n    <?php wp_head(); ?>\n    <link rel=\"stylesheet\" href=\"<?php echo get_template_directory_uri(); ?>/style.css\">\n</head>\n<body <?php body_class(); ?>>\n\n    <!-- Top Navigation -->\n    <nav class=\"top-navigation\">\n        <button class=\"hamburger-button\" id=\"menuToggle\">\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n            <span class=\"hamburger-line\"></span>\n        </button>\n        <a href=\"<?php echo home_url(); ?>\" class=\"brand-logo\">COLOMBE BLANK</a>\n        <button class=\"nav-button\" id=\"textMenuToggle\">MENU</button>\n    </nav>\n\n    <!-- Left Sidebar -->\n    <aside class=\"sidebar\" id=\"leftSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SHOP</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">WOMEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">MEN</a>\n                    <a href=\"<?php echo home_url(); ?>\" class=\"sidebar-link\">ALL</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Right Text Menu -->\n    <aside class=\"sidebar right\" id=\"rightSidebar\">\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">SUPPORT</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/faq'); ?>\" class=\"sidebar-link\">FAQ</a>\n                    <a href=\"<?php echo home_url('/contact'); ?>\" class=\"sidebar-link\">CONTACT</a>\n                    <a href=\"<?php echo home_url('/shipping'); ?>\" class=\"sidebar-link\">SHIPPING</a>\n                    <a href=\"<?php echo home_url('/returns'); ?>\" class=\"sidebar-link\">RETURNS</a>\n                    <a href=\"<?php echo home_url('/size-guide'); ?>\" class=\"sidebar-link\">SIZE GUIDE</a>\n                </nav>\n            </div>\n            \n            <div class=\"sidebar-section\">\n                <h3 class=\"sidebar-title\">EXPLORE</h3>\n                <nav class=\"sidebar-nav\">\n                    <a href=\"<?php echo home_url('/about'); ?>\" class=\"sidebar-link\">ABOUT</a>\n                    <a href=\"<?php echo home_url('/support'); ?>\" class=\"sidebar-link\">SUPPORT</a>\n                </nav>\n            </div>\n        </div>\n    </aside>\n\n    <!-- Main Content -->\n    <main class=\"main-content\">\n        <div class=\"page-content\">\n            <h1 class=\"page-title\">SIZE GUIDE</h1>\n            \n            <h2>WOMEN'S SIZING</h2>\n            <table style=\"width: 100%; border-collapse: collapse; margin: 20px 0; font-family: 'Courier New', monospace;\">\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <th style=\"padding: 15px; text-align: left;\">SIZE</th>\n                    <th style=\"padding: 15px; text-align: left;\">BUST</th>\n                    <th style=\"padding: 15px; text-align: left;\">WAIST</th>\n                    <th style=\"padding: 15px; text-align: left;\">HIPS</th>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">XS</td>\n                    <td style=\"padding: 15px;\">32\"</td>\n                    <td style=\"padding: 15px;\">24\"</td>\n                    <td style=\"padding: 15px;\">34\"</td>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">S</td>\n                    <td style=\"padding: 15px;\">34\"</td>\n                    <td style=\"padding: 15px;\">26\"</td>\n                    <td style=\"padding: 15px;\">36\"</td>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">M</td>\n                    <td style=\"padding: 15px;\">36\"</td>\n                    <td style=\"padding: 15px;\">28\"</td>\n                    <td style=\"padding: 15px;\">38\"</td>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">L</td>\n                    <td style=\"padding: 15px;\">38\"</td>\n                    <td style=\"padding: 15px;\">30\"</td>\n                    <td style=\"padding: 15px;\">40\"</td>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">XL</td>\n                    <td style=\"padding: 15px;\">40\"</td>\n                    <td style=\"padding: 15px;\">32\"</td>\n                    <td style=\"padding: 15px;\">42\"</td>\n                </tr>\n            </table>\n            \n            <h2>MEN'S SIZING</h2>\n            <table style=\"width: 100%; border-collapse: collapse; margin: 20px 0; font-family: 'Courier New', monospace;\">\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <th style=\"padding: 15px; text-align: left;\">SIZE</th>\n                    <th style=\"padding: 15px; text-align: left;\">CHEST</th>\n                    <th style=\"padding: 15px; text-align: left;\">WAIST</th>\n                    <th style=\"padding: 15px; text-align: left;\">SLEEVE</th>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">XS</td>\n                    <td style=\"padding: 15px;\">34\"</td>\n                    <td style=\"padding: 15px;\">28\"</td>\n                    <td style=\"padding: 15px;\">32\"</td>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">S</td>\n                    <td style=\"padding: 15px;\">36\"</td>\n                    <td style=\"padding: 15px;\">30\"</td>\n                    <td style=\"padding: 15px;\">33\"</td>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">M</td>\n                    <td style=\"padding: 15px;\">38\"</td>\n                    <td style=\"padding: 15px;\">32\"</td>\n                    <td style=\"padding: 15px;\">34\"</td>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">L</td>\n                    <td style=\"padding: 15px;\">40\"</td>\n                    <td style=\"padding: 15px;\">34\"</td>\n                    <td style=\"padding: 15px;\">35\"</td>\n                </tr>\n                <tr style=\"border-bottom: 1px solid var(--border);\">\n                    <td style=\"padding: 15px;\">XL</td>\n                    <td style=\"padding: 15px;\">42\"</td>\n                    <td style=\"padding: 15px;\">36\"</td>\n                    <td style=\"padding: 15px;\">36\"</td>\n                </tr>\n            </table>\n            \n            <h2>HOW TO MEASURE</h2>\n            <p><strong>BUST/CHEST:</strong> Measure around the fullest part of your chest, keeping the tape measure level.</p>\n            \n            <p><strong>WAIST:</strong> Measure around your natural waistline, which is the narrowest part of your torso.</p>\n            \n            <p><strong>HIPS:</strong> Measure around the fullest part of your hips, approximately 8 inches below your waistline.</p>\n            \n            <p><strong>SLEEVE:</strong> Measure from the center of your neck, across your shoulder, and down to your wrist.</p>\n            \n            <h2>FIT GUIDE</h2>\n            <p>Our garments are designed with a modern, tailored fit. If you prefer a looser fit, we recommend sizing up. If you're between sizes, we generally recommend choosing the larger size.</p>\n            \n            <p>For specific fit questions or personalized sizing recommendations, please contact our customer service team at hello@colombeblank.com.</p>\n        </div>\n    </main>\n\n    <!-- Overlay -->\n    <div class=\"overlay\" id=\"overlay\"></div>\n\n    <script src=\"<?php echo get_template_directory_uri(); ?>/js/main.js\"></script>\n    <?php wp_footer(); ?>\n</body>\n</html>","size_bytes":8354},"wordpress-backup/files/wp-content/themes/colombe-blank/style.css":{"content":"/*\nTheme Name: COLOMBE BLANK\nDescription: Minimalist luxury fashion theme with monospace typography and clean design\nVersion: 1.0\nAuthor: COLOMBE BLANK\n*/\n\n/* CSS Variables */\n:root {\n  --font-mono: 'Courier New', monospace;\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(0, 0%, 0%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(0, 0%, 0%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(0, 0%, 0%);\n  --primary: hsl(0, 0%, 0%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(0, 0%, 96%);\n  --secondary-foreground: hsl(0, 0%, 0%);\n  --muted: hsl(0, 0%, 96%);\n  --muted-foreground: hsl(0, 0%, 40%);\n  --accent: hsl(0, 0%, 96%);\n  --accent-foreground: hsl(0, 0%, 0%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(0, 0%, 15%);\n  --input: hsl(0, 0%, 18%);\n  --ring: hsl(0, 0%, 100%);\n  --text: hsl(0, 0%, 0%);\n  --neutral: hsl(0, 0%, 15%);\n}\n\n.dark {\n  --background: hsl(0, 0%, 4%);\n  --foreground: hsl(0, 0%, 95%);\n  --card: hsl(0, 0%, 4%);\n  --card-foreground: hsl(0, 0%, 95%);\n  --popover: hsl(0, 0%, 4%);\n  --popover-foreground: hsl(0, 0%, 95%);\n  --primary: hsl(0, 0%, 95%);\n  --primary-foreground: hsl(0, 0%, 4%);\n  --secondary: hsl(0, 0%, 8%);\n  --secondary-foreground: hsl(0, 0%, 95%);\n  --muted: hsl(0, 0%, 8%);\n  --muted-foreground: hsl(0, 0%, 60%);\n  --accent: hsl(0, 0%, 8%);\n  --accent-foreground: hsl(0, 0%, 95%);\n  --destructive: hsl(0, 62%, 50%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(0, 0%, 15%);\n  --input: hsl(0, 0%, 18%);\n  --ring: hsl(0, 0%, 100%);\n  --text: hsl(0, 0%, 80%);\n  --neutral: hsl(0, 0%, 15%);\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  line-height: 1.2;\n  background: var(--background);\n  color: var(--text);\n  overflow-x: hidden;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n\n/* Navigation */\n.top-navigation {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  background: var(--background);\n  border-bottom: 1px solid var(--border);\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px;\n}\n\n.nav-button {\n  background: none;\n  border: none;\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  cursor: pointer;\n  color: var(--text);\n  padding: 10px 15px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  transition: color 0.2s ease;\n}\n\n.nav-button:hover {\n  color: var(--primary);\n}\n\n.hamburger-button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 8px 0;\n  transition: opacity 0.2s ease;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n}\n\n.hamburger-button:hover {\n  opacity: 0.7;\n}\n\n.hamburger-line {\n  display: block;\n  width: 20px;\n  height: 2px;\n  background: var(--text);\n  margin: 2px 0;\n  transition: all 0.2s ease;\n}\n\n.brand-logo {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  font-family: 'Courier New', monospace;\n  font-size: 14px;\n  font-weight: bold;\n  color: var(--primary);\n  text-decoration: none;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n}\n\n/* Main Content */\n.main-content {\n  margin-top: 60px;\n  min-height: calc(100vh - 60px);\n  padding: 40px 0;\n}\n\n/* Product Grid */\n.product-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 40px;\n  padding: 40px 20px;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n.product-card {\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: var(--background);\n}\n\n.product-card:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.product-image {\n  width: 100%;\n  aspect-ratio: 2/3;\n  object-fit: cover;\n  border: 1px solid var(--border);\n  transition: all 0.3s ease;\n}\n\n.product-card:hover .product-image {\n  border-color: var(--primary);\n}\n\n.product-info {\n  padding: 15px 0;\n  text-align: center;\n}\n\n.product-name {\n  font-size: 12px;\n  font-weight: bold;\n  margin-bottom: 5px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n}\n\n.product-price {\n  font-size: 11px;\n  color: var(--muted-foreground);\n}\n\n/* Sidebars */\n.sidebar {\n  position: fixed;\n  top: 60px;\n  bottom: 0;\n  width: 260px;\n  background: var(--accent);\n  border-right: 1px solid var(--border);\n  z-index: 999;\n  transform: translateX(-100%);\n  transition: transform 0.3s ease;\n  overflow-y: auto;\n  padding: 30px;\n}\n\n.sidebar.open {\n  transform: translateX(0);\n}\n\n.sidebar.right {\n  right: 0;\n  left: auto;\n  border-right: none;\n  border-left: 1px solid var(--border);\n  transform: translateX(100%);\n}\n\n.sidebar-menu {\n  list-style: none;\n}\n\n.sidebar-menu li {\n  margin-bottom: 20px;\n}\n\n.sidebar-menu a {\n  color: var(--text);\n  text-decoration: none;\n  font-size: 12px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  transition: color 0.2s ease;\n  display: block;\n  padding: 10px 0;\n}\n\n.sidebar-menu a:hover {\n  color: var(--primary);\n}\n\n.sidebar-content {\n  padding: 24px;\n}\n\n.sidebar-section {\n  margin-bottom: 32px;\n}\n\n.sidebar-title {\n  font-size: 11px;\n  letter-spacing: 1px;\n  margin-bottom: 16px;\n  color: var(--primary);\n  font-family: 'Courier New', monospace;\n  font-weight: normal;\n}\n\n.sidebar-nav {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.sidebar-link {\n  color: var(--text);\n  text-decoration: none;\n  font-size: 11px;\n  font-family: 'Courier New', monospace;\n  transition: color 0.2s ease;\n  display: block;\n}\n\n.sidebar-link:hover {\n  color: var(--primary);\n}\n\n/* Overlays */\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 998;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.3s ease, visibility 0.3s ease;\n}\n\n.overlay.active {\n  opacity: 1;\n  visibility: visible;\n}\n\n/* Product Detail Modal */\n.product-detail-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.95);\n  backdrop-filter: blur(20px);\n  z-index: 1001;\n  display: flex;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity 0.4s ease, visibility 0.4s ease;\n  align-items: center;\n  justify-content: center;\n}\n\n.product-detail-modal.active {\n  opacity: 1;\n  visibility: visible;\n}\n\n.product-detail-content {\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  gap: 60px;\n  max-width: 1200px;\n  max-height: 90vh;\n  margin: auto;\n  padding: 40px;\n  background: var(--background);\n  border: 2px solid var(--primary);\n  position: relative;\n}\n\n.product-detail-image {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.product-detail-image img {\n  width: 100%;\n  height: auto;\n  max-height: 70vh;\n  object-fit: contain;\n  border: 1px solid var(--border);\n}\n\n.product-detail-info {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 20px 0;\n}\n\n.product-detail-menu {\n  margin-top: 30px;\n  border-top: 1px solid var(--border);\n  padding-top: 30px;\n}\n\n.product-menu-item {\n  display: block;\n  padding: 15px 0;\n  border-bottom: 1px solid var(--border);\n  color: var(--text);\n  text-decoration: none;\n  font-size: 11px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  transition: color 0.2s ease;\n}\n\n.product-menu-item:hover {\n  color: var(--primary);\n}\n\n.close-button {\n  position: absolute;\n  top: 20px;\n  right: 30px;\n  background: none;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n  color: var(--text);\n  z-index: 1002;\n}\n\n.close-button:hover {\n  color: var(--primary);\n}\n\n/* Forms */\n.form-label {\n  display: block;\n  font-size: 11px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  margin-bottom: 8px;\n  color: var(--text);\n}\n\n.form-input, .form-textarea, .form-select {\n  width: 100%;\n  padding: 12px;\n  border: 1px solid var(--border);\n  background: var(--background);\n  color: var(--text);\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  transition: border-color 0.2s ease;\n}\n\n.form-input:focus, .form-textarea:focus, .form-select:focus {\n  outline: none;\n  border-color: var(--primary);\n}\n\n.form-button {\n  background: var(--primary);\n  color: var(--primary-foreground);\n  border: none;\n  padding: 15px 30px;\n  font-family: 'Courier New', monospace;\n  font-size: 11px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  cursor: pointer;\n  transition: opacity 0.2s ease;\n  border: 1px solid var(--primary);\n}\n\n.form-button:hover {\n  opacity: 0.8;\n}\n\n/* Page Content */\n.page-content {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 40px 20px;\n  line-height: 1.6;\n}\n\n.page-title {\n  font-size: 24px;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n  text-align: center;\n}\n\n.page-content h2 {\n  font-size: 16px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  margin: 30px 0 15px 0;\n}\n\n.page-content p {\n  margin-bottom: 20px;\n}\n\n/* FAQ Accordion */\n.faq-accordion {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.faq-item {\n  border-bottom: 1px solid var(--border);\n  margin-bottom: 20px;\n}\n\n.faq-question {\n  background: none;\n  border: none;\n  width: 100%;\n  text-align: left;\n  padding: 20px 0;\n  font-family: 'Courier New', monospace;\n  font-size: 14px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  cursor: pointer;\n  color: var(--text);\n  transition: color 0.2s ease;\n}\n\n.faq-question:hover {\n  color: var(--primary);\n}\n\n.faq-answer {\n  padding: 0 0 20px 0;\n  display: none;\n  line-height: 1.6;\n}\n\n.faq-answer.open {\n  display: block;\n}\n\n/* Contact Form */\n.contact-form {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.form-group {\n  margin-bottom: 25px;\n}\n\n/* Responsive Design */\n@media (max-width: 1024px) {\n  .product-detail-content {\n    grid-template-columns: 1fr;\n    gap: 30px;\n    max-height: 95vh;\n    overflow-y: auto;\n  }\n  \n  .product-detail-image {\n    order: 1;\n  }\n  \n  .product-detail-info {\n    order: 2;\n  }\n}\n\n@media (max-width: 768px) {\n  .sidebar {\n    width: 100%;\n  }\n  \n  .product-grid {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 25px;\n    padding: 20px 15px;\n  }\n  \n  .product-detail-content {\n    padding: 20px;\n    margin: 20px;\n    max-height: 90vh;\n  }\n  \n  .product-detail-image img {\n    max-height: 50vh;\n  }\n  \n  .page-content {\n    padding: 20px 15px;\n  }\n}","size_bytes":10270},"wordpress-backup/files/wp-content/themes/colombe-blank/js/main.js":{"content":"/**\n * COLOMBE BLANK Main JavaScript\n */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // DOM Elements\n    const menuToggle = document.getElementById('menuToggle');\n    const textMenuToggle = document.getElementById('textMenuToggle');\n    const leftSidebar = document.getElementById('leftSidebar');\n    const rightSidebar = document.getElementById('rightSidebar');\n    const overlay = document.getElementById('overlay');\n    const productModal = document.getElementById('productModal');\n\n    // Menu Toggle Functions\n    function toggleLeftSidebar() {\n        leftSidebar.classList.toggle('open');\n        rightSidebar.classList.remove('open');\n        updateOverlay();\n    }\n\n    function toggleRightSidebar() {\n        rightSidebar.classList.toggle('open');\n        leftSidebar.classList.remove('open');\n        updateOverlay();\n    }\n\n    function closeSidebars() {\n        leftSidebar.classList.remove('open');\n        rightSidebar.classList.remove('open');\n        updateOverlay();\n    }\n\n    function updateOverlay() {\n        if (leftSidebar.classList.contains('open') || rightSidebar.classList.contains('open')) {\n            overlay.classList.add('active');\n        } else {\n            overlay.classList.remove('active');\n        }\n    }\n\n    // Event Listeners\n    if (menuToggle) {\n        menuToggle.addEventListener('click', toggleLeftSidebar);\n    }\n\n    if (textMenuToggle) {\n        textMenuToggle.addEventListener('click', toggleRightSidebar);\n    }\n\n    if (overlay) {\n        overlay.addEventListener('click', closeSidebars);\n    }\n\n    // Close sidebars on escape key\n    document.addEventListener('keydown', function(e) {\n        if (e.key === 'Escape') {\n            closeSidebars();\n            closeProductDetail();\n        }\n    });\n\n    // Product filtering\n    const categoryLinks = document.querySelectorAll('.sidebar-menu a[href*=\"/category/\"]');\n    categoryLinks.forEach(link => {\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            const category = this.getAttribute('href').split('/category/')[1];\n            filterProducts(category);\n            closeSidebars();\n        });\n    });\n\n    // Contact form handling\n    const contactForm = document.getElementById('contactForm');\n    if (contactForm) {\n        contactForm.addEventListener('submit', function(e) {\n            e.preventDefault();\n            \n            const formData = new FormData(this);\n            formData.append('action', 'contact_form');\n            formData.append('nonce', ajax_object.nonce);\n\n            fetch(ajax_object.ajax_url, {\n                method: 'POST',\n                body: formData\n            })\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    alert('Message sent successfully!');\n                    contactForm.reset();\n                } else {\n                    alert('Failed to send message. Please try again.');\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n                alert('An error occurred. Please try again.');\n            });\n        });\n    }\n\n    // Smooth scrolling for anchor links\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n        anchor.addEventListener('click', function (e) {\n            e.preventDefault();\n            const target = document.querySelector(this.getAttribute('href'));\n            if (target) {\n                target.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start'\n                });\n            }\n        });\n    });\n\n    // FAQ Accordion\n    const faqQuestions = document.querySelectorAll('.faq-question');\n    faqQuestions.forEach(question => {\n        question.addEventListener('click', function() {\n            const answer = this.nextElementSibling;\n            const isOpen = answer.classList.contains('open');\n            \n            // Close all answers\n            document.querySelectorAll('.faq-answer').forEach(ans => {\n                ans.classList.remove('open');\n            });\n            \n            // Open clicked answer if it wasn't already open\n            if (!isOpen) {\n                answer.classList.add('open');\n            }\n        });\n    });\n\n    // Lazy loading for images\n    if ('IntersectionObserver' in window) {\n        const imageObserver = new IntersectionObserver((entries, observer) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    const img = entry.target;\n                    img.src = img.dataset.src;\n                    img.classList.remove('lazy');\n                    imageObserver.unobserve(img);\n                }\n            });\n        });\n\n        document.querySelectorAll('img[data-src]').forEach(img => {\n            imageObserver.observe(img);\n        });\n    }\n});\n\n// Global functions for onclick handlers\nfunction filterProducts(category) {\n    const productCards = document.querySelectorAll('.product-card');\n    \n    productCards.forEach(card => {\n        if (category === '' || category === 'all') {\n            card.style.display = 'block';\n        } else {\n            // Add logic to show/hide based on category\n            // This would depend on how you structure your product data\n            card.style.display = 'block';\n        }\n    });\n    \n    // Close sidebars\n    const leftSidebar = document.getElementById('leftSidebar');\n    const rightSidebar = document.getElementById('rightSidebar');\n    const overlay = document.getElementById('overlay');\n    \n    if (leftSidebar) leftSidebar.classList.remove('open');\n    if (rightSidebar) rightSidebar.classList.remove('open');\n    if (overlay) overlay.classList.remove('active');\n}\n\n// Sort products function\nfunction sortProducts(sortType) {\n    const productGrid = document.getElementById('productGrid');\n    const productCards = Array.from(document.querySelectorAll('.product-card'));\n    \n    productCards.sort((a, b) => {\n        const priceA = parseInt(a.querySelector('.product-price').textContent.replace('$', ''));\n        const priceB = parseInt(b.querySelector('.product-price').textContent.replace('$', ''));\n        \n        switch(sortType) {\n            case 'price_low':\n                return priceA - priceB;\n            case 'price_high':\n                return priceB - priceA;\n            case 'newest':\n            default:\n                return 0; // Keep original order for newest\n        }\n    });\n    \n    // Re-append sorted cards\n    productCards.forEach(card => productGrid.appendChild(card));\n    \n    // Close sidebars\n    const leftSidebar = document.getElementById('leftSidebar');\n    const rightSidebar = document.getElementById('rightSidebar');\n    const overlay = document.getElementById('overlay');\n    \n    if (leftSidebar) leftSidebar.classList.remove('open');\n    if (rightSidebar) rightSidebar.classList.remove('open');\n    if (overlay) overlay.classList.remove('active');\n}\n\n// Product Detail Modal Functions (Global scope for onclick handlers)\nfunction openProductDetail(name, price, image) {\n    const modal = document.getElementById('productModal');\n    const modalImage = document.getElementById('modalImage');\n    const modalName = document.getElementById('modalName');\n    const modalPrice = document.getElementById('modalPrice');\n\n    if (modal && modalImage && modalName && modalPrice) {\n        modalImage.src = image;\n        modalImage.alt = name;\n        modalName.textContent = name;\n        modalPrice.textContent = price;\n        \n        modal.classList.add('active');\n        document.body.style.overflow = 'hidden';\n    }\n}\n\nfunction closeProductDetail() {\n    const modal = document.getElementById('productModal');\n    if (modal) {\n        modal.classList.remove('active');\n        document.body.style.overflow = '';\n    }\n}\n\n// Add to cart functionality (basic implementation)\nfunction addToCart(productId, size) {\n    // This would typically integrate with WordPress/WooCommerce\n    console.log('Adding to cart:', productId, size);\n    \n    // Show confirmation\n    const button = event.target;\n    const originalText = button.textContent;\n    button.textContent = 'ADDED';\n    button.style.opacity = '0.6';\n    \n    setTimeout(() => {\n        button.textContent = originalText;\n        button.style.opacity = '1';\n    }, 2000);\n}\n\n// Newsletter signup\nfunction subscribeNewsletter(email) {\n    // Basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n        alert('Please enter a valid email address.');\n        return;\n    }\n    \n    // This would integrate with your email service\n    console.log('Newsletter signup:', email);\n    alert('Thank you for subscribing to our newsletter!');\n}","size_bytes":8848},"wordpress-backup/README.md":{"content":"# Colombe Blank WordPress Theme Backup\n\nThis is a complete WordPress backup package for the Colombe Blank luxury fashion theme, designed for Local by WordPress import.\n\n## Package Contents\n\n- **wp-content/**: Contains the complete theme files and structure\n  - **themes/colombe-blank/**: Main theme directory with PHP, CSS, and JavaScript files\n  - **plugins/**: Empty directory for future plugin installation\n  - **uploads/**: Empty directory for media uploads\n\n- **database.sql**: Sample database with products, pages, and theme configuration\n\n## Features\n\n### Pentacle Startup Animation\n- Interactive pentacle (5-pointed star) drawn with HTML5 Canvas\n- Mouse-responsive lighting effects in triangular sections\n- Click to enter the main website experience\n\n### Theme Functionality\n- Custom product post type with metadata (price, sizes, stock status)\n- Product categories and types taxonomy\n- Shopping cart functionality with PHP sessions\n- AJAX-powered product details and cart management\n- Responsive design with mobile-first approach\n- Contact form with email functionality\n\n### Template Files\n- `index.php`: Main homepage with product grid and startup animation\n- `single-product.php`: Individual product pages\n- `archive-product.php`: Product catalog listing\n- `page.php`: General page template\n- `page-about.php`: Custom about page\n- `page-contact.php`: Contact form page\n- `header.php` and `footer.php`: Site structure\n\n### Styling\n- Pure CSS (no build tools required)\n- Monospace typography (Courier New)\n- Minimalist color scheme with CSS custom properties\n- Responsive grid layouts\n- Smooth animations and transitions\n\n## Installation Instructions\n\n1. **Download Local by WordPress**: https://localwp.com/\n2. **Import the Backup**:\n   - Open Local\n   - Click \"Import\" or drag and drop `colombe-blank-wordpress-backup.tar.gz`\n   - Follow the import wizard\n   - Choose site domain and local folder\n\n3. **After Import**:\n   - The theme will be automatically activated\n   - Sample products will be available\n   - Navigate to **Products** in the admin to add more items\n   - Customize pages through **Pages** section\n\n## Theme Customization\n\n### Adding Products\n1. Go to **Products** → **Add New Product** in WordPress admin\n2. Add title, description, and featured image\n3. Set price, sizes, and stock status in the Product Details metabox\n4. Assign product categories (Men/Women) and types (Clothing/Accessories/Shoes)\n\n### Customizing Pages\n- Edit content through **Pages** section in WordPress admin\n- Contact form emails are sent to the admin email address\n- Footer widgets can be added through **Appearance** → **Widgets**\n\n### Styling Changes\n- Main styles are in `wp-content/themes/colombe-blank/style.css`\n- JavaScript functionality in `wp-content/themes/colombe-blank/assets/js/main.js`\n- PHP functions in `wp-content/themes/colombe-blank/functions.php`\n\n## Browser Compatibility\n- Modern browsers (Chrome, Firefox, Safari, Edge)\n- Mobile responsive design\n- HTML5 Canvas support required for startup animation\n\n## Technical Requirements\n- WordPress 5.0+\n- PHP 7.4+\n- Modern web browser with JavaScript enabled\n\n## Support\nThis theme is designed for Local by WordPress development environment. For production deployment, ensure all file permissions and server configurations are properly set.\n\n## Version\nVersion 1.0 - Initial release with pentacle startup animation and complete ecommerce functionality.","size_bytes":3424},"client/src/components/PentacleStartup.tsx":{"content":"import React, { useState, useEffect, useRef } from 'react';\n\ninterface BorromeanStartupProps {\n  onEnter: () => void;\n}\n\nexport default function BorromeanStartup({ onEnter }: BorromeanStartupProps) {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMousePosition({ x: e.clientX, y: e.clientY });\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size with device pixel ratio for high quality\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const displayWidth = window.innerWidth;\n    const displayHeight = window.innerHeight;\n    \n    canvas.width = displayWidth * devicePixelRatio;\n    canvas.height = displayHeight * devicePixelRatio;\n    canvas.style.width = displayWidth + 'px';\n    canvas.style.height = displayHeight + 'px';\n    \n    ctx.scale(devicePixelRatio, devicePixelRatio);\n\n    // Clear canvas\n    ctx.clearRect(0, 0, displayWidth, displayHeight);\n\n    // Calculate center for 7-pointed star\n    const centerX = displayWidth / 2;\n    const centerY = displayHeight / 2 + 50; // Offset down to make room for title\n    const starRadius = Math.min(displayWidth, displayHeight) * 0.12;\n\n    // Create 7-pointed star with lines from center\n    const lines = [];\n    for (let i = 0; i < 7; i++) {\n      const angle = (i * 2 * Math.PI) / 7 - Math.PI / 2; // Start from top\n      const endX = centerX + starRadius * Math.cos(angle);\n      const endY = centerY + starRadius * Math.sin(angle);\n      lines.push({\n        startX: centerX,\n        startY: centerY,\n        endX: endX,\n        endY: endY,\n        angle: angle\n      });\n    }\n\n    // Calculate mouse angle from center\n    const mouseAngle = Math.atan2(mousePosition.y - centerY, mousePosition.x - centerX);\n    const normalizedMouseAngle = ((mouseAngle + Math.PI * 2) % (Math.PI * 2));\n    \n    // Draw lines with directional lighting\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    \n    lines.forEach((line, index) => {\n      const lineAngle = ((line.angle + Math.PI * 2) % (Math.PI * 2));\n      \n      // Calculate angle difference between mouse and line\n      let angleDiff = Math.abs(normalizedMouseAngle - lineAngle);\n      if (angleDiff > Math.PI) {\n        angleDiff = Math.PI * 2 - angleDiff;\n      }\n      \n      // Calculate intensity based on angle proximity\n      const maxAngleDiff = Math.PI / 3; // 60 degrees for wider detection\n      const intensity = angleDiff < maxAngleDiff \n        ? Math.max(0.2, 1 - (angleDiff / maxAngleDiff)) // More pronounced effect\n        : 0.2;\n      \n      // Set line color based on intensity with better contrast\n      const baseGray = 100; // Darker base\n      const highlightGray = 220; // Brighter highlight\n      const gray = Math.floor(baseGray + (highlightGray - baseGray) * intensity);\n      ctx.strokeStyle = `rgb(${gray}, ${gray}, ${gray})`;\n      ctx.lineWidth = intensity > 0.7 ? 3 : 2; // Thicker lines when very close\n      \n      // Draw the line\n      ctx.beginPath();\n      ctx.moveTo(line.startX, line.startY);\n      ctx.lineTo(line.endX, line.endY);\n      ctx.stroke();\n    });\n\n  }, [mousePosition]);\n\n  const handleClick = () => {\n    onEnter();\n  };\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-white cursor-pointer flex flex-col items-center justify-center\"\n      onClick={handleClick}\n    >\n      {/* Title at top */}\n      <div className=\"absolute top-16 left-1/2 transform -translate-x-1/2 font-mono text-2xl text-black tracking-[0.2em] font-normal\">\n        COLOMBE BLANK\n      </div>\n      \n      <canvas \n        ref={canvasRef}\n        className=\"absolute inset-0 w-full h-full\"\n      />\n      \n      <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 font-mono text-sm text-gray-600 animate-pulse\">\n        Click to enter\n      </div>\n    </div>\n  );\n}","size_bytes":4176},"client/src/pages/about.tsx":{"content":"import React from 'react';\nimport { Link } from 'wouter';\n\nexport default function About() {\n  return (\n    <div className=\"min-h-screen bg-secondary text-text font-mono\">\n      <nav className=\"fixed top-0 left-0 right-0 h-16 bg-secondary border-b border-border flex items-center justify-between px-8 z-50\">\n        <div className=\"flex items-center gap-8\">\n          <Link href=\"/\" className=\"text-text hover:text-text-muted transition-colors\">\n            ← BACK\n          </Link>\n          <Link href=\"/\" className=\"text-lg font-normal tracking-wider\">\n            COLOMBE BLANK\n          </Link>\n        </div>\n      </nav>\n\n      <main className=\"pt-16 px-8 py-16 max-w-4xl mx-auto\">\n        <header className=\"text-center mb-16\">\n          <h1 className=\"text-4xl mb-4\">ABOUT COLOMBE BLANK</h1>\n          <p className=\"text-text-muted\">Where minimalist design meets luxury fashion</p>\n        </header>\n\n        <div className=\"space-y-16\">\n          <section>\n            <h2 className=\"text-2xl mb-8\">Our Story</h2>\n            <div className=\"space-y-6 text-text-muted leading-relaxed\">\n              <p>\n                Founded in 2020, Colombe Blank emerged from a simple belief: that true elegance lies in simplicity. \n                In a world saturated with excess, we saw an opportunity to create something different—a brand that \n                celebrates the beauty of restraint and the power of purposeful design.\n              </p>\n              <p>\n                Our name, \"Colombe Blank,\" represents the clean slate—the dove of peace meeting the endless \n                possibilities of empty space. It's this philosophy that guides every decision we make, from the \n                careful selection of materials to the precise cut of each garment.\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">Our Philosophy</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Timeless Over Trendy</h3>\n                <p className=\"text-text-muted\">\n                  We design pieces that transcend seasons and trends, creating a wardrobe that remains relevant \n                  year after year.\n                </p>\n              </div>\n              \n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Quality Over Quantity</h3>\n                <p className=\"text-text-muted\">\n                  Every piece is crafted with meticulous attention to detail, using only the finest materials \n                  and construction techniques.\n                </p>\n              </div>\n\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Sustainability</h3>\n                <p className=\"text-text-muted\">\n                  We believe in responsible fashion, using sustainable materials and ethical production practices \n                  wherever possible.\n                </p>\n              </div>\n\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Conscious Consumption</h3>\n                <p className=\"text-text-muted\">\n                  We encourage thoughtful purchasing decisions, creating pieces designed to be cherished and \n                  worn for years to come.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">Our Approach</h2>\n            <div className=\"space-y-6 text-text-muted leading-relaxed\">\n              <p>\n                At Colombe Blank, we believe that luxury isn't about ostentation—it's about the confidence that \n                comes from wearing something perfectly made. Our design process begins with the essential question: \n                \"What does this piece need to be?\" From there, we strip away everything unnecessary, leaving only \n                what serves both function and form.\n              </p>\n              <p>\n                Each collection is curated rather than created in excess. We work with a select group of artisans \n                and suppliers who share our commitment to quality and ethical practices. This allows us to maintain \n                complete oversight of our supply chain and ensure that every piece meets our exacting standards.\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">The Collections</h2>\n            <div className=\"space-y-8\">\n              <div>\n                <h3 className=\"text-lg mb-4\">Women's Collection</h3>\n                <p className=\"text-text-muted\">\n                  Our women's line features carefully considered pieces that form the foundation of a conscious wardrobe. \n                  From essential tops crafted in organic cotton to structured blazers that transition seamlessly from \n                  day to evening, each piece is designed to work harmoniously with others in your closet.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"text-lg mb-4\">Men's Collection</h3>\n                <p className=\"text-text-muted\">\n                  The men's collection embodies refined simplicity through clean lines and impeccable tailoring. \n                  Classic silhouettes are updated with modern sensibilities, creating pieces that feel both timeless \n                  and contemporary.\n                </p>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg mb-4\">Accessories</h3>\n                <p className=\"text-text-muted\">\n                  Our accessories collection features carefully selected pieces that complement and complete your look. \n                  From luxurious scarves in the finest cashmere to leather goods crafted by master artisans, each \n                  accessory is designed to elevate your everyday experience.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">Our Commitment</h2>\n            <div className=\"p-8 border border-border\">\n              <div className=\"space-y-6 text-text-muted\">\n                <p>\n                  <strong>To Quality:</strong> We stand behind every piece we create. Our commitment to quality means \n                  using only the finest materials and working with skilled artisans who take pride in their craft.\n                </p>\n                <p>\n                  <strong>To Sustainability:</strong> We're committed to minimizing our environmental impact through \n                  responsible sourcing, reduced packaging, and supporting suppliers who share our values.\n                </p>\n                <p>\n                  <strong>To You:</strong> We believe in building lasting relationships with our customers based on \n                  trust, transparency, and exceptional service. Your satisfaction is our priority.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"text-center\">\n            <h2 className=\"text-2xl mb-8\">Experience Colombe Blank</h2>\n            <p className=\"text-text-muted mb-8 max-w-2xl mx-auto\">\n              We invite you to discover the quiet confidence that comes from wearing pieces designed with intention and \n              crafted with care. Welcome to a more thoughtful approach to luxury fashion.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link\n                href=\"/\"\n                className=\"inline-block bg-primary text-secondary px-8 py-3 hover:opacity-80 transition-opacity\"\n              >\n                SHOP COLLECTION\n              </Link>\n              <Link\n                href=\"/contact\"\n                className=\"inline-block border border-border px-8 py-3 hover:bg-hover transition-colors\"\n              >\n                GET IN TOUCH\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":8256},"client/src/pages/contact.tsx":{"content":"import React, { useState } from 'react';\nimport { Link } from 'wouter';\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setSubmitStatus('success');\n      setFormData({ name: '', email: '', subject: '', message: '' });\n    } catch (error) {\n      setSubmitStatus('error');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-secondary text-text font-mono\">\n      <nav className=\"fixed top-0 left-0 right-0 h-16 bg-secondary border-b border-border flex items-center justify-between px-8 z-50\">\n        <div className=\"flex items-center gap-8\">\n          <Link href=\"/\" className=\"text-text hover:text-text-muted transition-colors\">\n            ← BACK\n          </Link>\n          <Link href=\"/\" className=\"text-lg font-normal tracking-wider\">\n            COLOMBE BLANK\n          </Link>\n        </div>\n      </nav>\n\n      <main className=\"pt-16 px-8 py-16 max-w-6xl mx-auto\">\n        <header className=\"text-center mb-16\">\n          <h1 className=\"text-4xl mb-4\">CONTACT US</h1>\n          <p className=\"text-text-muted\">We'd love to hear from you. Send us a message and we'll respond as soon as possible.</p>\n        </header>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16\">\n          {/* Contact Form */}\n          <div>\n            <h2 className=\"text-2xl mb-8\">Send us a Message</h2>\n            \n            {submitStatus === 'success' && (\n              <div className=\"mb-8 p-4 border border-border bg-green-50 text-green-800\">\n                Thank you for your message! We'll get back to you soon.\n              </div>\n            )}\n            \n            {submitStatus === 'error' && (\n              <div className=\"mb-8 p-4 border border-border bg-red-50 text-red-800\">\n                Sorry, there was an error sending your message. Please try again.\n              </div>\n            )}\n\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm mb-2\">\n                  Name *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary\"\n                  data-testid=\"input-name\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm mb-2\">\n                  Email *\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary\"\n                  data-testid=\"input-email\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"subject\" className=\"block text-sm mb-2\">\n                  Subject *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={formData.subject}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary\"\n                  data-testid=\"input-subject\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"message\" className=\"block text-sm mb-2\">\n                  Message *\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleInputChange}\n                  required\n                  rows={6}\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary resize-vertical\"\n                  data-testid=\"textarea-message\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"w-full bg-primary text-secondary py-4 hover:opacity-80 transition-opacity disabled:opacity-50\"\n                data-testid=\"button-submit\"\n              >\n                {isSubmitting ? 'SENDING...' : 'SEND MESSAGE'}\n              </button>\n            </form>\n          </div>\n\n          {/* Contact Information */}\n          <div>\n            <h2 className=\"text-2xl mb-8\">Get in Touch</h2>\n            \n            <div className=\"space-y-8\">\n              <div>\n                <h3 className=\"text-lg mb-4\">Visit Our Store</h3>\n                <div className=\"text-text-muted space-y-2\">\n                  <p>123 Fashion Avenue</p>\n                  <p>New York, NY 10001</p>\n                  <p>United States</p>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg mb-4\">Phone</h3>\n                <div className=\"text-text-muted space-y-2\">\n                  <p>+1 (555) 123-4567</p>\n                  <p className=\"text-sm\">Mon-Fri: 9AM-6PM EST</p>\n                  <p className=\"text-sm\">Sat: 10AM-4PM EST</p>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg mb-4\">Email</h3>\n                <div className=\"text-text-muted space-y-2\">\n                  <p>General: info@colombeblank.com</p>\n                  <p>Support: support@colombeblank.com</p>\n                  <p>Press: press@colombeblank.com</p>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg mb-4\">Business Hours</h3>\n                <div className=\"text-text-muted space-y-1\">\n                  <p>Monday - Friday: 9:00 AM - 6:00 PM EST</p>\n                  <p>Saturday: 10:00 AM - 4:00 PM EST</p>\n                  <p>Sunday: Closed</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Map placeholder */}\n            <div className=\"mt-8 h-64 border border-border bg-hover flex items-center justify-center\">\n              <p className=\"text-text-muted\">Interactive Map</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Additional Contact Methods */}\n        <section className=\"mt-16\">\n          <h2 className=\"text-2xl mb-8 text-center\">Other Ways to Connect</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"p-6 border border-border text-center\">\n              <h3 className=\"text-lg mb-4\">Live Chat</h3>\n              <p className=\"text-text-muted mb-4\">\n                Chat with our team in real-time for immediate assistance.\n              </p>\n              <button className=\"border border-border px-6 py-2 hover:bg-hover transition-colors\">\n                START CHAT\n              </button>\n            </div>\n            \n            <div className=\"p-6 border border-border text-center\">\n              <h3 className=\"text-lg mb-4\">FAQ</h3>\n              <p className=\"text-text-muted mb-4\">\n                Find quick answers to commonly asked questions.\n              </p>\n              <Link\n                href=\"/faq\"\n                className=\"inline-block border border-border px-6 py-2 hover:bg-hover transition-colors\"\n              >\n                VIEW FAQ\n              </Link>\n            </div>\n\n            <div className=\"p-6 border border-border text-center\">\n              <h3 className=\"text-lg mb-4\">Support Center</h3>\n              <p className=\"text-text-muted mb-4\">\n                Access our comprehensive support resources.\n              </p>\n              <Link\n                href=\"/support\"\n                className=\"inline-block border border-border px-6 py-2 hover:bg-hover transition-colors\"\n              >\n                GET SUPPORT\n              </Link>\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}","size_bytes":8857},"client/src/pages/faq.tsx":{"content":"import React, { useState } from 'react';\nimport { Link } from 'wouter';\n\ninterface FAQItem {\n  question: string;\n  answer: string;\n}\n\nconst faqData: FAQItem[] = [\n  {\n    question: \"What materials do you use in your products?\",\n    answer: \"We use only the finest materials including organic cotton, merino wool, cashmere, and premium Italian leather. Each material is carefully selected for its quality, sustainability, and comfort.\"\n  },\n  {\n    question: \"How do I determine my size?\",\n    answer: \"Please refer to our size guide for detailed measurements. If you're between sizes, we recommend sizing up for a more relaxed fit or sizing down for a more fitted look.\"\n  },\n  {\n    question: \"What is your return policy?\",\n    answer: \"We accept returns within 30 days of purchase. Items must be unworn, unwashed, and in original condition with tags attached. Return shipping is free for exchanges.\"\n  },\n  {\n    question: \"How long does shipping take?\",\n    answer: \"Standard shipping takes 3-5 business days. Express shipping (1-2 business days) is available for an additional fee. Free shipping is offered on orders over $200.\"\n  },\n  {\n    question: \"Do you ship internationally?\",\n    answer: \"Yes, we ship worldwide. International shipping times vary by location but typically take 7-14 business days. Additional customs fees may apply.\"\n  },\n  {\n    question: \"How should I care for my garments?\",\n    answer: \"Each product comes with specific care instructions on the label. Generally, we recommend gentle machine wash or hand wash for most items, and dry cleaning for structured pieces like blazers.\"\n  },\n  {\n    question: \"Are your products sustainable?\",\n    answer: \"Sustainability is core to our brand. We use organic and recycled materials where possible, work with ethical manufacturers, and design timeless pieces that last for years.\"\n  },\n  {\n    question: \"Can I track my order?\",\n    answer: \"Yes, you'll receive a tracking number via email once your order ships. You can track your package directly through the carrier's website or our order status page.\"\n  }\n];\n\nexport default function FAQ() {\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n\n  const toggleFAQ = (index: number) => {\n    setOpenIndex(openIndex === index ? null : index);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-secondary text-text font-mono\">\n      <nav className=\"fixed top-0 left-0 right-0 h-16 bg-secondary border-b border-border flex items-center justify-between px-8 z-50\">\n        <div className=\"flex items-center gap-8\">\n          <Link href=\"/\" className=\"text-text hover:text-text-muted transition-colors\">\n            ← BACK\n          </Link>\n          <Link href=\"/\" className=\"text-lg font-normal tracking-wider\">\n            COLOMBE BLANK\n          </Link>\n        </div>\n      </nav>\n\n      <main className=\"pt-16 px-8 py-16 max-w-4xl mx-auto\">\n        <header className=\"text-center mb-16\">\n          <h1 className=\"text-4xl mb-4\">FREQUENTLY ASKED QUESTIONS</h1>\n          <p className=\"text-text-muted\">Find answers to common questions about our products and services.</p>\n        </header>\n\n        <div className=\"space-y-4\">\n          {faqData.map((faq, index) => (\n            <div\n              key={index}\n              className=\"border border-border bg-secondary\"\n              data-testid={`faq-item-${index}`}\n            >\n              <button\n                className=\"w-full p-6 text-left flex justify-between items-center hover:bg-hover transition-colors\"\n                onClick={() => toggleFAQ(index)}\n                data-testid={`faq-question-${index}`}\n              >\n                <span className=\"text-lg font-medium\">{faq.question}</span>\n                <span className=\"text-2xl transform transition-transform\">\n                  {openIndex === index ? '−' : '+'}\n                </span>\n              </button>\n              \n              {openIndex === index && (\n                <div\n                  className=\"px-6 pb-6 text-text-muted leading-relaxed border-t border-border\"\n                  data-testid={`faq-answer-${index}`}\n                >\n                  {faq.answer}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-16 p-8 border border-border text-center\">\n          <h3 className=\"text-xl mb-4\">Still have questions?</h3>\n          <p className=\"text-text-muted mb-6\">\n            Our customer service team is here to help you with any additional inquiries.\n          </p>\n          <Link\n            href=\"/contact\"\n            className=\"inline-block bg-primary text-secondary px-8 py-3 hover:opacity-80 transition-opacity\"\n            data-testid=\"contact-link\"\n          >\n            CONTACT US\n          </Link>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":4828},"client/src/pages/returns.tsx":{"content":"import React from 'react';\nimport { Link } from 'wouter';\n\nexport default function Returns() {\n  return (\n    <div className=\"min-h-screen bg-secondary text-text font-mono\">\n      <nav className=\"fixed top-0 left-0 right-0 h-16 bg-secondary border-b border-border flex items-center justify-between px-8 z-50\">\n        <div className=\"flex items-center gap-8\">\n          <Link href=\"/\" className=\"text-text hover:text-text-muted transition-colors\">\n            ← BACK\n          </Link>\n          <Link href=\"/\" className=\"text-lg font-normal tracking-wider\">\n            COLOMBE BLANK\n          </Link>\n        </div>\n      </nav>\n\n      <main className=\"pt-16 px-8 py-16 max-w-4xl mx-auto\">\n        <header className=\"text-center mb-16\">\n          <h1 className=\"text-4xl mb-4\">RETURNS & EXCHANGES</h1>\n          <p className=\"text-text-muted\">Our flexible return policy ensures your complete satisfaction.</p>\n        </header>\n\n        <div className=\"space-y-16\">\n          <section>\n            <h2 className=\"text-2xl mb-8\">Return Policy</h2>\n            <div className=\"p-6 border border-border\">\n              <div className=\"space-y-4 text-text-muted\">\n                <p className=\"text-lg\">\n                  <strong>30-Day Return Window:</strong> We accept returns within 30 days of your purchase date.\n                </p>\n                <p>\n                  Items must be unworn, unwashed, and in original condition with all tags attached. \n                  Original packaging and receipt are required for all returns.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">Return Process</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              <div className=\"p-6 border border-border text-center\">\n                <div className=\"text-3xl mb-4\">1</div>\n                <h3 className=\"text-lg mb-4\">Initiate Return</h3>\n                <p className=\"text-text-muted\">\n                  Contact our customer service or use our online return portal to start your return.\n                </p>\n              </div>\n              \n              <div className=\"p-6 border border-border text-center\">\n                <div className=\"text-3xl mb-4\">2</div>\n                <h3 className=\"text-lg mb-4\">Package & Ship</h3>\n                <p className=\"text-text-muted\">\n                  Pack items securely with the provided return label and drop off at any authorized location.\n                </p>\n              </div>\n\n              <div className=\"p-6 border border-border text-center\">\n                <div className=\"text-3xl mb-4\">3</div>\n                <h3 className=\"text-lg mb-4\">Receive Refund</h3>\n                <p className=\"text-text-muted\">\n                  Your refund will be processed within 3-5 business days of receiving your return.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">Exchange Policy</h2>\n            <div className=\"space-y-6\">\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Size Exchanges</h3>\n                <p className=\"text-text-muted\">\n                  Free exchanges for different sizes within 30 days. Subject to availability.\n                </p>\n              </div>\n              \n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Color Exchanges</h3>\n                <p className=\"text-text-muted\">\n                  Exchange for different colors within the same product line. Original price applies.\n                </p>\n              </div>\n\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Damaged Items</h3>\n                <p className=\"text-text-muted\">\n                  Items damaged during shipping will be replaced at no cost. Contact us immediately upon receipt.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">Non-Returnable Items</h2>\n            <div className=\"p-6 border border-border\">\n              <ul className=\"list-disc list-inside space-y-2 text-text-muted\">\n                <li>Items purchased with a discount code over 30% off</li>\n                <li>Final sale items</li>\n                <li>Items that show signs of wear or alteration</li>\n                <li>Items without original tags</li>\n                <li>Undergarments and swimwear</li>\n                <li>Custom or personalized items</li>\n              </ul>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">Refund Information</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Refund Methods</h3>\n                <div className=\"space-y-2 text-text-muted\">\n                  <p>• Original payment method</p>\n                  <p>• Store credit (optional)</p>\n                  <p>• Gift card (for gift purchases)</p>\n                </div>\n              </div>\n              \n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Processing Time</h3>\n                <div className=\"space-y-2 text-text-muted\">\n                  <p>• Credit cards: 3-5 business days</p>\n                  <p>• PayPal: 2-3 business days</p>\n                  <p>• Store credit: Immediate</p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl mb-8\">International Returns</h2>\n            <div className=\"p-6 border border-border\">\n              <div className=\"space-y-4 text-text-muted\">\n                <p>\n                  International customers are responsible for return shipping costs. \n                  We recommend using a trackable service for returns.\n                </p>\n                <p>\n                  Duties and taxes paid on original order are non-refundable. \n                  Additional duties may apply on exchanges.\n                </p>\n                <p>\n                  Please contact our international support team for specific return instructions \n                  for your country.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"text-center p-8 border border-border\">\n            <h3 className=\"text-xl mb-4\">Start Your Return</h3>\n            <p className=\"text-text-muted mb-6\">\n              Ready to return or exchange an item? Our customer service team is here to help.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <button className=\"bg-primary text-secondary px-8 py-3 hover:opacity-80 transition-opacity\">\n                START RETURN\n              </button>\n              <Link\n                href=\"/support\"\n                className=\"inline-block border border-border px-8 py-3 hover:bg-hover transition-colors\"\n              >\n                CONTACT SUPPORT\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":7386},"client/src/pages/shipping.tsx":{"content":"import React from 'react';\nimport { Link } from 'wouter';\n\nexport default function Shipping() {\n  return (\n    <div className=\"min-h-screen bg-secondary text-text font-mono\">\n      <nav className=\"fixed top-0 left-0 right-0 h-16 bg-secondary border-b border-border flex items-center justify-between px-8 z-50\">\n        <div className=\"flex items-center gap-8\">\n          <Link href=\"/\" className=\"text-text hover:text-text-muted transition-colors\">\n            ← BACK\n          </Link>\n          <Link href=\"/\" className=\"text-lg font-normal tracking-wider\">\n            COLOMBE BLANK\n          </Link>\n        </div>\n      </nav>\n\n      <main className=\"pt-16 px-8 py-16 max-w-4xl mx-auto\">\n        <header className=\"text-center mb-16\">\n          <h1 className=\"text-4xl mb-4\">SHIPPING INFORMATION</h1>\n          <p className=\"text-text-muted\">Everything you need to know about our shipping policies and options.</p>\n        </header>\n\n        <div className=\"space-y-16\">\n          {/* Shipping Options */}\n          <section>\n            <h2 className=\"text-2xl mb-8\">Shipping Options</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Standard Shipping</h3>\n                <div className=\"space-y-2 text-text-muted\">\n                  <p><strong>Delivery Time:</strong> 3-5 business days</p>\n                  <p><strong>Cost:</strong> $8.95</p>\n                  <p><strong>Free shipping on orders over $200</strong></p>\n                </div>\n              </div>\n              \n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Express Shipping</h3>\n                <div className=\"space-y-2 text-text-muted\">\n                  <p><strong>Delivery Time:</strong> 1-2 business days</p>\n                  <p><strong>Cost:</strong> $24.95</p>\n                  <p><strong>Order by 2PM EST for same-day processing</strong></p>\n                </div>\n              </div>\n\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Overnight Shipping</h3>\n                <div className=\"space-y-2 text-text-muted\">\n                  <p><strong>Delivery Time:</strong> Next business day</p>\n                  <p><strong>Cost:</strong> $39.95</p>\n                  <p><strong>Order by 12PM EST for same-day processing</strong></p>\n                </div>\n              </div>\n\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">International Shipping</h3>\n                <div className=\"space-y-2 text-text-muted\">\n                  <p><strong>Delivery Time:</strong> 7-14 business days</p>\n                  <p><strong>Cost:</strong> Calculated at checkout</p>\n                  <p><strong>Duties and taxes may apply</strong></p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Processing Time */}\n          <section>\n            <h2 className=\"text-2xl mb-8\">Order Processing</h2>\n            <div className=\"p-6 border border-border\">\n              <div className=\"space-y-4 text-text-muted\">\n                <p>\n                  Orders are processed Monday through Friday, excluding holidays. \n                  All orders placed before 2PM EST will be processed the same business day.\n                </p>\n                <p>\n                  Orders placed after 2PM EST or on weekends will be processed the next business day.\n                </p>\n                <p>\n                  You will receive a confirmation email with tracking information once your order ships.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          {/* Shipping Destinations */}\n          <section>\n            <h2 className=\"text-2xl mb-8\">Shipping Destinations</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <div>\n                <h3 className=\"text-lg mb-4\">Domestic Shipping</h3>\n                <div className=\"text-text-muted\">\n                  <p className=\"mb-4\">We ship to all 50 United States, including:</p>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>Alaska and Hawaii</li>\n                    <li>APO/FPO addresses</li>\n                    <li>Puerto Rico and US territories</li>\n                  </ul>\n                </div>\n              </div>\n              \n              <div>\n                <h3 className=\"text-lg mb-4\">International Shipping</h3>\n                <div className=\"text-text-muted\">\n                  <p className=\"mb-4\">We ship worldwide to over 100 countries, including:</p>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    <li>Canada and Mexico</li>\n                    <li>European Union</li>\n                    <li>United Kingdom</li>\n                    <li>Australia and New Zealand</li>\n                    <li>Japan and South Korea</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Order Tracking */}\n          <section>\n            <h2 className=\"text-2xl mb-8\">Order Tracking</h2>\n            <div className=\"p-6 border border-border\">\n              <div className=\"space-y-4 text-text-muted\">\n                <p>\n                  Once your order ships, you'll receive a confirmation email with tracking information. \n                  You can track your package using the provided tracking number.\n                </p>\n                <p>\n                  For domestic orders, we use FedEx and UPS. For international orders, \n                  we use DHL Express and FedEx International.\n                </p>\n                <div className=\"mt-6\">\n                  <button className=\"bg-primary text-secondary px-8 py-3 hover:opacity-80 transition-opacity\">\n                    TRACK YOUR ORDER\n                  </button>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Special Instructions */}\n          <section>\n            <h2 className=\"text-2xl mb-8\">Special Instructions</h2>\n            <div className=\"space-y-6\">\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Holiday Shipping</h3>\n                <p className=\"text-text-muted\">\n                  During peak holiday seasons, please allow additional processing and shipping time. \n                  We recommend placing orders early to ensure delivery by your desired date.\n                </p>\n              </div>\n              \n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Gift Wrapping</h3>\n                <p className=\"text-text-muted\">\n                  Complimentary gift wrapping is available for all orders. \n                  Select the gift wrap option at checkout and include your personalized message.\n                </p>\n              </div>\n\n              <div className=\"p-6 border border-border\">\n                <h3 className=\"text-lg mb-4\">Address Changes</h3>\n                <p className=\"text-text-muted\">\n                  If you need to change your shipping address, please contact us immediately at \n                  support@colombeblank.com. We cannot modify addresses once the order has shipped.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          {/* Contact */}\n          <section className=\"text-center p-8 border border-border\">\n            <h3 className=\"text-xl mb-4\">Questions about your shipment?</h3>\n            <p className=\"text-text-muted mb-6\">\n              Our customer service team is here to help with any shipping questions or concerns.\n            </p>\n            <Link\n              href=\"/support\"\n              className=\"inline-block bg-primary text-secondary px-8 py-3 hover:opacity-80 transition-opacity\"\n            >\n              CONTACT SUPPORT\n            </Link>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":8165},"client/src/pages/size-guide.tsx":{"content":"import React, { useState } from 'react';\nimport { Link } from 'wouter';\n\nexport default function SizeGuide() {\n  const [selectedCategory, setSelectedCategory] = useState('women');\n\n  const sizeData = {\n    women: {\n      clothing: {\n        headers: ['Size', 'Bust', 'Waist', 'Hips'],\n        rows: [\n          ['XS', '32-33\"', '24-25\"', '34-35\"'],\n          ['S', '34-35\"', '26-27\"', '36-37\"'],\n          ['M', '36-37\"', '28-29\"', '38-39\"'],\n          ['L', '38-40\"', '30-32\"', '40-42\"'],\n          ['XL', '42-44\"', '34-36\"', '44-46\"']\n        ]\n      },\n      shoes: {\n        headers: ['US', 'EU', 'UK', 'Length (in)'],\n        rows: [\n          ['5', '35', '2.5', '8.5\"'],\n          ['6', '36', '3.5', '9\"'],\n          ['7', '37', '4.5', '9.25\"'],\n          ['8', '38', '5.5', '9.5\"'],\n          ['9', '39', '6.5', '9.75\"'],\n          ['10', '40', '7.5', '10\"'],\n          ['11', '41', '8.5', '10.25\"']\n        ]\n      }\n    },\n    men: {\n      clothing: {\n        headers: ['Size', 'Chest', 'Waist', 'Neck'],\n        rows: [\n          ['XS', '34-36\"', '28-30\"', '14-14.5\"'],\n          ['S', '36-38\"', '30-32\"', '15-15.5\"'],\n          ['M', '38-40\"', '32-34\"', '16-16.5\"'],\n          ['L', '40-42\"', '34-36\"', '17-17.5\"'],\n          ['XL', '42-44\"', '36-38\"', '18-18.5\"'],\n          ['XXL', '44-46\"', '38-40\"', '19-19.5\"']\n        ]\n      },\n      shoes: {\n        headers: ['US', 'EU', 'UK', 'Length (in)'],\n        rows: [\n          ['7', '40', '6', '9.75\"'],\n          ['8', '41', '7', '10\"'],\n          ['9', '42', '8', '10.25\"'],\n          ['10', '43', '9', '10.5\"'],\n          ['11', '44', '10', '10.75\"'],\n          ['12', '45', '11', '11\"'],\n          ['13', '46', '12', '11.25\"']\n        ]\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-secondary text-text font-mono\">\n      <nav className=\"fixed top-0 left-0 right-0 h-16 bg-secondary border-b border-border flex items-center justify-between px-8 z-50\">\n        <div className=\"flex items-center gap-8\">\n          <Link href=\"/\" className=\"text-text hover:text-text-muted transition-colors\">\n            ← BACK\n          </Link>\n          <Link href=\"/\" className=\"text-lg font-normal tracking-wider\">\n            COLOMBE BLANK\n          </Link>\n        </div>\n      </nav>\n\n      <main className=\"pt-16 px-8 py-16 max-w-6xl mx-auto\">\n        <header className=\"text-center mb-16\">\n          <h1 className=\"text-4xl mb-4\">SIZE GUIDE</h1>\n          <p className=\"text-text-muted\">Find your perfect fit with our comprehensive sizing charts.</p>\n        </header>\n\n        {/* Category Selector */}\n        <div className=\"flex justify-center mb-12\">\n          <div className=\"border border-border inline-flex\">\n            <button\n              className={`px-8 py-3 ${selectedCategory === 'women' \n                ? 'bg-primary text-secondary' \n                : 'bg-secondary text-text hover:bg-hover'\n              } transition-colors`}\n              onClick={() => setSelectedCategory('women')}\n              data-testid=\"button-women\"\n            >\n              WOMEN\n            </button>\n            <button\n              className={`px-8 py-3 border-l border-border ${selectedCategory === 'men' \n                ? 'bg-primary text-secondary' \n                : 'bg-secondary text-text hover:bg-hover'\n              } transition-colors`}\n              onClick={() => setSelectedCategory('men')}\n              data-testid=\"button-men\"\n            >\n              MEN\n            </button>\n          </div>\n        </div>\n\n        {/* Size Charts */}\n        <div className=\"space-y-16\">\n          {/* Clothing Sizes */}\n          <section>\n            <h2 className=\"text-2xl mb-8 text-center\">\n              {selectedCategory.toUpperCase()} CLOTHING SIZES\n            </h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full border border-border\">\n                <thead>\n                  <tr className=\"bg-hover\">\n                    {sizeData[selectedCategory as keyof typeof sizeData].clothing.headers.map((header, index) => (\n                      <th key={index} className=\"px-6 py-4 text-left border-r border-border last:border-r-0\">\n                        {header}\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {sizeData[selectedCategory as keyof typeof sizeData].clothing.rows.map((row, index) => (\n                    <tr key={index} className=\"border-t border-border\">\n                      {row.map((cell, cellIndex) => (\n                        <td key={cellIndex} className=\"px-6 py-4 border-r border-border last:border-r-0\">\n                          {cell}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </section>\n\n          {/* Shoe Sizes */}\n          <section>\n            <h2 className=\"text-2xl mb-8 text-center\">\n              {selectedCategory.toUpperCase()} SHOE SIZES\n            </h2>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full border border-border\">\n                <thead>\n                  <tr className=\"bg-hover\">\n                    {sizeData[selectedCategory as keyof typeof sizeData].shoes.headers.map((header, index) => (\n                      <th key={index} className=\"px-6 py-4 text-left border-r border-border last:border-r-0\">\n                        {header}\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {sizeData[selectedCategory as keyof typeof sizeData].shoes.rows.map((row, index) => (\n                    <tr key={index} className=\"border-t border-border\">\n                      {row.map((cell, cellIndex) => (\n                        <td key={cellIndex} className=\"px-6 py-4 border-r border-border last:border-r-0\">\n                          {cell}\n                        </td>\n                      ))}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        </div>\n\n        {/* How to Measure */}\n        <section className=\"mt-16\">\n          <h2 className=\"text-2xl mb-8 text-center\">HOW TO MEASURE</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Bust/Chest</h3>\n              <p className=\"text-text-muted text-sm\">\n                Measure around the fullest part of your bust/chest, keeping the tape parallel to the floor.\n              </p>\n            </div>\n            \n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Waist</h3>\n              <p className=\"text-text-muted text-sm\">\n                Measure around your natural waistline, which is the narrowest part of your torso.\n              </p>\n            </div>\n\n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Hips</h3>\n              <p className=\"text-text-muted text-sm\">\n                Measure around the fullest part of your hips, approximately 8\" below your waistline.\n              </p>\n            </div>\n\n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Inseam</h3>\n              <p className=\"text-text-muted text-sm\">\n                Measure from the top of your inner thigh to the bottom of your ankle.\n              </p>\n            </div>\n\n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Sleeve Length</h3>\n              <p className=\"text-text-muted text-sm\">\n                Measure from your shoulder to your wrist with your arm slightly bent.\n              </p>\n            </div>\n\n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Foot Length</h3>\n              <p className=\"text-text-muted text-sm\">\n                Measure from the back of your heel to the tip of your longest toe.\n              </p>\n            </div>\n          </div>\n        </section>\n\n        {/* Fit Guide */}\n        <section className=\"mt-16\">\n          <h2 className=\"text-2xl mb-8 text-center\">FIT GUIDE</h2>\n          <div className=\"space-y-6\">\n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Between Sizes?</h3>\n              <p className=\"text-text-muted\">\n                If you're between sizes, we recommend sizing up for a more relaxed fit or sizing down \n                for a more fitted look. Consider the style and intended use of the garment.\n              </p>\n            </div>\n            \n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Fabric Considerations</h3>\n              <p className=\"text-text-muted\">\n                Natural fibers like cotton may shrink slightly after washing. Stretchy fabrics like \n                jersey will conform to your body. Check individual product pages for specific fit notes.\n              </p>\n            </div>\n\n            <div className=\"p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Still Unsure?</h3>\n              <p className=\"text-text-muted\">\n                Our customer service team is happy to help you choose the right size. \n                We also offer free exchanges within 30 days.\n              </p>\n            </div>\n          </div>\n        </section>\n\n        {/* Contact */}\n        <section className=\"mt-16 text-center p-8 border border-border\">\n          <h3 className=\"text-xl mb-4\">Need Sizing Help?</h3>\n          <p className=\"text-text-muted mb-6\">\n            Our fit experts are available to help you find the perfect size.\n          </p>\n          <Link\n            href=\"/support\"\n            className=\"inline-block bg-primary text-secondary px-8 py-3 hover:opacity-80 transition-opacity\"\n          >\n            CONTACT SUPPORT\n          </Link>\n        </section>\n      </main>\n    </div>\n  );\n}","size_bytes":10202},"client/src/pages/support.tsx":{"content":"import React, { useState } from 'react';\nimport { Link } from 'wouter';\n\nexport default function Support() {\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    orderNumber: '',\n    category: '',\n    subject: '',\n    message: ''\n  });\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle form submission\n    alert('Support request submitted successfully!');\n    setFormData({\n      name: '',\n      email: '',\n      orderNumber: '',\n      category: '',\n      subject: '',\n      message: ''\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-secondary text-text font-mono\">\n      <nav className=\"fixed top-0 left-0 right-0 h-16 bg-secondary border-b border-border flex items-center justify-between px-8 z-50\">\n        <div className=\"flex items-center gap-8\">\n          <Link href=\"/\" className=\"text-text hover:text-text-muted transition-colors\">\n            ← BACK\n          </Link>\n          <Link href=\"/\" className=\"text-lg font-normal tracking-wider\">\n            COLOMBE BLANK\n          </Link>\n        </div>\n      </nav>\n\n      <main className=\"pt-16 px-8 py-16 max-w-4xl mx-auto\">\n        <header className=\"text-center mb-16\">\n          <h1 className=\"text-4xl mb-4\">CUSTOMER SUPPORT</h1>\n          <p className=\"text-text-muted\">We're here to help with any questions or concerns you may have.</p>\n        </header>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16\">\n          {/* Support Form */}\n          <div>\n            <h2 className=\"text-2xl mb-8\">Contact Support</h2>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm mb-2\">\n                  Full Name *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary\"\n                  data-testid=\"input-name\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm mb-2\">\n                  Email Address *\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary\"\n                  data-testid=\"input-email\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"orderNumber\" className=\"block text-sm mb-2\">\n                  Order Number (if applicable)\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"orderNumber\"\n                  name=\"orderNumber\"\n                  value={formData.orderNumber}\n                  onChange={handleInputChange}\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary\"\n                  data-testid=\"input-order-number\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"category\" className=\"block text-sm mb-2\">\n                  Category *\n                </label>\n                <select\n                  id=\"category\"\n                  name=\"category\"\n                  value={formData.category}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary\"\n                  data-testid=\"select-category\"\n                >\n                  <option value=\"\">Select Category</option>\n                  <option value=\"order-inquiry\">Order Inquiry</option>\n                  <option value=\"product-question\">Product Question</option>\n                  <option value=\"return-exchange\">Return/Exchange</option>\n                  <option value=\"shipping\">Shipping Issue</option>\n                  <option value=\"technical\">Technical Support</option>\n                  <option value=\"other\">Other</option>\n                </select>\n              </div>\n\n              <div>\n                <label htmlFor=\"subject\" className=\"block text-sm mb-2\">\n                  Subject *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={formData.subject}\n                  onChange={handleInputChange}\n                  required\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary\"\n                  data-testid=\"input-subject\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"message\" className=\"block text-sm mb-2\">\n                  Message *\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleInputChange}\n                  required\n                  rows={6}\n                  className=\"w-full p-4 border border-border bg-secondary focus:outline-none focus:border-primary resize-vertical\"\n                  data-testid=\"textarea-message\"\n                />\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"w-full bg-primary text-secondary py-4 hover:opacity-80 transition-opacity\"\n                data-testid=\"button-submit\"\n              >\n                SUBMIT REQUEST\n              </button>\n            </form>\n          </div>\n\n          {/* Support Information */}\n          <div>\n            <h2 className=\"text-2xl mb-8\">Other Ways to Reach Us</h2>\n            \n            <div className=\"space-y-8\">\n              <div>\n                <h3 className=\"text-lg mb-4\">Email Support</h3>\n                <p className=\"text-text-muted mb-2\">support@colombeblank.com</p>\n                <p className=\"text-sm text-text-muted\">Response time: Within 24 hours</p>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg mb-4\">Phone Support</h3>\n                <p className=\"text-text-muted mb-2\">+1 (555) 123-4567</p>\n                <p className=\"text-sm text-text-muted\">\n                  Mon-Fri: 9AM-6PM EST<br />\n                  Weekend support available for urgent matters\n                </p>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg mb-4\">Live Chat</h3>\n                <p className=\"text-text-muted mb-2\">Available on our website</p>\n                <p className=\"text-sm text-text-muted\">Mon-Fri: 9AM-6PM EST</p>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg mb-4\">Order Status</h3>\n                <p className=\"text-text-muted mb-4\">\n                  Check your order status and tracking information online\n                </p>\n                <button className=\"border border-border px-6 py-2 hover:bg-hover transition-colors\">\n                  TRACK ORDER\n                </button>\n              </div>\n            </div>\n\n            <div className=\"mt-12 p-6 border border-border\">\n              <h3 className=\"text-lg mb-4\">Quick Links</h3>\n              <div className=\"grid grid-cols-1 gap-2\">\n                <Link href=\"/faq\" className=\"text-text-muted hover:text-text transition-colors\">FAQ</Link>\n                <Link href=\"/shipping\" className=\"text-text-muted hover:text-text transition-colors\">Shipping Information</Link>\n                <Link href=\"/returns\" className=\"text-text-muted hover:text-text transition-colors\">Return Policy</Link>\n                <Link href=\"/size-guide\" className=\"text-text-muted hover:text-text transition-colors\">Size Guide</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":8470},"wordpress-backup/wp-content/themes/colombe-blank/archive-product.php":{"content":"<?php\n/**\n * Template for product archive\n */\n\nget_header(); ?>\n\n<div class=\"main-container\">\n    <nav class=\"top-nav\">\n        <div class=\"nav-left\">\n            <button id=\"menu-toggle\" class=\"menu-toggle\">MENU</button>\n            <a href=\"<?php echo home_url(); ?>\" class=\"brand\">COLOMBE BLANK</a>\n        </div>\n        <div class=\"nav-right\">\n            <button id=\"text-menu-toggle\" class=\"menu-toggle\">INFO</button>\n        </div>\n    </nav>\n\n    <main class=\"product-grid\">\n        <h1 style=\"grid-column: 1 / -1; text-align: center; margin-bottom: 2rem;\">PRODUCTS</h1>\n        \n        <?php if (have_posts()) : ?>\n            <?php while (have_posts()) : the_post(); \n                $price = get_post_meta(get_the_ID(), '_product_price', true);\n                $categories = wp_get_post_terms(get_the_ID(), 'product_category');\n                $types = wp_get_post_terms(get_the_ID(), 'product_type');\n                \n                $category_classes = '';\n                foreach ($categories as $cat) {\n                    $category_classes .= ' category-' . $cat->slug;\n                }\n                foreach ($types as $type) {\n                    $category_classes .= ' type-' . $type->slug;\n                }\n            ?>\n                <article class=\"product-card<?php echo $category_classes; ?>\">\n                    <a href=\"<?php the_permalink(); ?>\">\n                        <?php if (has_post_thumbnail()) : ?>\n                            <img src=\"<?php echo get_the_post_thumbnail_url(get_the_ID(), 'large'); ?>\" alt=\"<?php the_title(); ?>\" class=\"product-image\">\n                        <?php endif; ?>\n                        <div class=\"product-info\">\n                            <h3 class=\"product-name\"><?php the_title(); ?></h3>\n                            <?php if ($price) : ?>\n                                <p class=\"product-price\">$<?php echo number_format($price, 2); ?></p>\n                            <?php endif; ?>\n                        </div>\n                    </a>\n                </article>\n            <?php endwhile; ?>\n        <?php else : ?>\n            <p style=\"grid-column: 1 / -1; text-align: center;\">No products found.</p>\n        <?php endif; ?>\n    </main>\n</div>\n\n<?php get_footer(); ?>","size_bytes":2259},"wordpress-backup/wp-content/themes/colombe-blank/footer.php":{"content":"<?php if (is_active_sidebar('footer-1')) : ?>\n    <footer class=\"site-footer\">\n        <div class=\"footer-content\">\n            <?php dynamic_sidebar('footer-1'); ?>\n        </div>\n    </footer>\n<?php endif; ?>\n\n<?php wp_footer(); ?>\n</body>\n</html>","size_bytes":249},"wordpress-backup/wp-content/themes/colombe-blank/functions.php":{"content":"<?php\n/**\n * Colombe Blank Theme Functions\n */\n\n// Prevent direct access\nif (!defined('ABSPATH')) {\n    exit;\n}\n\n// Theme setup\nfunction colombe_blank_setup() {\n    // Add theme support for post thumbnails\n    add_theme_support('post-thumbnails');\n    \n    // Add theme support for title tag\n    add_theme_support('title-tag');\n    \n    // Add theme support for custom logo\n    add_theme_support('custom-logo');\n    \n    // Register navigation menus\n    register_nav_menus(array(\n        'primary' => __('Primary Menu', 'colombe-blank'),\n        'footer' => __('Footer Menu', 'colombe-blank'),\n    ));\n    \n    // Add theme support for HTML5 markup\n    add_theme_support('html5', array(\n        'search-form',\n        'comment-form',\n        'comment-list',\n        'gallery',\n        'caption',\n    ));\n}\nadd_action('after_setup_theme', 'colombe_blank_setup');\n\n// Enqueue styles and scripts\nfunction colombe_blank_scripts() {\n    wp_enqueue_style('colombe-blank-style', get_stylesheet_uri(), array(), '1.0.0');\n    wp_enqueue_script('colombe-blank-script', get_template_directory_uri() . '/assets/js/main.js', array(), '1.0.0', true);\n    \n    // Localize script for AJAX\n    wp_localize_script('colombe-blank-script', 'colombe_ajax', array(\n        'ajax_url' => admin_url('admin-ajax.php'),\n        'nonce' => wp_create_nonce('colombe_nonce')\n    ));\n}\nadd_action('wp_enqueue_scripts', 'colombe_blank_scripts');\n\n// Custom post type for Products\nfunction register_product_post_type() {\n    $labels = array(\n        'name' => 'Products',\n        'singular_name' => 'Product',\n        'menu_name' => 'Products',\n        'add_new' => 'Add New Product',\n        'add_new_item' => 'Add New Product',\n        'edit_item' => 'Edit Product',\n        'new_item' => 'New Product',\n        'view_item' => 'View Product',\n        'search_items' => 'Search Products',\n        'not_found' => 'No products found',\n        'not_found_in_trash' => 'No products found in trash'\n    );\n\n    $args = array(\n        'labels' => $labels,\n        'public' => true,\n        'publicly_queryable' => true,\n        'show_ui' => true,\n        'show_in_menu' => true,\n        'query_var' => true,\n        'rewrite' => array('slug' => 'product'),\n        'capability_type' => 'post',\n        'has_archive' => true,\n        'hierarchical' => false,\n        'menu_position' => 20,\n        'supports' => array('title', 'editor', 'thumbnail', 'custom-fields'),\n        'menu_icon' => 'dashicons-products'\n    );\n\n    register_post_type('product', $args);\n}\nadd_action('init', 'register_product_post_type');\n\n// Custom taxonomies for products\nfunction register_product_taxonomies() {\n    // Category taxonomy\n    register_taxonomy('product_category', 'product', array(\n        'hierarchical' => true,\n        'labels' => array(\n            'name' => 'Product Categories',\n            'singular_name' => 'Product Category',\n        ),\n        'show_ui' => true,\n        'show_admin_column' => true,\n        'query_var' => true,\n        'rewrite' => array('slug' => 'product-category'),\n    ));\n    \n    // Type taxonomy\n    register_taxonomy('product_type', 'product', array(\n        'hierarchical' => true,\n        'labels' => array(\n            'name' => 'Product Types',\n            'singular_name' => 'Product Type',\n        ),\n        'show_ui' => true,\n        'show_admin_column' => true,\n        'query_var' => true,\n        'rewrite' => array('slug' => 'product-type'),\n    ));\n}\nadd_action('init', 'register_product_taxonomies');\n\n// Add custom meta boxes for products\nfunction add_product_meta_boxes() {\n    add_meta_box(\n        'product_details',\n        'Product Details',\n        'product_details_callback',\n        'product',\n        'normal',\n        'high'\n    );\n}\nadd_action('add_meta_boxes', 'add_product_meta_boxes');\n\nfunction product_details_callback($post) {\n    wp_nonce_field('product_details_nonce', 'product_details_nonce_field');\n    \n    $price = get_post_meta($post->ID, '_product_price', true);\n    $sizes = get_post_meta($post->ID, '_product_sizes', true);\n    $in_stock = get_post_meta($post->ID, '_product_in_stock', true);\n    $additional_images = get_post_meta($post->ID, '_product_additional_images', true);\n    \n    ?>\n    <table class=\"form-table\">\n        <tr>\n            <th><label for=\"product_price\">Price ($)</label></th>\n            <td><input type=\"number\" step=\"0.01\" id=\"product_price\" name=\"product_price\" value=\"<?php echo esc_attr($price); ?>\" /></td>\n        </tr>\n        <tr>\n            <th><label for=\"product_sizes\">Available Sizes</label></th>\n            <td>\n                <input type=\"text\" id=\"product_sizes\" name=\"product_sizes\" value=\"<?php echo esc_attr($sizes); ?>\" />\n                <p class=\"description\">Enter sizes separated by commas (e.g., XS, S, M, L, XL)</p>\n            </td>\n        </tr>\n        <tr>\n            <th><label for=\"product_in_stock\">In Stock</label></th>\n            <td>\n                <input type=\"checkbox\" id=\"product_in_stock\" name=\"product_in_stock\" value=\"1\" <?php checked($in_stock, '1'); ?> />\n                <label for=\"product_in_stock\">Yes</label>\n            </td>\n        </tr>\n        <tr>\n            <th><label for=\"product_additional_images\">Additional Images</label></th>\n            <td>\n                <textarea id=\"product_additional_images\" name=\"product_additional_images\" rows=\"3\" cols=\"50\"><?php echo esc_textarea($additional_images); ?></textarea>\n                <p class=\"description\">Enter image URLs separated by commas</p>\n            </td>\n        </tr>\n    </table>\n    <?php\n}\n\nfunction save_product_details($post_id) {\n    if (!isset($_POST['product_details_nonce_field']) || !wp_verify_nonce($_POST['product_details_nonce_field'], 'product_details_nonce')) {\n        return;\n    }\n\n    if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) {\n        return;\n    }\n\n    if (isset($_POST['post_type']) && 'product' == $_POST['post_type']) {\n        if (!current_user_can('edit_post', $post_id)) {\n            return;\n        }\n    }\n\n    if (isset($_POST['product_price'])) {\n        update_post_meta($post_id, '_product_price', sanitize_text_field($_POST['product_price']));\n    }\n    \n    if (isset($_POST['product_sizes'])) {\n        update_post_meta($post_id, '_product_sizes', sanitize_text_field($_POST['product_sizes']));\n    }\n    \n    if (isset($_POST['product_in_stock'])) {\n        update_post_meta($post_id, '_product_in_stock', '1');\n    } else {\n        update_post_meta($post_id, '_product_in_stock', '0');\n    }\n    \n    if (isset($_POST['product_additional_images'])) {\n        update_post_meta($post_id, '_product_additional_images', sanitize_textarea_field($_POST['product_additional_images']));\n    }\n}\nadd_action('save_post', 'save_product_details');\n\n// AJAX handler for adding to cart\nfunction handle_add_to_cart() {\n    check_ajax_referer('colombe_nonce', 'nonce');\n    \n    $product_id = intval($_POST['product_id']);\n    $quantity = intval($_POST['quantity']);\n    $size = sanitize_text_field($_POST['size']);\n    \n    // Get current cart from session\n    if (!session_id()) {\n        session_start();\n    }\n    \n    if (!isset($_SESSION['cart'])) {\n        $_SESSION['cart'] = array();\n    }\n    \n    // Add or update cart item\n    $cart_key = $product_id . '_' . $size;\n    if (isset($_SESSION['cart'][$cart_key])) {\n        $_SESSION['cart'][$cart_key]['quantity'] += $quantity;\n    } else {\n        $_SESSION['cart'][$cart_key] = array(\n            'product_id' => $product_id,\n            'quantity' => $quantity,\n            'size' => $size\n        );\n    }\n    \n    wp_send_json_success(array(\n        'message' => 'Product added to cart',\n        'cart_count' => count($_SESSION['cart'])\n    ));\n}\nadd_action('wp_ajax_add_to_cart', 'handle_add_to_cart');\nadd_action('wp_ajax_nopriv_add_to_cart', 'handle_add_to_cart');\n\n// AJAX handler for getting cart contents\nfunction handle_get_cart() {\n    check_ajax_referer('colombe_nonce', 'nonce');\n    \n    if (!session_id()) {\n        session_start();\n    }\n    \n    $cart = isset($_SESSION['cart']) ? $_SESSION['cart'] : array();\n    $cart_items = array();\n    $total = 0;\n    \n    foreach ($cart as $item) {\n        $product = get_post($item['product_id']);\n        $price = get_post_meta($item['product_id'], '_product_price', true);\n        $thumbnail = get_the_post_thumbnail_url($item['product_id'], 'medium');\n        \n        $cart_items[] = array(\n            'product_id' => $item['product_id'],\n            'title' => $product->post_title,\n            'price' => $price,\n            'quantity' => $item['quantity'],\n            'size' => $item['size'],\n            'thumbnail' => $thumbnail,\n            'subtotal' => $price * $item['quantity']\n        );\n        \n        $total += $price * $item['quantity'];\n    }\n    \n    wp_send_json_success(array(\n        'items' => $cart_items,\n        'total' => $total\n    ));\n}\nadd_action('wp_ajax_get_cart', 'handle_get_cart');\nadd_action('wp_ajax_nopriv_get_cart', 'handle_get_cart');\n\n// AJAX handler for getting product details\nfunction handle_get_product_details() {\n    check_ajax_referer('colombe_nonce', 'nonce');\n    \n    $product_id = intval($_POST['product_id']);\n    $product = get_post($product_id);\n    \n    if (!$product || $product->post_type !== 'product') {\n        wp_send_json_error(array('message' => 'Product not found'));\n        return;\n    }\n    \n    $price = get_post_meta($product_id, '_product_price', true);\n    $sizes = get_post_meta($product_id, '_product_sizes', true);\n    $thumbnail = get_the_post_thumbnail_url($product_id, 'large');\n    \n    $product_data = array(\n        'title' => $product->post_title,\n        'description' => $product->post_content,\n        'price' => $price,\n        'sizes' => $sizes,\n        'image' => $thumbnail\n    );\n    \n    wp_send_json_success($product_data);\n}\nadd_action('wp_ajax_get_product_details', 'handle_get_product_details');\nadd_action('wp_ajax_nopriv_get_product_details', 'handle_get_product_details');\n\n// Contact form handler\nfunction handle_contact_form() {\n    check_ajax_referer('colombe_nonce', 'nonce');\n    \n    $name = sanitize_text_field($_POST['name']);\n    $email = sanitize_email($_POST['email']);\n    $subject = sanitize_text_field($_POST['subject']);\n    $message = sanitize_textarea_field($_POST['message']);\n    \n    $to = get_option('admin_email');\n    $headers = array('Content-Type: text/html; charset=UTF-8');\n    \n    $email_content = \"\n    <h3>New Contact Form Submission</h3>\n    <p><strong>Name:</strong> {$name}</p>\n    <p><strong>Email:</strong> {$email}</p>\n    <p><strong>Subject:</strong> {$subject}</p>\n    <p><strong>Message:</strong></p>\n    <p>{$message}</p>\n    \";\n    \n    if (wp_mail($to, 'Contact Form: ' . $subject, $email_content, $headers)) {\n        wp_send_json_success(array('message' => 'Message sent successfully!'));\n    } else {\n        wp_send_json_error(array('message' => 'Failed to send message. Please try again.'));\n    }\n}\nadd_action('wp_ajax_contact_form', 'handle_contact_form');\nadd_action('wp_ajax_nopriv_contact_form', 'handle_contact_form');\n\n// Widget areas\nfunction colombe_blank_widgets_init() {\n    register_sidebar(array(\n        'name'          => 'Footer Widget Area',\n        'id'            => 'footer-1',\n        'description'   => 'Add widgets here to appear in your footer.',\n        'before_widget' => '<div id=\"%1$s\" class=\"widget %2$s\">',\n        'after_widget'  => '</div>',\n        'before_title'  => '<h3 class=\"widget-title\">',\n        'after_title'   => '</h3>',\n    ));\n}\nadd_action('widgets_init', 'colombe_blank_widgets_init');\n\n// Initialize sessions\nfunction colombe_blank_init_session() {\n    if (!session_id()) {\n        session_start();\n    }\n}\nadd_action('init', 'colombe_blank_init_session');\n\n// Custom excerpt length\nfunction colombe_blank_excerpt_length($length) {\n    return 20;\n}\nadd_filter('excerpt_length', 'colombe_blank_excerpt_length');\n\n// Remove WordPress version from head\nremove_action('wp_head', 'wp_generator');\n?>","size_bytes":12032},"wordpress-backup/wp-content/themes/colombe-blank/header.php":{"content":"<!DOCTYPE html>\n<html <?php language_attributes(); ?>>\n<head>\n    <meta charset=\"<?php bloginfo('charset'); ?>\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"profile\" href=\"https://gmpg.org/xfn/11\">\n    <?php wp_head(); ?>\n</head>\n\n<body <?php body_class(); ?>>","size_bytes":304},"wordpress-backup/wp-content/themes/colombe-blank/index.php":{"content":"<?php\n/**\n * The main template file\n */\n\nget_header(); ?>\n\n<div id=\"pentacle-startup\" class=\"pentacle-startup\">\n    <div class=\"startup-title\">COLOMBE BLANK</div>\n    <canvas id=\"pentacle-canvas\" class=\"pentacle-canvas\"></canvas>\n    <div class=\"pentacle-enter-text\">Click to enter</div>\n</div>\n\n<div id=\"main-site\" class=\"main-container hidden\">\n    <nav class=\"top-nav\">\n        <div class=\"nav-left\">\n            <button id=\"menu-toggle\" class=\"menu-toggle\">MENU</button>\n            <a href=\"<?php echo home_url(); ?>\" class=\"brand\">COLOMBE BLANK</a>\n        </div>\n        <div class=\"nav-right\">\n            <button id=\"text-menu-toggle\" class=\"menu-toggle\">INFO</button>\n        </div>\n    </nav>\n\n    <!-- Left Sidebar -->\n    <div id=\"left-sidebar\" class=\"sidebar\">\n        <div class=\"sidebar-content\">\n            <h3>CATEGORIES</h3>\n            <ul>\n                <li><a href=\"#\" data-category=\"women\">WOMEN</a></li>\n                <li><a href=\"#\" data-category=\"men\">MEN</a></li>\n            </ul>\n            \n            <h3>FILTERS</h3>\n            <ul>\n                <li><a href=\"#\" data-type=\"clothing\">CLOTHING</a></li>\n                <li><a href=\"#\" data-type=\"accessories\">ACCESSORIES</a></li>\n                <li><a href=\"#\" data-type=\"shoes\">SHOES</a></li>\n            </ul>\n            \n            <h3>SORT</h3>\n            <ul>\n                <li><a href=\"#\" data-sort=\"newest\">NEWEST</a></li>\n                <li><a href=\"#\" data-sort=\"price-low\">PRICE: LOW TO HIGH</a></li>\n                <li><a href=\"#\" data-sort=\"price-high\">PRICE: HIGH TO LOW</a></li>\n            </ul>\n        </div>\n    </div>\n\n    <!-- Right Sidebar -->\n    <div id=\"right-sidebar\" class=\"sidebar sidebar-right\">\n        <div class=\"sidebar-content\">\n            <h3>INFORMATION</h3>\n            <ul>\n                <li><a href=\"<?php echo home_url('/about'); ?>\">ABOUT</a></li>\n                <li><a href=\"<?php echo home_url('/contact'); ?>\">CONTACT</a></li>\n                <li><a href=\"<?php echo home_url('/shipping'); ?>\">SHIPPING</a></li>\n                <li><a href=\"<?php echo home_url('/returns'); ?>\">RETURNS</a></li>\n                <li><a href=\"<?php echo home_url('/size-guide'); ?>\">SIZE GUIDE</a></li>\n                <li><a href=\"<?php echo home_url('/faq'); ?>\">FAQ</a></li>\n                <li><a href=\"#\" id=\"cart-toggle\">CART (<span id=\"cart-count\">0</span>)</a></li>\n            </ul>\n        </div>\n    </div>\n\n    <!-- Main Content -->\n    <main class=\"product-grid\" id=\"product-grid\">\n        <?php\n        // Get products\n        $products_query = new WP_Query(array(\n            'post_type' => 'product',\n            'posts_per_page' => -1,\n            'post_status' => 'publish'\n        ));\n\n        if ($products_query->have_posts()) :\n            while ($products_query->have_posts()) : $products_query->the_post();\n                $price = get_post_meta(get_the_ID(), '_product_price', true);\n                $sizes = get_post_meta(get_the_ID(), '_product_sizes', true);\n                $in_stock = get_post_meta(get_the_ID(), '_product_in_stock', true);\n                $categories = wp_get_post_terms(get_the_ID(), 'product_category');\n                $types = wp_get_post_terms(get_the_ID(), 'product_type');\n                \n                $category_classes = '';\n                foreach ($categories as $cat) {\n                    $category_classes .= ' category-' . $cat->slug;\n                }\n                foreach ($types as $type) {\n                    $category_classes .= ' type-' . $type->slug;\n                }\n        ?>\n            <article class=\"product-card<?php echo $category_classes; ?>\" data-product-id=\"<?php the_ID(); ?>\">\n                <?php if (has_post_thumbnail()) : ?>\n                    <img src=\"<?php echo get_the_post_thumbnail_url(get_the_ID(), 'large'); ?>\" alt=\"<?php the_title(); ?>\" class=\"product-image\">\n                <?php endif; ?>\n                <div class=\"product-info\">\n                    <h3 class=\"product-name\"><?php the_title(); ?></h3>\n                    <?php if ($price) : ?>\n                        <p class=\"product-price\">$<?php echo number_format($price, 2); ?></p>\n                    <?php endif; ?>\n                </div>\n            </article>\n        <?php\n            endwhile;\n            wp_reset_postdata();\n        endif;\n        ?>\n    </main>\n\n    <!-- Product Detail Overlay -->\n    <div id=\"product-overlay\" class=\"product-overlay hidden\">\n        <div class=\"product-detail\">\n            <button class=\"close-button\" id=\"close-product\">&times;</button>\n            <div class=\"product-detail-image\">\n                <img id=\"detail-image\" src=\"\" alt=\"\">\n            </div>\n            <div class=\"product-detail-content\">\n                <h2 id=\"detail-title\"></h2>\n                <p id=\"detail-price\"></p>\n                <div id=\"detail-description\"></div>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"size-select\">Size</label>\n                    <select id=\"size-select\" class=\"form-select\">\n                        <option value=\"\">Select Size</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"quantity\">Quantity</label>\n                    <input type=\"number\" id=\"quantity\" class=\"form-input\" value=\"1\" min=\"1\">\n                </div>\n                <button id=\"add-to-cart-btn\" class=\"form-button\">ADD TO CART</button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Cart Overlay -->\n    <div id=\"cart-overlay\" class=\"cart-overlay\">\n        <div class=\"cart-content\">\n            <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;\">\n                <h3>SHOPPING CART</h3>\n                <button id=\"close-cart\">&times;</button>\n            </div>\n            <div id=\"cart-items\"></div>\n            <div id=\"cart-total\" style=\"margin-top: 2rem; padding-top: 2rem; border-top: 1px solid var(--border);\"></div>\n            <button class=\"form-button\" style=\"width: 100%; margin-top: 1rem;\">CHECKOUT</button>\n        </div>\n    </div>\n</div>\n\n<?php get_footer(); ?>","size_bytes":6210},"wordpress-backup/wp-content/themes/colombe-blank/page-about.php":{"content":"<?php\n/**\n * Template for About page\n */\n\nget_header(); ?>\n\n<div class=\"main-container\">\n    <nav class=\"top-nav\">\n        <div class=\"nav-left\">\n            <a href=\"<?php echo home_url(); ?>\" class=\"menu-toggle\">&larr; BACK</a>\n            <a href=\"<?php echo home_url(); ?>\" class=\"brand\">COLOMBE BLANK</a>\n        </div>\n    </nav>\n\n    <main style=\"margin-top: 60px; padding: 4rem 2rem; max-width: 800px; margin-left: auto; margin-right: auto;\">\n        <?php while (have_posts()) : the_post(); ?>\n            <article>\n                <header>\n                    <h1 style=\"font-size: 2rem; margin-bottom: 2rem; text-align: center;\"><?php the_title(); ?></h1>\n                </header>\n                <div class=\"content\">\n                    <?php the_content(); ?>\n                </div>\n            </article>\n        <?php endwhile; ?>\n        \n        <?php if (!have_posts()) : ?>\n            <h1>ABOUT COLOMBE BLANK</h1>\n            <p>Colombe Blank represents the intersection of minimalist design and luxury fashion. Founded on the principle that true elegance lies in simplicity, we create timeless pieces that transcend seasonal trends.</p>\n            \n            <h2>Our Philosophy</h2>\n            <p>Every piece in our collection is carefully curated to embody our core values:</p>\n            <ul>\n                <li>Minimalist aesthetics with maximum impact</li>\n                <li>Sustainable and ethical production practices</li>\n                <li>Timeless design over fleeting trends</li>\n                <li>Quality craftsmanship in every detail</li>\n            </ul>\n            \n            <h2>The Collections</h2>\n            <p>Our men's and women's collections feature carefully selected clothing, accessories, and footwear that form the foundation of a conscious wardrobe. Each item is designed to work harmoniously with others, creating endless possibilities for personal expression.</p>\n            \n            <h2>Commitment to Excellence</h2>\n            <p>From the initial design concept to the final stitch, we maintain an unwavering commitment to quality. Our pieces are made to last, both in terms of construction and style, representing an investment in lasting elegance.</p>\n        <?php endif; ?>\n    </main>\n</div>\n\n<?php get_footer(); ?>","size_bytes":2295},"wordpress-backup/wp-content/themes/colombe-blank/page-contact.php":{"content":"<?php\n/**\n * Template for Contact page\n */\n\nget_header(); ?>\n\n<div class=\"main-container\">\n    <nav class=\"top-nav\">\n        <div class=\"nav-left\">\n            <a href=\"<?php echo home_url(); ?>\" class=\"menu-toggle\">&larr; BACK</a>\n            <a href=\"<?php echo home_url(); ?>\" class=\"brand\">COLOMBE BLANK</a>\n        </div>\n    </nav>\n\n    <main style=\"margin-top: 60px; padding: 4rem 2rem; max-width: 600px; margin-left: auto; margin-right: auto;\">\n        <h1 style=\"font-size: 2rem; margin-bottom: 2rem; text-align: center;\">CONTACT</h1>\n        \n        <form id=\"contact-form\" style=\"margin-bottom: 3rem;\">\n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"contact-name\">Name</label>\n                <input type=\"text\" id=\"contact-name\" name=\"name\" class=\"form-input\" required>\n            </div>\n            \n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"contact-email\">Email</label>\n                <input type=\"email\" id=\"contact-email\" name=\"email\" class=\"form-input\" required>\n            </div>\n            \n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"contact-subject\">Subject</label>\n                <input type=\"text\" id=\"contact-subject\" name=\"subject\" class=\"form-input\" required>\n            </div>\n            \n            <div class=\"form-group\">\n                <label class=\"form-label\" for=\"contact-message\">Message</label>\n                <textarea id=\"contact-message\" name=\"message\" class=\"form-textarea\" rows=\"5\" required></textarea>\n            </div>\n            \n            <button type=\"submit\" class=\"form-button\" style=\"width: 100%;\">SEND MESSAGE</button>\n        </form>\n        \n        <div style=\"text-align: center; border-top: 1px solid var(--border); padding-top: 2rem;\">\n            <h3>OTHER WAYS TO REACH US</h3>\n            <p>EMAIL: info@colombeblank.com</p>\n            <p>PHONE: +1 (555) 123-4567</p>\n            <p>ADDRESS: 123 Fashion Avenue, New York, NY 10001</p>\n        </div>\n    </main>\n</div>\n\n<script>\ndocument.getElementById('contact-form').addEventListener('submit', function(e) {\n    e.preventDefault();\n    \n    const formData = new FormData(this);\n    formData.append('action', 'contact_form');\n    formData.append('nonce', colombe_ajax.nonce);\n    \n    fetch(colombe_ajax.ajax_url, {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.success) {\n            alert('Message sent successfully!');\n            this.reset();\n        } else {\n            alert('Error sending message. Please try again.');\n        }\n    })\n    .catch(error => {\n        alert('Error sending message. Please try again.');\n    });\n});\n</script>\n\n<?php get_footer(); ?>","size_bytes":2800},"wordpress-backup/wp-content/themes/colombe-blank/page.php":{"content":"<?php\n/**\n * Template for pages\n */\n\nget_header(); ?>\n\n<div class=\"main-container\">\n    <nav class=\"top-nav\">\n        <div class=\"nav-left\">\n            <a href=\"<?php echo home_url(); ?>\" class=\"menu-toggle\">&larr; BACK</a>\n            <a href=\"<?php echo home_url(); ?>\" class=\"brand\">COLOMBE BLANK</a>\n        </div>\n    </nav>\n\n    <main style=\"margin-top: 60px; padding: 4rem 2rem; max-width: 800px; margin-left: auto; margin-right: auto;\">\n        <?php while (have_posts()) : the_post(); ?>\n            <article>\n                <header>\n                    <h1 style=\"font-size: 2rem; margin-bottom: 2rem; text-align: center;\"><?php the_title(); ?></h1>\n                </header>\n                <div class=\"content\">\n                    <?php the_content(); ?>\n                </div>\n            </article>\n        <?php endwhile; ?>\n    </main>\n</div>\n\n<?php get_footer(); ?>","size_bytes":885},"wordpress-backup/wp-content/themes/colombe-blank/single-product.php":{"content":"<?php\n/**\n * Template for single product\n */\n\nget_header();\n\nwhile (have_posts()) : the_post();\n    $price = get_post_meta(get_the_ID(), '_product_price', true);\n    $sizes = get_post_meta(get_the_ID(), '_product_sizes', true);\n    $in_stock = get_post_meta(get_the_ID(), '_product_in_stock', true);\n?>\n\n<div class=\"main-container\">\n    <nav class=\"top-nav\">\n        <div class=\"nav-left\">\n            <a href=\"<?php echo home_url(); ?>\" class=\"menu-toggle\">&larr; BACK</a>\n            <a href=\"<?php echo home_url(); ?>\" class=\"brand\">COLOMBE BLANK</a>\n        </div>\n    </nav>\n\n    <main style=\"margin-top: 60px; padding: 2rem; max-width: 1200px; margin-left: auto; margin-right: auto;\">\n        <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 4rem; align-items: center;\">\n            <div>\n                <?php if (has_post_thumbnail()) : ?>\n                    <img src=\"<?php echo get_the_post_thumbnail_url(get_the_ID(), 'large'); ?>\" \n                         alt=\"<?php the_title(); ?>\" \n                         style=\"width: 100%; height: auto; border: 1px solid var(--border);\">\n                <?php endif; ?>\n            </div>\n            \n            <div>\n                <h1 style=\"font-size: 2rem; margin-bottom: 1rem;\"><?php the_title(); ?></h1>\n                \n                <?php if ($price) : ?>\n                    <p style=\"font-size: 1.5rem; margin-bottom: 2rem; color: var(--text-muted);\">$<?php echo number_format($price, 2); ?></p>\n                <?php endif; ?>\n                \n                <div style=\"margin-bottom: 2rem;\">\n                    <?php the_content(); ?>\n                </div>\n                \n                <?php if ($in_stock) : ?>\n                    <form style=\"margin-bottom: 2rem;\">\n                        <?php if ($sizes) : ?>\n                            <div class=\"form-group\">\n                                <label class=\"form-label\" for=\"size-select\">Size</label>\n                                <select id=\"size-select\" class=\"form-select\">\n                                    <option value=\"\">Select Size</option>\n                                    <?php\n                                    $size_array = explode(',', $sizes);\n                                    foreach ($size_array as $size) :\n                                        $size = trim($size);\n                                    ?>\n                                        <option value=\"<?php echo esc_attr($size); ?>\"><?php echo esc_html($size); ?></option>\n                                    <?php endforeach; ?>\n                                </select>\n                            </div>\n                        <?php endif; ?>\n                        \n                        <div class=\"form-group\">\n                            <label class=\"form-label\" for=\"quantity\">Quantity</label>\n                            <input type=\"number\" id=\"quantity\" class=\"form-input\" value=\"1\" min=\"1\">\n                        </div>\n                        \n                        <button type=\"button\" class=\"form-button\" onclick=\"addToCart(<?php echo get_the_ID(); ?>)\" style=\"width: 100%;\">\n                            ADD TO CART\n                        </button>\n                    </form>\n                <?php else : ?>\n                    <p style=\"color: #999;\">OUT OF STOCK</p>\n                <?php endif; ?>\n            </div>\n        </div>\n    </main>\n</div>\n\n<script>\nfunction addToCart(productId) {\n    const size = document.getElementById('size-select').value;\n    const quantity = document.getElementById('quantity').value;\n    \n    if (!size) {\n        alert('Please select a size');\n        return;\n    }\n    \n    fetch(colombe_ajax.ajax_url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n            action: 'add_to_cart',\n            product_id: productId,\n            size: size,\n            quantity: quantity,\n            nonce: colombe_ajax.nonce\n        })\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.success) {\n            alert('Product added to cart!');\n        } else {\n            alert('Error adding to cart');\n        }\n    });\n}\n</script>\n\n<?php \nendwhile;\nget_footer(); \n?>","size_bytes":4308},"wordpress-backup/wp-content/themes/colombe-blank/style.css":{"content":"/*\nTheme Name: Colombe Blank\nDescription: A minimalist luxury fashion theme with pentacle startup animation and monospace typography\nVersion: 1.0\nAuthor: Colombe Blank\nText Domain: colombe-blank\n*/\n\n:root {\n  /* Color system */\n  --primary: hsl(0, 0%, 0%);\n  --secondary: hsl(0, 0%, 100%);\n  --text: hsl(0, 0%, 0%);\n  --text-muted: hsl(0, 0%, 40%);\n  --border: hsl(0, 0%, 90%);\n  --hover: hsl(0, 0%, 95%);\n  \n  /* Typography */\n  --font-mono: \"Courier New\", Courier, monospace;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: var(--font-mono);\n  color: var(--text);\n  background-color: var(--secondary);\n  line-height: 1.6;\n  font-size: 14px;\n  -webkit-font-smoothing: antialiased !important;\n  -moz-osx-font-smoothing: grayscale !important;\n  text-rendering: optimizeLegibility !important;\n  font-feature-settings: \"liga\" 1, \"kern\" 1 !important;\n}\n\n/* Borromean Rings Startup Styles */\n.pentacle-startup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 9999;\n}\n\n.startup-title {\n  position: absolute;\n  top: 60px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-family: var(--font-mono);\n  font-size: 24px;\n  color: #000;\n  letter-spacing: 0.2em;\n  font-weight: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.pentacle-canvas {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n.pentacle-enter-text {\n  position: absolute;\n  bottom: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  font-family: var(--font-mono);\n  font-size: 0.875rem;\n  color: #666;\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.5; }\n}\n\n/* Main Layout */\n.main-container {\n  min-height: 100vh;\n  position: relative;\n}\n\n/* Navigation */\n.top-nav {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  background: var(--secondary);\n  border-bottom: 1px solid var(--border);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 2rem;\n  z-index: 100;\n}\n\n.nav-left {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.menu-toggle {\n  background: none;\n  border: none;\n  font-family: var(--font-mono);\n  font-size: 14px;\n  cursor: pointer;\n  color: var(--text);\n}\n\n.brand {\n  font-family: var(--font-mono);\n  font-size: 16px;\n  font-weight: normal;\n  letter-spacing: 2px;\n  text-decoration: none;\n  color: var(--text);\n}\n\n.nav-right {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n/* Sidebars */\n.sidebar {\n  position: fixed;\n  top: 60px;\n  width: 300px;\n  height: calc(100vh - 60px);\n  background: var(--secondary);\n  border: 1px solid var(--border);\n  transform: translateX(-100%);\n  transition: transform 0.3s ease;\n  z-index: 90;\n  overflow-y: auto;\n}\n\n.sidebar.open {\n  transform: translateX(0);\n}\n\n.sidebar-right {\n  right: 0;\n  transform: translateX(100%);\n}\n\n.sidebar-right.open {\n  transform: translateX(0);\n}\n\n.sidebar-content {\n  padding: 2rem;\n}\n\n.sidebar h3 {\n  font-size: 14px;\n  margin-bottom: 1rem;\n  color: var(--text);\n}\n\n.sidebar ul {\n  list-style: none;\n}\n\n.sidebar li {\n  margin-bottom: 0.5rem;\n}\n\n.sidebar a {\n  color: var(--text);\n  text-decoration: none;\n  font-size: 14px;\n  display: block;\n  padding: 0.5rem 0;\n}\n\n.sidebar a:hover {\n  color: var(--text-muted);\n}\n\n/* Product Grid */\n.product-grid {\n  margin-top: 60px;\n  padding: 2rem;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 2rem;\n}\n\n.product-card {\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n\n.product-card:hover {\n  transform: translateY(-2px);\n}\n\n.product-image {\n  width: 100%;\n  aspect-ratio: 2/3;\n  object-fit: cover;\n  border: 1px solid var(--border);\n}\n\n.product-info {\n  padding: 1rem 0;\n}\n\n.product-name {\n  font-size: 14px;\n  margin-bottom: 0.5rem;\n}\n\n.product-price {\n  font-size: 14px;\n  color: var(--text-muted);\n}\n\n/* Product Detail Overlay */\n.product-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 200;\n}\n\n.product-detail {\n  background: var(--secondary);\n  max-width: 90vw;\n  max-height: 90vh;\n  display: flex;\n  overflow: hidden;\n}\n\n.product-detail-image {\n  flex: 1;\n  max-width: 50%;\n}\n\n.product-detail-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.product-detail-content {\n  flex: 1;\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.close-button {\n  position: absolute;\n  top: 2rem;\n  right: 2rem;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: var(--secondary);\n}\n\n/* Forms */\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-size: 14px;\n}\n\n.form-input,\n.form-select,\n.form-textarea {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid var(--border);\n  background: var(--secondary);\n  font-family: var(--font-mono);\n  font-size: 14px;\n}\n\n.form-button {\n  background: var(--primary);\n  color: var(--secondary);\n  border: none;\n  padding: 0.75rem 2rem;\n  font-family: var(--font-mono);\n  font-size: 14px;\n  cursor: pointer;\n  transition: opacity 0.2s ease;\n}\n\n.form-button:hover {\n  opacity: 0.8;\n}\n\n/* Cart */\n.cart-overlay {\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 400px;\n  height: 100vh;\n  background: var(--secondary);\n  border-left: 1px solid var(--border);\n  transform: translateX(100%);\n  transition: transform 0.3s ease;\n  z-index: 150;\n  overflow-y: auto;\n}\n\n.cart-overlay.open {\n  transform: translateX(0);\n}\n\n.cart-content {\n  padding: 2rem;\n}\n\n.cart-item {\n  display: flex;\n  gap: 1rem;\n  padding: 1rem 0;\n  border-bottom: 1px solid var(--border);\n}\n\n.cart-item-image {\n  width: 80px;\n  height: 120px;\n  object-fit: cover;\n  border: 1px solid var(--border);\n}\n\n.cart-item-info {\n  flex: 1;\n}\n\n.cart-item-name {\n  font-size: 14px;\n  margin-bottom: 0.5rem;\n}\n\n.cart-item-price {\n  font-size: 14px;\n  color: var(--text-muted);\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .top-nav {\n    padding: 0 1rem;\n  }\n  \n  .product-grid {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 1rem;\n    padding: 1rem;\n  }\n  \n  .sidebar {\n    width: 100%;\n  }\n  \n  .product-detail {\n    flex-direction: column;\n    max-width: 95vw;\n    max-height: 95vh;\n  }\n  \n  .product-detail-image {\n    max-width: 100%;\n    max-height: 50%;\n  }\n  \n  .product-detail-content {\n    padding: 2rem;\n  }\n  \n  .cart-overlay {\n    width: 100%;\n  }\n}\n\n/* Hidden class for JavaScript */\n.hidden {\n  display: none !important;\n}\n\n/* Loading states */\n.loading {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.spinner {\n  width: 20px;\n  height: 20px;\n  border: 2px solid var(--border);\n  border-top-color: var(--primary);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  display: inline-block;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}","size_bytes":7100},"wordpress-backup/wp-content/themes/colombe-blank/assets/js/main.js":{"content":"document.addEventListener('DOMContentLoaded', function() {\n    // Borromean Rings Startup Animation\n    const pentacleStartup = document.getElementById('pentacle-startup');\n    const mainSite = document.getElementById('main-site');\n    const canvas = document.getElementById('pentacle-canvas');\n    const ctx = canvas.getContext('2d');\n    \n    let mousePosition = { x: 0, y: 0 };\n    \n    // Set canvas size\n    function resizeCanvas() {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        drawBorromeanRings();\n    }\n    \n    window.addEventListener('resize', resizeCanvas);\n    resizeCanvas();\n    \n    // Mouse tracking\n    document.addEventListener('mousemove', function(e) {\n        mousePosition = { x: e.clientX, y: e.clientY };\n        drawBorromeanRings();\n    });\n    \n    // Draw Borromean Rings with interactive lighting\n    function drawBorromeanRings() {\n        if (!ctx) return;\n        \n        // Set canvas size with device pixel ratio for high quality\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        const displayWidth = window.innerWidth;\n        const displayHeight = window.innerHeight;\n        \n        canvas.width = displayWidth * devicePixelRatio;\n        canvas.height = displayHeight * devicePixelRatio;\n        canvas.style.width = displayWidth + 'px';\n        canvas.style.height = displayHeight + 'px';\n        \n        ctx.scale(devicePixelRatio, devicePixelRatio);\n        \n        // Clear canvas\n        ctx.clearRect(0, 0, displayWidth, displayHeight);\n        \n        const centerX = displayWidth / 2;\n        const centerY = displayHeight / 2 + 50; // Offset down for title\n        const ringRadius = Math.min(displayWidth, displayHeight) * 0.08;\n        \n        // Create 7-pointed star with lines from center\n        const starRadius = Math.min(displayWidth, displayHeight) * 0.12;\n        const lines = [];\n        \n        for (let i = 0; i < 7; i++) {\n            const angle = (i * 2 * Math.PI) / 7 - Math.PI / 2; // Start from top\n            const endX = centerX + starRadius * Math.cos(angle);\n            const endY = centerY + starRadius * Math.sin(angle);\n            lines.push({\n                startX: centerX,\n                startY: centerY,\n                endX: endX,\n                endY: endY,\n                angle: angle\n            });\n        }\n\n        // Calculate mouse angle from center\n        const mouseAngle = Math.atan2(mousePosition.y - centerY, mousePosition.x - centerX);\n        const normalizedMouseAngle = ((mouseAngle + Math.PI * 2) % (Math.PI * 2));\n        \n        // Draw lines with directional lighting\n        ctx.lineCap = 'round';\n        ctx.lineJoin = 'round';\n        \n        lines.forEach(function(line, index) {\n            const lineAngle = ((line.angle + Math.PI * 2) % (Math.PI * 2));\n            \n            // Calculate angle difference between mouse and line\n            let angleDiff = Math.abs(normalizedMouseAngle - lineAngle);\n            if (angleDiff > Math.PI) {\n                angleDiff = Math.PI * 2 - angleDiff;\n            }\n            \n            // Calculate intensity based on angle proximity (reduced glow)\n            const maxAngleDiff = Math.PI / 4; // 45 degrees\n            const intensity = angleDiff < maxAngleDiff \n                ? Math.max(0.1, 1 - (angleDiff / maxAngleDiff)) * 0.4 // Reduced intensity\n                : 0.1;\n            \n            // Set line color based on intensity\n            const gray = Math.floor(intensity * 150); // Lighter gray when mouse nearby\n            ctx.strokeStyle = 'rgb(' + gray + ', ' + gray + ', ' + gray + ')';\n            ctx.lineWidth = 2;\n            \n            // Draw the line\n            ctx.beginPath();\n            ctx.moveTo(line.startX, line.startY);\n            ctx.lineTo(line.endX, line.endY);\n            ctx.stroke();\n        });\n    }\n    \n    // Click to enter\n    pentacleStartup.addEventListener('click', function() {\n        pentacleStartup.classList.add('hidden');\n        mainSite.classList.remove('hidden');\n    });\n\n    // Navigation functionality\n    const menuToggle = document.getElementById('menu-toggle');\n    const textMenuToggle = document.getElementById('text-menu-toggle');\n    const leftSidebar = document.getElementById('left-sidebar');\n    const rightSidebar = document.getElementById('right-sidebar');\n\n    if (menuToggle && leftSidebar) {\n        menuToggle.addEventListener('click', function() {\n            leftSidebar.classList.toggle('active');\n            rightSidebar.classList.remove('active');\n        });\n    }\n\n    if (textMenuToggle && rightSidebar) {\n        textMenuToggle.addEventListener('click', function() {\n            rightSidebar.classList.toggle('active');\n            leftSidebar.classList.remove('active');\n        });\n    }\n\n    // Close sidebars when clicking outside\n    document.addEventListener('click', function(e) {\n        if (!leftSidebar.contains(e.target) && !menuToggle.contains(e.target)) {\n            leftSidebar.classList.remove('active');\n        }\n        if (!rightSidebar.contains(e.target) && !textMenuToggle.contains(e.target)) {\n            rightSidebar.classList.remove('active');\n        }\n    });\n});","size_bytes":5231}}}